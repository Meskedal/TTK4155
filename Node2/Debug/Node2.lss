
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000132  00800200  00001cfc  00001d90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cfc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003a  00800332  00800332  00001ec2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ec2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000348  00000000  00000000  00001f1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000265c  00000000  00000000  00002266  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001369  00000000  00000000  000048c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001a7c  00000000  00000000  00005c2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000784  00000000  00000000  000076a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000008a7  00000000  00000000  00007e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000014fc  00000000  00000000  000086d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000258  00000000  00000000  00009bcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	a7 c1       	rjmp	.+846    	; 0x35c <__vector_3>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	d6 c0       	rjmp	.+428    	; 0x1c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	6a c4       	rjmp	.+2260   	; 0x912 <__vector_15>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	ed c6       	rjmp	.+3546   	; 0xe78 <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	57 07       	cpc	r21, r23
      e6:	a9 07       	cpc	r26, r25
      e8:	a9 07       	cpc	r26, r25
      ea:	a9 07       	cpc	r26, r25
      ec:	a9 07       	cpc	r26, r25
      ee:	a9 07       	cpc	r26, r25
      f0:	a9 07       	cpc	r26, r25
      f2:	a9 07       	cpc	r26, r25
      f4:	57 07       	cpc	r21, r23
      f6:	a9 07       	cpc	r26, r25
      f8:	a9 07       	cpc	r26, r25
      fa:	a9 07       	cpc	r26, r25
      fc:	a9 07       	cpc	r26, r25
      fe:	a9 07       	cpc	r26, r25
     100:	a9 07       	cpc	r26, r25
     102:	a9 07       	cpc	r26, r25
     104:	59 07       	cpc	r21, r25
     106:	a9 07       	cpc	r26, r25
     108:	a9 07       	cpc	r26, r25
     10a:	a9 07       	cpc	r26, r25
     10c:	a9 07       	cpc	r26, r25
     10e:	a9 07       	cpc	r26, r25
     110:	a9 07       	cpc	r26, r25
     112:	a9 07       	cpc	r26, r25
     114:	a9 07       	cpc	r26, r25
     116:	a9 07       	cpc	r26, r25
     118:	a9 07       	cpc	r26, r25
     11a:	a9 07       	cpc	r26, r25
     11c:	a9 07       	cpc	r26, r25
     11e:	a9 07       	cpc	r26, r25
     120:	a9 07       	cpc	r26, r25
     122:	a9 07       	cpc	r26, r25
     124:	59 07       	cpc	r21, r25
     126:	a9 07       	cpc	r26, r25
     128:	a9 07       	cpc	r26, r25
     12a:	a9 07       	cpc	r26, r25
     12c:	a9 07       	cpc	r26, r25
     12e:	a9 07       	cpc	r26, r25
     130:	a9 07       	cpc	r26, r25
     132:	a9 07       	cpc	r26, r25
     134:	a9 07       	cpc	r26, r25
     136:	a9 07       	cpc	r26, r25
     138:	a9 07       	cpc	r26, r25
     13a:	a9 07       	cpc	r26, r25
     13c:	a9 07       	cpc	r26, r25
     13e:	a9 07       	cpc	r26, r25
     140:	a9 07       	cpc	r26, r25
     142:	a9 07       	cpc	r26, r25
     144:	a5 07       	cpc	r26, r21
     146:	a9 07       	cpc	r26, r25
     148:	a9 07       	cpc	r26, r25
     14a:	a9 07       	cpc	r26, r25
     14c:	a9 07       	cpc	r26, r25
     14e:	a9 07       	cpc	r26, r25
     150:	a9 07       	cpc	r26, r25
     152:	a9 07       	cpc	r26, r25
     154:	82 07       	cpc	r24, r18
     156:	a9 07       	cpc	r26, r25
     158:	a9 07       	cpc	r26, r25
     15a:	a9 07       	cpc	r26, r25
     15c:	a9 07       	cpc	r26, r25
     15e:	a9 07       	cpc	r26, r25
     160:	a9 07       	cpc	r26, r25
     162:	a9 07       	cpc	r26, r25
     164:	a9 07       	cpc	r26, r25
     166:	a9 07       	cpc	r26, r25
     168:	a9 07       	cpc	r26, r25
     16a:	a9 07       	cpc	r26, r25
     16c:	a9 07       	cpc	r26, r25
     16e:	a9 07       	cpc	r26, r25
     170:	a9 07       	cpc	r26, r25
     172:	a9 07       	cpc	r26, r25
     174:	76 07       	cpc	r23, r22
     176:	a9 07       	cpc	r26, r25
     178:	a9 07       	cpc	r26, r25
     17a:	a9 07       	cpc	r26, r25
     17c:	a9 07       	cpc	r26, r25
     17e:	a9 07       	cpc	r26, r25
     180:	a9 07       	cpc	r26, r25
     182:	a9 07       	cpc	r26, r25
     184:	94 07       	cpc	r25, r20

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	13 e0       	ldi	r17, 0x03	; 3
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	ec ef       	ldi	r30, 0xFC	; 252
     19e:	fc e1       	ldi	r31, 0x1C	; 28
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	a2 33       	cpi	r26, 0x32	; 50
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	23 e0       	ldi	r18, 0x03	; 3
     1b2:	a2 e3       	ldi	r26, 0x32	; 50
     1b4:	b3 e0       	ldi	r27, 0x03	; 3
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	ac 36       	cpi	r26, 0x6C	; 108
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	4a d2       	rcall	.+1172   	; 0x656 <main>
     1c2:	0c 94 7c 0e 	jmp	0x1cf8	; 0x1cf8 <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <CAN_init>:
 */ 

#include "CAN.h"

void CAN_init(uint8_t mode){
	mcp2515_init(mode);
     1c8:	ae d2       	rcall	.+1372   	; 0x726 <mcp2515_init>
	mcp2515_write(MCP_CANINTE, MCP_RX_INT);
     1ca:	63 e0       	ldi	r22, 0x03	; 3
     1cc:	8b e2       	ldi	r24, 0x2B	; 43
     1ce:	73 d2       	rcall	.+1254   	; 0x6b6 <mcp2515_write>
	cli();
     1d0:	f8 94       	cli
	// Interrupt on falling edge
	//set_bit(EICRA, ISC21);
	//clear_bit(EICRA, ISC20);
	// Enable interrupt
	set_bit(EIMSK,INT2);
     1d2:	ea 9a       	sbi	0x1d, 2	; 29
	set_bit(EIFR,INTF2);
     1d4:	e2 9a       	sbi	0x1c, 2	; 28
	// Enable global interrupts
	sei();
     1d6:	78 94       	sei
     1d8:	08 95       	ret

000001da <CAN_message_send>:
	
}
void CAN_message_send(CAN_message* msg){
     1da:	1f 93       	push	r17
     1dc:	cf 93       	push	r28
     1de:	df 93       	push	r29
     1e0:	ec 01       	movw	r28, r24
	
	mcp2515_write(MCP_TXB0SIDH, (msg->id) >> 3);
     1e2:	68 81       	ld	r22, Y
     1e4:	79 81       	ldd	r23, Y+1	; 0x01
     1e6:	76 95       	lsr	r23
     1e8:	67 95       	ror	r22
     1ea:	76 95       	lsr	r23
     1ec:	67 95       	ror	r22
     1ee:	76 95       	lsr	r23
     1f0:	67 95       	ror	r22
     1f2:	81 e3       	ldi	r24, 0x31	; 49
     1f4:	60 d2       	rcall	.+1216   	; 0x6b6 <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDL, (msg->id) << 5);
     1f6:	68 81       	ld	r22, Y
     1f8:	62 95       	swap	r22
     1fa:	66 0f       	add	r22, r22
     1fc:	60 7e       	andi	r22, 0xE0	; 224
     1fe:	82 e3       	ldi	r24, 0x32	; 50
     200:	5a d2       	rcall	.+1204   	; 0x6b6 <mcp2515_write>
	mcp2515_write(MCP_TXB0DLC, (msg->length));
     202:	6a 81       	ldd	r22, Y+2	; 0x02
     204:	85 e3       	ldi	r24, 0x35	; 53
     206:	57 d2       	rcall	.+1198   	; 0x6b6 <mcp2515_write>
	
	for (uint8_t i = 0; i < msg->length; i++){
     208:	8a 81       	ldd	r24, Y+2	; 0x02
     20a:	88 23       	and	r24, r24
     20c:	61 f0       	breq	.+24     	; 0x226 <CAN_message_send+0x4c>
     20e:	10 e0       	ldi	r17, 0x00	; 0
		mcp2515_write(MCP_TXB0D0+i, msg->data[i]);
     210:	fe 01       	movw	r30, r28
     212:	e1 0f       	add	r30, r17
     214:	f1 1d       	adc	r31, r1
     216:	63 81       	ldd	r22, Z+3	; 0x03
     218:	86 e3       	ldi	r24, 0x36	; 54
     21a:	81 0f       	add	r24, r17
     21c:	4c d2       	rcall	.+1176   	; 0x6b6 <mcp2515_write>
	
	mcp2515_write(MCP_TXB0SIDH, (msg->id) >> 3);
	mcp2515_write(MCP_TXB0SIDL, (msg->id) << 5);
	mcp2515_write(MCP_TXB0DLC, (msg->length));
	
	for (uint8_t i = 0; i < msg->length; i++){
     21e:	1f 5f       	subi	r17, 0xFF	; 255
     220:	8a 81       	ldd	r24, Y+2	; 0x02
     222:	18 17       	cp	r17, r24
     224:	a8 f3       	brcs	.-22     	; 0x210 <CAN_message_send+0x36>
		mcp2515_write(MCP_TXB0D0+i, msg->data[i]);
	}
	mcp2515_request_to_send(MCP_RTS_TX0);
     226:	81 e8       	ldi	r24, 0x81	; 129
     228:	59 d2       	rcall	.+1202   	; 0x6dc <mcp2515_request_to_send>
}
     22a:	df 91       	pop	r29
     22c:	cf 91       	pop	r28
     22e:	1f 91       	pop	r17
     230:	08 95       	ret

00000232 <CAN_receive>:

uint8_t CAN_receive(CAN_message* msg){
     232:	1f 93       	push	r17
     234:	cf 93       	push	r28
     236:	df 93       	push	r29
     238:	ec 01       	movw	r28, r24
	if (CAN_int_flag){
     23a:	80 91 32 03 	lds	r24, 0x0332
     23e:	88 23       	and	r24, r24
     240:	71 f1       	breq	.+92     	; 0x29e <CAN_receive+0x6c>
		uint8_t IDHI = mcp2515_read(MCP_RXB0SIDH); //(msg->id)>>3);
     242:	81 e6       	ldi	r24, 0x61	; 97
     244:	2d d2       	rcall	.+1114   	; 0x6a0 <mcp2515_read>
     246:	18 2f       	mov	r17, r24
		uint8_t IDLO = mcp2515_read(MCP_RXB0SIDL); //5<<(msg->id));
     248:	82 e6       	ldi	r24, 0x62	; 98
     24a:	2a d2       	rcall	.+1108   	; 0x6a0 <mcp2515_read>
		msg->id = (IDHI << 3| IDLO >> 5);
     24c:	48 2f       	mov	r20, r24
     24e:	42 95       	swap	r20
     250:	46 95       	lsr	r20
     252:	47 70       	andi	r20, 0x07	; 7
     254:	21 2f       	mov	r18, r17
     256:	30 e0       	ldi	r19, 0x00	; 0
     258:	c9 01       	movw	r24, r18
     25a:	88 0f       	add	r24, r24
     25c:	99 1f       	adc	r25, r25
     25e:	88 0f       	add	r24, r24
     260:	99 1f       	adc	r25, r25
     262:	88 0f       	add	r24, r24
     264:	99 1f       	adc	r25, r25
     266:	84 2b       	or	r24, r20
     268:	99 83       	std	Y+1, r25	; 0x01
     26a:	88 83       	st	Y, r24
		
		uint8_t length = mcp2515_read(MCP_RXB0DLC);
     26c:	85 e6       	ldi	r24, 0x65	; 101
     26e:	18 d2       	rcall	.+1072   	; 0x6a0 <mcp2515_read>
		msg->length = length;
     270:	8a 83       	std	Y+2, r24	; 0x02
	
	
		for (uint8_t i = 0; i < msg->length; i++){
     272:	88 23       	and	r24, r24
     274:	61 f0       	breq	.+24     	; 0x28e <CAN_receive+0x5c>
     276:	10 e0       	ldi	r17, 0x00	; 0
			msg->data[i] = mcp2515_read(MCP_RXB0D0+i);
     278:	86 e6       	ldi	r24, 0x66	; 102
     27a:	81 0f       	add	r24, r17
     27c:	11 d2       	rcall	.+1058   	; 0x6a0 <mcp2515_read>
     27e:	fe 01       	movw	r30, r28
     280:	e1 0f       	add	r30, r17
     282:	f1 1d       	adc	r31, r1
     284:	83 83       	std	Z+3, r24	; 0x03
		
		uint8_t length = mcp2515_read(MCP_RXB0DLC);
		msg->length = length;
	
	
		for (uint8_t i = 0; i < msg->length; i++){
     286:	1f 5f       	subi	r17, 0xFF	; 255
     288:	8a 81       	ldd	r24, Y+2	; 0x02
     28a:	18 17       	cp	r17, r24
     28c:	a8 f3       	brcs	.-22     	; 0x278 <CAN_receive+0x46>
			msg->data[i] = mcp2515_read(MCP_RXB0D0+i);
		}
		mcp2515_bit_modify(MCP_CANINTF,0x01,0x00); // reset interrupt flag
     28e:	40 e0       	ldi	r20, 0x00	; 0
     290:	61 e0       	ldi	r22, 0x01	; 1
     292:	8c e2       	ldi	r24, 0x2C	; 44
     294:	27 d2       	rcall	.+1102   	; 0x6e4 <mcp2515_bit_modify>
		CAN_int_flag = 0;
     296:	10 92 32 03 	sts	0x0332, r1
		//CAN_print(msg);
		return 1;
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	01 c0       	rjmp	.+2      	; 0x2a0 <CAN_receive+0x6e>
	}
	return 0;
     29e:	80 e0       	ldi	r24, 0x00	; 0
}
     2a0:	df 91       	pop	r29
     2a2:	cf 91       	pop	r28
     2a4:	1f 91       	pop	r17
     2a6:	08 95       	ret

000002a8 <CAN_print>:

void CAN_print(CAN_message* msg){
     2a8:	cf 92       	push	r12
     2aa:	df 92       	push	r13
     2ac:	ef 92       	push	r14
     2ae:	ff 92       	push	r15
     2b0:	0f 93       	push	r16
     2b2:	1f 93       	push	r17
     2b4:	cf 93       	push	r28
     2b6:	df 93       	push	r29
     2b8:	6c 01       	movw	r12, r24
	printf("CAN msg ID: %d \n", msg->id);
     2ba:	fc 01       	movw	r30, r24
     2bc:	81 81       	ldd	r24, Z+1	; 0x01
     2be:	8f 93       	push	r24
     2c0:	80 81       	ld	r24, Z
     2c2:	8f 93       	push	r24
     2c4:	89 e1       	ldi	r24, 0x19	; 25
     2c6:	92 e0       	ldi	r25, 0x02	; 2
     2c8:	9f 93       	push	r25
     2ca:	8f 93       	push	r24
     2cc:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <printf>
	printf("CAN msg length: %d \n", msg->length);
     2d0:	f6 01       	movw	r30, r12
     2d2:	82 81       	ldd	r24, Z+2	; 0x02
     2d4:	1f 92       	push	r1
     2d6:	8f 93       	push	r24
     2d8:	8a e2       	ldi	r24, 0x2A	; 42
     2da:	92 e0       	ldi	r25, 0x02	; 2
     2dc:	9f 93       	push	r25
     2de:	8f 93       	push	r24
     2e0:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <printf>
	printf("CAN msg data: ");
     2e4:	8f e3       	ldi	r24, 0x3F	; 63
     2e6:	92 e0       	ldi	r25, 0x02	; 2
     2e8:	9f 93       	push	r25
     2ea:	8f 93       	push	r24
     2ec:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <printf>
	for (int i = 0; i < msg->length; i++){
     2f0:	f6 01       	movw	r30, r12
     2f2:	82 81       	ldd	r24, Z+2	; 0x02
     2f4:	2d b7       	in	r18, 0x3d	; 61
     2f6:	3e b7       	in	r19, 0x3e	; 62
     2f8:	26 5f       	subi	r18, 0xF6	; 246
     2fa:	3f 4f       	sbci	r19, 0xFF	; 255
     2fc:	0f b6       	in	r0, 0x3f	; 63
     2fe:	f8 94       	cli
     300:	3e bf       	out	0x3e, r19	; 62
     302:	0f be       	out	0x3f, r0	; 63
     304:	2d bf       	out	0x3d, r18	; 61
     306:	88 23       	and	r24, r24
     308:	e1 f0       	breq	.+56     	; 0x342 <CAN_print+0x9a>
     30a:	76 01       	movw	r14, r12
     30c:	33 e0       	ldi	r19, 0x03	; 3
     30e:	e3 0e       	add	r14, r19
     310:	f1 1c       	adc	r15, r1
     312:	c0 e0       	ldi	r28, 0x00	; 0
     314:	d0 e0       	ldi	r29, 0x00	; 0
		printf("%d \t",msg->data[i]);
     316:	03 e5       	ldi	r16, 0x53	; 83
     318:	12 e0       	ldi	r17, 0x02	; 2
     31a:	f7 01       	movw	r30, r14
     31c:	81 91       	ld	r24, Z+
     31e:	7f 01       	movw	r14, r30
     320:	1f 92       	push	r1
     322:	8f 93       	push	r24
     324:	1f 93       	push	r17
     326:	0f 93       	push	r16
     328:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <printf>

void CAN_print(CAN_message* msg){
	printf("CAN msg ID: %d \n", msg->id);
	printf("CAN msg length: %d \n", msg->length);
	printf("CAN msg data: ");
	for (int i = 0; i < msg->length; i++){
     32c:	21 96       	adiw	r28, 0x01	; 1
     32e:	f6 01       	movw	r30, r12
     330:	22 81       	ldd	r18, Z+2	; 0x02
     332:	30 e0       	ldi	r19, 0x00	; 0
     334:	0f 90       	pop	r0
     336:	0f 90       	pop	r0
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	c2 17       	cp	r28, r18
     33e:	d3 07       	cpc	r29, r19
     340:	64 f3       	brlt	.-40     	; 0x31a <CAN_print+0x72>
		printf("%d \t",msg->data[i]);
	}
	printf("\n");
     342:	8a e0       	ldi	r24, 0x0A	; 10
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <putchar>
}
     34a:	df 91       	pop	r29
     34c:	cf 91       	pop	r28
     34e:	1f 91       	pop	r17
     350:	0f 91       	pop	r16
     352:	ff 90       	pop	r15
     354:	ef 90       	pop	r14
     356:	df 90       	pop	r13
     358:	cf 90       	pop	r12
     35a:	08 95       	ret

0000035c <__vector_3>:

ISR(INT2_vect) //interrupt handler
{
     35c:	1f 92       	push	r1
     35e:	0f 92       	push	r0
     360:	0f b6       	in	r0, 0x3f	; 63
     362:	0f 92       	push	r0
     364:	11 24       	eor	r1, r1
     366:	8f 93       	push	r24
	CAN_int_flag = 1;
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	80 93 32 03 	sts	0x0332, r24
}
     36e:	8f 91       	pop	r24
     370:	0f 90       	pop	r0
     372:	0f be       	out	0x3f, r0	; 63
     374:	0f 90       	pop	r0
     376:	1f 90       	pop	r1
     378:	18 95       	reti

0000037a <ADC_init>:
     37a:	80 98       	cbi	0x10, 0	; 16
     37c:	81 98       	cbi	0x10, 1	; 16
     37e:	ea e7       	ldi	r30, 0x7A	; 122
     380:	f0 e0       	ldi	r31, 0x00	; 0
     382:	80 81       	ld	r24, Z
     384:	80 68       	ori	r24, 0x80	; 128
     386:	80 83       	st	Z, r24
     388:	80 81       	ld	r24, Z
     38a:	81 60       	ori	r24, 0x01	; 1
     38c:	80 83       	st	Z, r24
     38e:	80 81       	ld	r24, Z
     390:	82 60       	ori	r24, 0x02	; 2
     392:	80 83       	st	Z, r24
     394:	80 81       	ld	r24, Z
     396:	84 60       	ori	r24, 0x04	; 4
     398:	80 83       	st	Z, r24
     39a:	ec e7       	ldi	r30, 0x7C	; 124
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	80 81       	ld	r24, Z
     3a0:	80 68       	ori	r24, 0x80	; 128
     3a2:	80 83       	st	Z, r24
     3a4:	80 81       	ld	r24, Z
     3a6:	80 64       	ori	r24, 0x40	; 64
     3a8:	80 83       	st	Z, r24
     3aa:	08 95       	ret

000003ac <ADC_read>:
     3ac:	ea e7       	ldi	r30, 0x7A	; 122
     3ae:	f0 e0       	ldi	r31, 0x00	; 0
     3b0:	80 81       	ld	r24, Z
     3b2:	80 64       	ori	r24, 0x40	; 64
     3b4:	80 83       	st	Z, r24
     3b6:	80 81       	ld	r24, Z
     3b8:	84 ff       	sbrs	r24, 4
     3ba:	fd cf       	rjmp	.-6      	; 0x3b6 <ADC_read+0xa>
     3bc:	80 91 78 00 	lds	r24, 0x0078
     3c0:	20 91 79 00 	lds	r18, 0x0079
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	92 2b       	or	r25, r18
     3c8:	08 95       	ret

000003ca <ADC_read_channel>:
     3ca:	88 23       	and	r24, r24
     3cc:	19 f0       	breq	.+6      	; 0x3d4 <ADC_read_channel+0xa>
     3ce:	81 30       	cpi	r24, 0x01	; 1
     3d0:	41 f0       	breq	.+16     	; 0x3e2 <ADC_read_channel+0x18>
     3d2:	0e c0       	rjmp	.+28     	; 0x3f0 <ADC_read_channel+0x26>
     3d4:	ec e7       	ldi	r30, 0x7C	; 124
     3d6:	f0 e0       	ldi	r31, 0x00	; 0
     3d8:	80 81       	ld	r24, Z
     3da:	8e 7f       	andi	r24, 0xFE	; 254
     3dc:	80 83       	st	Z, r24
     3de:	e6 cf       	rjmp	.-52     	; 0x3ac <ADC_read>
     3e0:	08 95       	ret
     3e2:	ec e7       	ldi	r30, 0x7C	; 124
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 81       	ld	r24, Z
     3e8:	81 60       	ori	r24, 0x01	; 1
     3ea:	80 83       	st	Z, r24
     3ec:	df cf       	rjmp	.-66     	; 0x3ac <ADC_read>
     3ee:	08 95       	ret
     3f0:	80 e0       	ldi	r24, 0x00	; 0
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	08 95       	ret

000003f6 <DAC_init>:
     3f6:	78 94       	sei
     3f8:	13 c5       	rjmp	.+2598   	; 0xe20 <TWI_Master_Initialise>
     3fa:	08 95       	ret

000003fc <DAC_send>:
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	00 d0       	rcall	.+0      	; 0x402 <DAC_send+0x6>
     402:	cd b7       	in	r28, 0x3d	; 61
     404:	de b7       	in	r29, 0x3e	; 62
     406:	90 e5       	ldi	r25, 0x50	; 80
     408:	99 83       	std	Y+1, r25	; 0x01
     40a:	1a 82       	std	Y+2, r1	; 0x02
     40c:	8b 83       	std	Y+3, r24	; 0x03
     40e:	63 e0       	ldi	r22, 0x03	; 3
     410:	ce 01       	movw	r24, r28
     412:	01 96       	adiw	r24, 0x01	; 1
     414:	0f d5       	rcall	.+2590   	; 0xe34 <TWI_Start_Transceiver_With_Data>
     416:	0f 90       	pop	r0
     418:	0f 90       	pop	r0
     41a:	0f 90       	pop	r0
     41c:	df 91       	pop	r29
     41e:	cf 91       	pop	r28
     420:	08 95       	ret

00000422 <IR_init>:
     422:	ab cf       	rjmp	.-170    	; 0x37a <ADC_init>
     424:	08 95       	ret

00000426 <IR_MM>:
     426:	ef 92       	push	r14
     428:	ff 92       	push	r15
     42a:	0f 93       	push	r16
     42c:	1f 93       	push	r17
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
     432:	80 91 3d 03 	lds	r24, 0x033D
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	09 e3       	ldi	r16, 0x39	; 57
     43a:	13 e0       	ldi	r17, 0x03	; 3
     43c:	9c 01       	movw	r18, r24
     43e:	22 0f       	add	r18, r18
     440:	33 1f       	adc	r19, r19
     442:	a9 01       	movw	r20, r18
     444:	42 5c       	subi	r20, 0xC2	; 194
     446:	5c 4f       	sbci	r21, 0xFC	; 252
     448:	7a 01       	movw	r14, r20
     44a:	f8 01       	movw	r30, r16
     44c:	20 81       	ld	r18, Z
     44e:	31 81       	ldd	r19, Z+1	; 0x01
     450:	fa 01       	movw	r30, r20
     452:	40 81       	ld	r20, Z
     454:	51 81       	ldd	r21, Z+1	; 0x01
     456:	24 1b       	sub	r18, r20
     458:	35 0b       	sbc	r19, r21
     45a:	f8 01       	movw	r30, r16
     45c:	31 83       	std	Z+1, r19	; 0x01
     45e:	20 83       	st	Z, r18
     460:	cb e3       	ldi	r28, 0x3B	; 59
     462:	d3 e0       	ldi	r29, 0x03	; 3
     464:	fc 01       	movw	r30, r24
     466:	ee 0f       	add	r30, r30
     468:	ff 1f       	adc	r31, r31
     46a:	ea 5b       	subi	r30, 0xBA	; 186
     46c:	fc 4f       	sbci	r31, 0xFC	; 252
     46e:	88 81       	ld	r24, Y
     470:	99 81       	ldd	r25, Y+1	; 0x01
     472:	20 81       	ld	r18, Z
     474:	31 81       	ldd	r19, Z+1	; 0x01
     476:	82 1b       	sub	r24, r18
     478:	93 0b       	sbc	r25, r19
     47a:	99 83       	std	Y+1, r25	; 0x01
     47c:	88 83       	st	Y, r24
     47e:	80 e0       	ldi	r24, 0x00	; 0
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	a3 df       	rcall	.-186    	; 0x3ca <ADC_read_channel>
     484:	f7 01       	movw	r30, r14
     486:	91 83       	std	Z+1, r25	; 0x01
     488:	80 83       	st	Z, r24
     48a:	e0 90 3d 03 	lds	r14, 0x033D
     48e:	f1 2c       	mov	r15, r1
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	9a df       	rcall	.-204    	; 0x3ca <ADC_read_channel>
     496:	f7 01       	movw	r30, r14
     498:	ee 0f       	add	r30, r30
     49a:	ff 1f       	adc	r31, r31
     49c:	ea 5b       	subi	r30, 0xBA	; 186
     49e:	fc 4f       	sbci	r31, 0xFC	; 252
     4a0:	91 83       	std	Z+1, r25	; 0x01
     4a2:	80 83       	st	Z, r24
     4a4:	60 91 3d 03 	lds	r22, 0x033D
     4a8:	26 2f       	mov	r18, r22
     4aa:	30 e0       	ldi	r19, 0x00	; 0
     4ac:	f9 01       	movw	r30, r18
     4ae:	ee 0f       	add	r30, r30
     4b0:	ff 1f       	adc	r31, r31
     4b2:	e2 5c       	subi	r30, 0xC2	; 194
     4b4:	fc 4f       	sbci	r31, 0xFC	; 252
     4b6:	40 81       	ld	r20, Z
     4b8:	51 81       	ldd	r21, Z+1	; 0x01
     4ba:	f8 01       	movw	r30, r16
     4bc:	80 81       	ld	r24, Z
     4be:	91 81       	ldd	r25, Z+1	; 0x01
     4c0:	84 0f       	add	r24, r20
     4c2:	95 1f       	adc	r25, r21
     4c4:	91 83       	std	Z+1, r25	; 0x01
     4c6:	80 83       	st	Z, r24
     4c8:	f9 01       	movw	r30, r18
     4ca:	ee 0f       	add	r30, r30
     4cc:	ff 1f       	adc	r31, r31
     4ce:	ea 5b       	subi	r30, 0xBA	; 186
     4d0:	fc 4f       	sbci	r31, 0xFC	; 252
     4d2:	40 81       	ld	r20, Z
     4d4:	51 81       	ldd	r21, Z+1	; 0x01
     4d6:	28 81       	ld	r18, Y
     4d8:	39 81       	ldd	r19, Y+1	; 0x01
     4da:	24 0f       	add	r18, r20
     4dc:	35 1f       	adc	r19, r21
     4de:	39 83       	std	Y+1, r19	; 0x01
     4e0:	28 83       	st	Y, r18
     4e2:	6f 5f       	subi	r22, 0xFF	; 255
     4e4:	64 30       	cpi	r22, 0x04	; 4
     4e6:	18 f4       	brcc	.+6      	; 0x4ee <IR_MM+0xc8>
     4e8:	60 93 3d 03 	sts	0x033D, r22
     4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <IR_MM+0xcc>
     4ee:	10 92 3d 03 	sts	0x033D, r1
     4f2:	9f 93       	push	r25
     4f4:	8f 93       	push	r24
     4f6:	8e e4       	ldi	r24, 0x4E	; 78
     4f8:	92 e0       	ldi	r25, 0x02	; 2
     4fa:	9f 93       	push	r25
     4fc:	8f 93       	push	r24
     4fe:	dd d7       	rcall	.+4026   	; 0x14ba <printf>
     500:	eb e3       	ldi	r30, 0x3B	; 59
     502:	f3 e0       	ldi	r31, 0x03	; 3
     504:	81 81       	ldd	r24, Z+1	; 0x01
     506:	8f 93       	push	r24
     508:	80 81       	ld	r24, Z
     50a:	8f 93       	push	r24
     50c:	88 e5       	ldi	r24, 0x58	; 88
     50e:	92 e0       	ldi	r25, 0x02	; 2
     510:	9f 93       	push	r25
     512:	8f 93       	push	r24
     514:	d2 d7       	rcall	.+4004   	; 0x14ba <printf>
     516:	80 91 38 03 	lds	r24, 0x0338
     51a:	8f 93       	push	r24
     51c:	80 91 37 03 	lds	r24, 0x0337
     520:	8f 93       	push	r24
     522:	82 e6       	ldi	r24, 0x62	; 98
     524:	92 e0       	ldi	r25, 0x02	; 2
     526:	9f 93       	push	r25
     528:	8f 93       	push	r24
     52a:	c7 d7       	rcall	.+3982   	; 0x14ba <printf>
     52c:	80 91 36 03 	lds	r24, 0x0336
     530:	8f 93       	push	r24
     532:	80 91 35 03 	lds	r24, 0x0335
     536:	8f 93       	push	r24
     538:	8f e6       	ldi	r24, 0x6F	; 111
     53a:	92 e0       	ldi	r25, 0x02	; 2
     53c:	9f 93       	push	r25
     53e:	8f 93       	push	r24
     540:	bc d7       	rcall	.+3960   	; 0x14ba <printf>
     542:	4d b7       	in	r20, 0x3d	; 61
     544:	5e b7       	in	r21, 0x3e	; 62
     546:	40 5f       	subi	r20, 0xF0	; 240
     548:	5f 4f       	sbci	r21, 0xFF	; 255
     54a:	0f b6       	in	r0, 0x3f	; 63
     54c:	f8 94       	cli
     54e:	5e bf       	out	0x3e, r21	; 62
     550:	0f be       	out	0x3f, r0	; 63
     552:	4d bf       	out	0x3d, r20	; 61
     554:	df 91       	pop	r29
     556:	cf 91       	pop	r28
     558:	1f 91       	pop	r17
     55a:	0f 91       	pop	r16
     55c:	ff 90       	pop	r15
     55e:	ef 90       	pop	r14
     560:	08 95       	ret

00000562 <IR_calibrate>:
     562:	0f 93       	push	r16
     564:	1f 93       	push	r17
     566:	cf 93       	push	r28
     568:	df 93       	push	r29
     56a:	ca e0       	ldi	r28, 0x0A	; 10
     56c:	5c df       	rcall	.-328    	; 0x426 <IR_MM>
     56e:	c1 50       	subi	r28, 0x01	; 1
     570:	e9 f7       	brne	.-6      	; 0x56c <IR_calibrate+0xa>
     572:	00 91 39 03 	lds	r16, 0x0339
     576:	10 91 3a 03 	lds	r17, 0x033A
     57a:	c0 91 3b 03 	lds	r28, 0x033B
     57e:	d0 91 3c 03 	lds	r29, 0x033C
     582:	51 df       	rcall	.-350    	; 0x426 <IR_MM>
     584:	a8 01       	movw	r20, r16
     586:	56 95       	lsr	r21
     588:	47 95       	ror	r20
     58a:	50 93 38 03 	sts	0x0338, r21
     58e:	40 93 37 03 	sts	0x0337, r20
     592:	9e 01       	movw	r18, r28
     594:	22 0f       	add	r18, r18
     596:	33 1f       	adc	r19, r19
     598:	22 0f       	add	r18, r18
     59a:	33 1f       	adc	r19, r19
     59c:	ad ec       	ldi	r26, 0xCD	; 205
     59e:	bc ec       	ldi	r27, 0xCC	; 204
     5a0:	33 d7       	rcall	.+3686   	; 0x1408 <__umulhisi3>
     5a2:	96 95       	lsr	r25
     5a4:	87 95       	ror	r24
     5a6:	96 95       	lsr	r25
     5a8:	87 95       	ror	r24
     5aa:	90 93 36 03 	sts	0x0336, r25
     5ae:	80 93 35 03 	sts	0x0335, r24
     5b2:	5f 93       	push	r21
     5b4:	4f 93       	push	r20
     5b6:	82 e6       	ldi	r24, 0x62	; 98
     5b8:	92 e0       	ldi	r25, 0x02	; 2
     5ba:	9f 93       	push	r25
     5bc:	8f 93       	push	r24
     5be:	7d d7       	rcall	.+3834   	; 0x14ba <printf>
     5c0:	80 91 36 03 	lds	r24, 0x0336
     5c4:	8f 93       	push	r24
     5c6:	80 91 35 03 	lds	r24, 0x0335
     5ca:	8f 93       	push	r24
     5cc:	8f e6       	ldi	r24, 0x6F	; 111
     5ce:	92 e0       	ldi	r25, 0x02	; 2
     5d0:	9f 93       	push	r25
     5d2:	8f 93       	push	r24
     5d4:	72 d7       	rcall	.+3812   	; 0x14ba <printf>
     5d6:	8d b7       	in	r24, 0x3d	; 61
     5d8:	9e b7       	in	r25, 0x3e	; 62
     5da:	08 96       	adiw	r24, 0x08	; 8
     5dc:	0f b6       	in	r0, 0x3f	; 63
     5de:	f8 94       	cli
     5e0:	9e bf       	out	0x3e, r25	; 62
     5e2:	0f be       	out	0x3f, r0	; 63
     5e4:	8d bf       	out	0x3d, r24	; 61
     5e6:	df 91       	pop	r29
     5e8:	cf 91       	pop	r28
     5ea:	1f 91       	pop	r17
     5ec:	0f 91       	pop	r16
     5ee:	08 95       	ret

000005f0 <is_goal>:
     5f0:	1a df       	rcall	.-460    	; 0x426 <IR_MM>
     5f2:	20 91 3b 03 	lds	r18, 0x033B
     5f6:	30 91 3c 03 	lds	r19, 0x033C
     5fa:	80 91 35 03 	lds	r24, 0x0335
     5fe:	90 91 36 03 	lds	r25, 0x0336
     602:	28 17       	cp	r18, r24
     604:	39 07       	cpc	r19, r25
     606:	68 f4       	brcc	.+26     	; 0x622 <is_goal+0x32>
     608:	80 91 33 03 	lds	r24, 0x0333
     60c:	81 11       	cpse	r24, r1
     60e:	0b c0       	rjmp	.+22     	; 0x626 <is_goal+0x36>
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	80 93 33 03 	sts	0x0333, r24
     616:	80 91 34 03 	lds	r24, 0x0334
     61a:	8f 5f       	subi	r24, 0xFF	; 255
     61c:	80 93 34 03 	sts	0x0334, r24
     620:	02 c0       	rjmp	.+4      	; 0x626 <is_goal+0x36>
     622:	10 92 33 03 	sts	0x0333, r1
     626:	80 91 34 03 	lds	r24, 0x0334
     62a:	82 30       	cpi	r24, 0x02	; 2
     62c:	20 f0       	brcs	.+8      	; 0x636 <is_goal+0x46>
     62e:	10 92 34 03 	sts	0x0334, r1
     632:	81 e0       	ldi	r24, 0x01	; 1
     634:	08 95       	ret
     636:	80 e0       	ldi	r24, 0x00	; 0
     638:	08 95       	ret

0000063a <is_game_over>:
     63a:	81 e0       	ldi	r24, 0x01	; 1
     63c:	40 91 39 03 	lds	r20, 0x0339
     640:	50 91 3a 03 	lds	r21, 0x033A
     644:	20 91 37 03 	lds	r18, 0x0337
     648:	30 91 38 03 	lds	r19, 0x0338
     64c:	42 17       	cp	r20, r18
     64e:	53 07       	cpc	r21, r19
     650:	08 f0       	brcs	.+2      	; 0x654 <is_game_over+0x1a>
     652:	80 e0       	ldi	r24, 0x00	; 0
     654:	08 95       	ret

00000656 <main>:
#include "Motor.h"
#include "solenoid.h"
#include "PID.h"
#include "Pong.h"

int main(void){	
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
     65a:	cd b7       	in	r28, 0x3d	; 61
     65c:	de b7       	in	r29, 0x3e	; 62
     65e:	2b 97       	sbiw	r28, 0x0b	; 11
     660:	0f b6       	in	r0, 0x3f	; 63
     662:	f8 94       	cli
     664:	de bf       	out	0x3e, r29	; 62
     666:	0f be       	out	0x3f, r0	; 63
     668:	cd bf       	out	0x3d, r28	; 61
	USART_Init();
     66a:	9c d4       	rcall	.+2360   	; 0xfa4 <USART_Init>
	//printf("hei\n");
	DAC_init();
     66c:	c4 de       	rcall	.-632    	; 0x3f6 <DAC_init>
	motor_init();
     66e:	c8 d0       	rcall	.+400    	; 0x800 <motor_init>
	//PID_init();
    CAN_init(MODE_NORMAL);
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	aa dd       	rcall	.-1196   	; 0x1c8 <CAN_init>
	servo_init(F_CPU);
     674:	60 e0       	ldi	r22, 0x00	; 0
     676:	74 e2       	ldi	r23, 0x24	; 36
     678:	84 ef       	ldi	r24, 0xF4	; 244
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	5c d3       	rcall	.+1720   	; 0xd36 <servo_init>
	IR_init();
     67e:	d1 de       	rcall	.-606    	; 0x422 <IR_init>
	solenoid_init();
     680:	b1 d3       	rcall	.+1890   	; 0xde4 <solenoid_init>
	CAN_message msg;
	while(1)
    {	
		if(CAN_receive(&msg)){
     682:	ce 01       	movw	r24, r28
     684:	01 96       	adiw	r24, 0x01	; 1
     686:	d5 dd       	rcall	.-1110   	; 0x232 <CAN_receive>
     688:	88 23       	and	r24, r24
     68a:	d9 f3       	breq	.-10     	; 0x682 <main+0x2c>
			CAN_print(&msg);
     68c:	ce 01       	movw	r24, r28
     68e:	01 96       	adiw	r24, 0x01	; 1
     690:	0b de       	rcall	.-1002   	; 0x2a8 <CAN_print>
			if (msg.id==PONG_START){
     692:	89 81       	ldd	r24, Y+1	; 0x01
     694:	9a 81       	ldd	r25, Y+2	; 0x02
     696:	89 2b       	or	r24, r25
     698:	a1 f7       	brne	.-24     	; 0x682 <main+0x2c>
				PlayPong(msg.data[0]);
     69a:	8c 81       	ldd	r24, Y+4	; 0x04
     69c:	da d2       	rcall	.+1460   	; 0xc52 <PlayPong>
     69e:	f1 cf       	rjmp	.-30     	; 0x682 <main+0x2c>

000006a0 <mcp2515_read>:
     6a0:	cf 93       	push	r28
     6a2:	c8 2f       	mov	r28, r24
     6a4:	2f 98       	cbi	0x05, 7	; 5
     6a6:	83 e0       	ldi	r24, 0x03	; 3
     6a8:	b6 d3       	rcall	.+1900   	; 0xe16 <SPI_Send>
     6aa:	8c 2f       	mov	r24, r28
     6ac:	b4 d3       	rcall	.+1896   	; 0xe16 <SPI_Send>
     6ae:	ac d3       	rcall	.+1880   	; 0xe08 <SPI_Read>
     6b0:	2f 9a       	sbi	0x05, 7	; 5
     6b2:	cf 91       	pop	r28
     6b4:	08 95       	ret

000006b6 <mcp2515_write>:
     6b6:	cf 93       	push	r28
     6b8:	df 93       	push	r29
     6ba:	d8 2f       	mov	r29, r24
     6bc:	c6 2f       	mov	r28, r22
     6be:	2f 98       	cbi	0x05, 7	; 5
     6c0:	82 e0       	ldi	r24, 0x02	; 2
     6c2:	a9 d3       	rcall	.+1874   	; 0xe16 <SPI_Send>
     6c4:	8d 2f       	mov	r24, r29
     6c6:	a7 d3       	rcall	.+1870   	; 0xe16 <SPI_Send>
     6c8:	8c 2f       	mov	r24, r28
     6ca:	a5 d3       	rcall	.+1866   	; 0xe16 <SPI_Send>
     6cc:	2f 9a       	sbi	0x05, 7	; 5
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	08 95       	ret

000006d4 <mcp2515_set_mode>:
     6d4:	68 2f       	mov	r22, r24
     6d6:	8f e0       	ldi	r24, 0x0F	; 15
     6d8:	ee cf       	rjmp	.-36     	; 0x6b6 <mcp2515_write>
     6da:	08 95       	ret

000006dc <mcp2515_request_to_send>:
     6dc:	2f 98       	cbi	0x05, 7	; 5
     6de:	9b d3       	rcall	.+1846   	; 0xe16 <SPI_Send>
     6e0:	2f 9a       	sbi	0x05, 7	; 5
     6e2:	08 95       	ret

000006e4 <mcp2515_bit_modify>:
     6e4:	1f 93       	push	r17
     6e6:	cf 93       	push	r28
     6e8:	df 93       	push	r29
     6ea:	18 2f       	mov	r17, r24
     6ec:	d6 2f       	mov	r29, r22
     6ee:	c4 2f       	mov	r28, r20
     6f0:	2f 98       	cbi	0x05, 7	; 5
     6f2:	85 e0       	ldi	r24, 0x05	; 5
     6f4:	90 d3       	rcall	.+1824   	; 0xe16 <SPI_Send>
     6f6:	81 2f       	mov	r24, r17
     6f8:	8e d3       	rcall	.+1820   	; 0xe16 <SPI_Send>
     6fa:	8d 2f       	mov	r24, r29
     6fc:	8c d3       	rcall	.+1816   	; 0xe16 <SPI_Send>
     6fe:	8c 2f       	mov	r24, r28
     700:	8a d3       	rcall	.+1812   	; 0xe16 <SPI_Send>
     702:	2f 9a       	sbi	0x05, 7	; 5
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	1f 91       	pop	r17
     70a:	08 95       	ret

0000070c <mcp2515_reset>:
     70c:	2f 98       	cbi	0x05, 7	; 5
     70e:	80 ec       	ldi	r24, 0xC0	; 192
     710:	82 d3       	rcall	.+1796   	; 0xe16 <SPI_Send>
     712:	40 e8       	ldi	r20, 0x80	; 128
     714:	60 e8       	ldi	r22, 0x80	; 128
     716:	8f e0       	ldi	r24, 0x0F	; 15
     718:	e5 df       	rcall	.-54     	; 0x6e4 <mcp2515_bit_modify>
     71a:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     71c:	85 e3       	ldi	r24, 0x35	; 53
     71e:	8a 95       	dec	r24
     720:	f1 f7       	brne	.-4      	; 0x71e <mcp2515_reset+0x12>
     722:	00 00       	nop
     724:	08 95       	ret

00000726 <mcp2515_init>:
     726:	cf 93       	push	r28
     728:	c8 2f       	mov	r28, r24
     72a:	65 d3       	rcall	.+1738   	; 0xdf6 <SPI_MasterInit>
     72c:	ef df       	rcall	.-34     	; 0x70c <mcp2515_reset>
     72e:	8e e0       	ldi	r24, 0x0E	; 14
     730:	b7 df       	rcall	.-146    	; 0x6a0 <mcp2515_read>
     732:	80 7e       	andi	r24, 0xE0	; 224
     734:	80 38       	cpi	r24, 0x80	; 128
     736:	39 f5       	brne	.+78     	; 0x786 <mcp2515_init+0x60>
     738:	8c 2f       	mov	r24, r28
     73a:	cc df       	rcall	.-104    	; 0x6d4 <mcp2515_set_mode>
     73c:	8e e0       	ldi	r24, 0x0E	; 14
     73e:	b0 df       	rcall	.-160    	; 0x6a0 <mcp2515_read>
     740:	98 2f       	mov	r25, r24
     742:	90 7e       	andi	r25, 0xE0	; 224
     744:	29 2f       	mov	r18, r25
     746:	30 e0       	ldi	r19, 0x00	; 0
     748:	4c 2f       	mov	r20, r28
     74a:	50 e0       	ldi	r21, 0x00	; 0
     74c:	42 17       	cp	r20, r18
     74e:	53 07       	cpc	r21, r19
     750:	69 f0       	breq	.+26     	; 0x76c <mcp2515_init+0x46>
     752:	1f 92       	push	r1
     754:	9f 93       	push	r25
     756:	8c e7       	ldi	r24, 0x7C	; 124
     758:	92 e0       	ldi	r25, 0x02	; 2
     75a:	9f 93       	push	r25
     75c:	8f 93       	push	r24
     75e:	ad d6       	rcall	.+3418   	; 0x14ba <printf>
     760:	0f 90       	pop	r0
     762:	0f 90       	pop	r0
     764:	0f 90       	pop	r0
     766:	0f 90       	pop	r0
     768:	81 e0       	ldi	r24, 0x01	; 1
     76a:	0e c0       	rjmp	.+28     	; 0x788 <mcp2515_init+0x62>
     76c:	1f 92       	push	r1
     76e:	8f 93       	push	r24
     770:	80 ec       	ldi	r24, 0xC0	; 192
     772:	92 e0       	ldi	r25, 0x02	; 2
     774:	9f 93       	push	r25
     776:	8f 93       	push	r24
     778:	a0 d6       	rcall	.+3392   	; 0x14ba <printf>
     77a:	0f 90       	pop	r0
     77c:	0f 90       	pop	r0
     77e:	0f 90       	pop	r0
     780:	0f 90       	pop	r0
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	01 c0       	rjmp	.+2      	; 0x788 <mcp2515_init+0x62>
     786:	81 e0       	ldi	r24, 0x01	; 1
     788:	cf 91       	pop	r28
     78a:	08 95       	ret

0000078c <motor_set_direction>:
}


void motor_set_direction(motor_direction_t direction){
	//printf("Y value: %d \n", direction);
	switch (direction > 121){
     78c:	91 e0       	ldi	r25, 0x01	; 1
     78e:	8a 37       	cpi	r24, 0x7A	; 122
     790:	08 f4       	brcc	.+2      	; 0x794 <motor_set_direction+0x8>
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	99 23       	and	r25, r25
     796:	19 f0       	breq	.+6      	; 0x79e <motor_set_direction+0x12>
     798:	91 30       	cpi	r25, 0x01	; 1
     79a:	39 f0       	breq	.+14     	; 0x7aa <motor_set_direction+0x1e>
     79c:	08 95       	ret
		case(LEFT):
			clear_bit(PORTH, PH1);
     79e:	e2 e0       	ldi	r30, 0x02	; 2
     7a0:	f1 e0       	ldi	r31, 0x01	; 1
     7a2:	80 81       	ld	r24, Z
     7a4:	8d 7f       	andi	r24, 0xFD	; 253
     7a6:	80 83       	st	Z, r24
			break;
     7a8:	08 95       	ret
		case(RIGHT):
			set_bit(PORTH, PH1);
     7aa:	e2 e0       	ldi	r30, 0x02	; 2
     7ac:	f1 e0       	ldi	r31, 0x01	; 1
     7ae:	80 81       	ld	r24, Z
     7b0:	82 60       	ori	r24, 0x02	; 2
     7b2:	80 83       	st	Z, r24
     7b4:	08 95       	ret

000007b6 <motor_set_speed>:
	}
}

void motor_set_speed(uint8_t speed){
	//printf("Y value: %d \n", speed);
	switch (speed > 126){
     7b6:	91 e0       	ldi	r25, 0x01	; 1
     7b8:	8f 37       	cpi	r24, 0x7F	; 127
     7ba:	08 f4       	brcc	.+2      	; 0x7be <motor_set_speed+0x8>
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	99 23       	and	r25, r25
     7c0:	19 f0       	breq	.+6      	; 0x7c8 <motor_set_speed+0x12>
     7c2:	91 30       	cpi	r25, 0x01	; 1
     7c4:	31 f0       	breq	.+12     	; 0x7d2 <motor_set_speed+0x1c>
     7c6:	08 c0       	rjmp	.+16     	; 0x7d8 <motor_set_speed+0x22>
		case(LEFT):
			DAC_send(126-speed);
     7c8:	9e e7       	ldi	r25, 0x7E	; 126
     7ca:	98 1b       	sub	r25, r24
     7cc:	89 2f       	mov	r24, r25
     7ce:	16 ce       	rjmp	.-980    	; 0x3fc <DAC_send>
			break;
     7d0:	08 95       	ret
		case(RIGHT):
			DAC_send(speed-127);
     7d2:	8f 57       	subi	r24, 0x7F	; 127
     7d4:	13 ce       	rjmp	.-986    	; 0x3fc <DAC_send>
			break;
     7d6:	08 95       	ret
		default:
			DAC_send(speed-127);
     7d8:	8f 57       	subi	r24, 0x7F	; 127
     7da:	10 ce       	rjmp	.-992    	; 0x3fc <DAC_send>
     7dc:	08 95       	ret

000007de <motor_set_speed_2>:
			break;
	}
}

void motor_set_speed_2(uint8_t speed){
		DAC_send(speed);
     7de:	0e ce       	rjmp	.-996    	; 0x3fc <DAC_send>
     7e0:	08 95       	ret

000007e2 <motor_reset_encoder>:
}

void motor_reset_encoder() {
	clear_bit(PORTH, PH6);
     7e2:	e2 e0       	ldi	r30, 0x02	; 2
     7e4:	f1 e0       	ldi	r31, 0x01	; 1
     7e6:	80 81       	ld	r24, Z
     7e8:	8f 7b       	andi	r24, 0xBF	; 191
     7ea:	80 83       	st	Z, r24
     7ec:	8f e1       	ldi	r24, 0x1F	; 31
     7ee:	93 e0       	ldi	r25, 0x03	; 3
     7f0:	01 97       	sbiw	r24, 0x01	; 1
     7f2:	f1 f7       	brne	.-4      	; 0x7f0 <motor_reset_encoder+0xe>
     7f4:	00 c0       	rjmp	.+0      	; 0x7f6 <motor_reset_encoder+0x14>
     7f6:	00 00       	nop
	_delay_us(200);
	set_bit(PORTH, PH6);
     7f8:	80 81       	ld	r24, Z
     7fa:	80 64       	ori	r24, 0x40	; 64
     7fc:	80 83       	st	Z, r24
     7fe:	08 95       	ret

00000800 <motor_init>:
#include "CAN.h"

void motor_init(){
	
	// Enable motor
	set_bit(DDRH, PH4);
     800:	e1 e0       	ldi	r30, 0x01	; 1
     802:	f1 e0       	ldi	r31, 0x01	; 1
     804:	80 81       	ld	r24, Z
     806:	80 61       	ori	r24, 0x10	; 16
     808:	80 83       	st	Z, r24
	set_bit(PORTH, PH4);
     80a:	a2 e0       	ldi	r26, 0x02	; 2
     80c:	b1 e0       	ldi	r27, 0x01	; 1
     80e:	8c 91       	ld	r24, X
     810:	80 61       	ori	r24, 0x10	; 16
     812:	8c 93       	st	X, r24
	
	// Set direction pin to output
	set_bit(DDRH, PH1);
     814:	80 81       	ld	r24, Z
     816:	82 60       	ori	r24, 0x02	; 2
     818:	80 83       	st	Z, r24
	
	//--------------------Set encoder pins to output and input mode----------------------
	
	// Output Enable pin (active low): !OE
	set_bit(DDRH, PH5);
     81a:	80 81       	ld	r24, Z
     81c:	80 62       	ori	r24, 0x20	; 32
     81e:	80 83       	st	Z, r24
	
	//Selection pin: SEL
	set_bit(DDRH, PH3);
     820:	80 81       	ld	r24, Z
     822:	88 60       	ori	r24, 0x08	; 8
     824:	80 83       	st	Z, r24
	
	// Set Reset pin: RST
	set_bit(DDRH, PH6);
     826:	80 81       	ld	r24, Z
     828:	80 64       	ori	r24, 0x40	; 64
     82a:	80 83       	st	Z, r24
	// Reset encoder
	motor_reset_encoder();
     82c:	da df       	rcall	.-76     	; 0x7e2 <motor_reset_encoder>
	
	// Set data bits to input:
	clear_bit(DDRK, PK0);
     82e:	e7 e0       	ldi	r30, 0x07	; 7
     830:	f1 e0       	ldi	r31, 0x01	; 1
     832:	80 81       	ld	r24, Z
     834:	8e 7f       	andi	r24, 0xFE	; 254
     836:	80 83       	st	Z, r24
	clear_bit(DDRK, PK1);
     838:	80 81       	ld	r24, Z
     83a:	8d 7f       	andi	r24, 0xFD	; 253
     83c:	80 83       	st	Z, r24
	clear_bit(DDRK, PK2);
     83e:	80 81       	ld	r24, Z
     840:	8b 7f       	andi	r24, 0xFB	; 251
     842:	80 83       	st	Z, r24
	clear_bit(DDRK, PK3);
     844:	80 81       	ld	r24, Z
     846:	87 7f       	andi	r24, 0xF7	; 247
     848:	80 83       	st	Z, r24
	clear_bit(DDRK, PK4);
     84a:	80 81       	ld	r24, Z
     84c:	8f 7e       	andi	r24, 0xEF	; 239
     84e:	80 83       	st	Z, r24
	clear_bit(DDRK, PK5);
     850:	80 81       	ld	r24, Z
     852:	8f 7d       	andi	r24, 0xDF	; 223
     854:	80 83       	st	Z, r24
	clear_bit(DDRK, PK6);
     856:	80 81       	ld	r24, Z
     858:	8f 7b       	andi	r24, 0xBF	; 191
     85a:	80 83       	st	Z, r24
	clear_bit(DDRK, PK7);
     85c:	80 81       	ld	r24, Z
     85e:	8f 77       	andi	r24, 0x7F	; 127
     860:	80 83       	st	Z, r24
     862:	08 95       	ret

00000864 <motor_read_rotation>:
	clear_bit(PORTH, PH6);
	_delay_us(200);
	set_bit(PORTH, PH6);
}

int16_t motor_read_rotation(uint8_t reset_flag){
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
	 |	    clear/set SEL opposite of datasheet        |
	 |  We don't know why, perhaps faulty motor box?   |
	 *-------------------------------------------------*/
	
	//Set !OE low to enable output of encoder
	clear_bit(PORTH, PH5);
     868:	e2 e0       	ldi	r30, 0x02	; 2
     86a:	f1 e0       	ldi	r31, 0x01	; 1
     86c:	90 81       	ld	r25, Z
     86e:	9f 7d       	andi	r25, 0xDF	; 223
     870:	90 83       	st	Z, r25
	
	//Set SEL high to get low byte
	set_bit(PORTH, PH3);
     872:	90 81       	ld	r25, Z
     874:	98 60       	ori	r25, 0x08	; 8
     876:	90 83       	st	Z, r25
     878:	ef ee       	ldi	r30, 0xEF	; 239
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	31 97       	sbiw	r30, 0x01	; 1
     87e:	f1 f7       	brne	.-4      	; 0x87c <motor_read_rotation+0x18>
     880:	00 c0       	rjmp	.+0      	; 0x882 <motor_read_rotation+0x1e>
     882:	00 00       	nop
	
	//Wait about 20 microseconds
	_delay_us(60);
	
	//Read LSB
	uint8_t low = PINK;
     884:	d0 91 06 01 	lds	r29, 0x0106
	//printf("Low: %d\n", low);
	
	//Set SEL low to get high byte
	clear_bit(PORTH, PH3);
     888:	e2 e0       	ldi	r30, 0x02	; 2
     88a:	f1 e0       	ldi	r31, 0x01	; 1
     88c:	90 81       	ld	r25, Z
     88e:	97 7f       	andi	r25, 0xF7	; 247
     890:	90 83       	st	Z, r25
     892:	ef ee       	ldi	r30, 0xEF	; 239
     894:	f0 e0       	ldi	r31, 0x00	; 0
     896:	31 97       	sbiw	r30, 0x01	; 1
     898:	f1 f7       	brne	.-4      	; 0x896 <motor_read_rotation+0x32>
     89a:	00 c0       	rjmp	.+0      	; 0x89c <motor_read_rotation+0x38>
     89c:	00 00       	nop
	
	//Wait about 20 microseconds
	_delay_us(60);
	
	//Read MSB
	uint8_t high = PINK;
     89e:	c0 91 06 01 	lds	r28, 0x0106
	//printf("High: %d\n", high);
	if (reset_flag) {
     8a2:	81 11       	cpse	r24, r1
 		//Toggle !RST to reset encoder
		motor_reset_encoder();
     8a4:	9e df       	rcall	.-196    	; 0x7e2 <motor_reset_encoder>
	}
	//Set !OE high to disable output of encoder
	set_bit(PORTH, PH5);
     8a6:	e2 e0       	ldi	r30, 0x02	; 2
     8a8:	f1 e0       	ldi	r31, 0x01	; 1
     8aa:	80 81       	ld	r24, Z
     8ac:	80 62       	ori	r24, 0x20	; 32
     8ae:	80 83       	st	Z, r24
	
	int16_t rot = (int16_t) ( (high << 8) | low);
     8b0:	8d 2f       	mov	r24, r29
     8b2:	90 e0       	ldi	r25, 0x00	; 0
	
	return rot;
}
     8b4:	9c 2b       	or	r25, r28
     8b6:	df 91       	pop	r29
     8b8:	cf 91       	pop	r28
     8ba:	08 95       	ret

000008bc <motor_calibrate>:

void motor_calibrate() {
     8bc:	cf 93       	push	r28
     8be:	df 93       	push	r29
	motor_set_direction(21);
     8c0:	85 e1       	ldi	r24, 0x15	; 21
     8c2:	64 df       	rcall	.-312    	; 0x78c <motor_set_direction>
	motor_set_speed(0);
     8c4:	80 e0       	ldi	r24, 0x00	; 0
     8c6:	77 df       	rcall	.-274    	; 0x7b6 <motor_set_speed>
	int16_t cur_rot = motor_read_rotation(0);
     8c8:	80 e0       	ldi	r24, 0x00	; 0
     8ca:	cc df       	rcall	.-104    	; 0x864 <motor_read_rotation>
     8cc:	ec 01       	movw	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8ce:	2f ef       	ldi	r18, 0xFF	; 255
     8d0:	83 ef       	ldi	r24, 0xF3	; 243
     8d2:	91 e0       	ldi	r25, 0x01	; 1
     8d4:	21 50       	subi	r18, 0x01	; 1
     8d6:	80 40       	sbci	r24, 0x00	; 0
     8d8:	90 40       	sbci	r25, 0x00	; 0
     8da:	e1 f7       	brne	.-8      	; 0x8d4 <motor_calibrate+0x18>
     8dc:	00 c0       	rjmp	.+0      	; 0x8de <motor_calibrate+0x22>
     8de:	00 00       	nop
	int16_t prev_rot = cur_rot+200;
	while(prev_rot != cur_rot) {
		prev_rot = cur_rot;
		_delay_ms(40);
		cur_rot = motor_read_rotation(0);
     8e0:	80 e0       	ldi	r24, 0x00	; 0
     8e2:	c0 df       	rcall	.-128    	; 0x864 <motor_read_rotation>
void motor_calibrate() {
	motor_set_direction(21);
	motor_set_speed(0);
	int16_t cur_rot = motor_read_rotation(0);
	int16_t prev_rot = cur_rot+200;
	while(prev_rot != cur_rot) {
     8e4:	8c 17       	cp	r24, r28
     8e6:	9d 07       	cpc	r25, r29
     8e8:	11 f0       	breq	.+4      	; 0x8ee <motor_calibrate+0x32>
		prev_rot = cur_rot;
		_delay_ms(40);
		cur_rot = motor_read_rotation(0);
     8ea:	ec 01       	movw	r28, r24
     8ec:	f0 cf       	rjmp	.-32     	; 0x8ce <motor_calibrate+0x12>
	}
	motor_set_speed(126);
     8ee:	8e e7       	ldi	r24, 0x7E	; 126
     8f0:	62 df       	rcall	.-316    	; 0x7b6 <motor_set_speed>
     8f2:	2f ef       	ldi	r18, 0xFF	; 255
     8f4:	89 e6       	ldi	r24, 0x69	; 105
     8f6:	98 e1       	ldi	r25, 0x18	; 24
     8f8:	21 50       	subi	r18, 0x01	; 1
     8fa:	80 40       	sbci	r24, 0x00	; 0
     8fc:	90 40       	sbci	r25, 0x00	; 0
     8fe:	e1 f7       	brne	.-8      	; 0x8f8 <motor_calibrate+0x3c>
     900:	00 c0       	rjmp	.+0      	; 0x902 <motor_calibrate+0x46>
     902:	00 00       	nop
	_delay_ms(500);
	motor_reset_encoder();
     904:	6e df       	rcall	.-292    	; 0x7e2 <motor_reset_encoder>
	printf("hei\n");
     906:	8b ef       	ldi	r24, 0xFB	; 251
     908:	92 e0       	ldi	r25, 0x02	; 2
     90a:	ed d5       	rcall	.+3034   	; 0x14e6 <puts>
	
	
}
     90c:	df 91       	pop	r29
     90e:	cf 91       	pop	r28
     910:	08 95       	ret

00000912 <__vector_15>:
     912:	1f 92       	push	r1
     914:	0f 92       	push	r0
     916:	0f b6       	in	r0, 0x3f	; 63
     918:	0f 92       	push	r0
     91a:	11 24       	eor	r1, r1
     91c:	8f 93       	push	r24
     91e:	81 e0       	ldi	r24, 0x01	; 1
     920:	80 93 58 03 	sts	0x0358, r24
     924:	8f 91       	pop	r24
     926:	0f 90       	pop	r0
     928:	0f be       	out	0x3f, r0	; 63
     92a:	0f 90       	pop	r0
     92c:	1f 90       	pop	r1
     92e:	18 95       	reti

00000930 <PID>:
     930:	cf 92       	push	r12
     932:	df 92       	push	r13
     934:	ef 92       	push	r14
     936:	ff 92       	push	r15
     938:	cf 93       	push	r28
     93a:	df 93       	push	r29
     93c:	80 91 58 03 	lds	r24, 0x0358
     940:	88 23       	and	r24, r24
     942:	09 f4       	brne	.+2      	; 0x946 <PID+0x16>
     944:	f8 c0       	rjmp	.+496    	; 0xb36 <PID+0x206>
     946:	e0 e7       	ldi	r30, 0x70	; 112
     948:	f0 e0       	ldi	r31, 0x00	; 0
     94a:	80 81       	ld	r24, Z
     94c:	8e 7f       	andi	r24, 0xFE	; 254
     94e:	80 83       	st	Z, r24
     950:	80 e0       	ldi	r24, 0x00	; 0
     952:	88 df       	rcall	.-240    	; 0x864 <motor_read_rotation>
     954:	ec 01       	movw	r28, r24
     956:	df 93       	push	r29
     958:	cf 93       	push	r28
     95a:	8f ef       	ldi	r24, 0xFF	; 255
     95c:	92 e0       	ldi	r25, 0x02	; 2
     95e:	9f 93       	push	r25
     960:	8f 93       	push	r24
     962:	ab d5       	rcall	.+2902   	; 0x14ba <printf>
     964:	80 91 56 03 	lds	r24, 0x0356
     968:	90 91 57 03 	lds	r25, 0x0357
     96c:	be 01       	movw	r22, r28
     96e:	68 1b       	sub	r22, r24
     970:	79 0b       	sbc	r23, r25
     972:	88 27       	eor	r24, r24
     974:	77 fd       	sbrc	r23, 7
     976:	80 95       	com	r24
     978:	98 2f       	mov	r25, r24
     97a:	29 d4       	rcall	.+2130   	; 0x11ce <__floatsisf>
     97c:	6b 01       	movw	r12, r22
     97e:	7c 01       	movw	r14, r24
     980:	60 91 16 02 	lds	r22, 0x0216
     984:	70 91 17 02 	lds	r23, 0x0217
     988:	88 27       	eor	r24, r24
     98a:	77 fd       	sbrc	r23, 7
     98c:	80 95       	com	r24
     98e:	98 2f       	mov	r25, r24
     990:	1e d4       	rcall	.+2108   	; 0x11ce <__floatsisf>
     992:	9b 01       	movw	r18, r22
     994:	ac 01       	movw	r20, r24
     996:	c7 01       	movw	r24, r14
     998:	b6 01       	movw	r22, r12
     99a:	7e d3       	rcall	.+1788   	; 0x1098 <__divsf3>
     99c:	20 e0       	ldi	r18, 0x00	; 0
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	4f e7       	ldi	r20, 0x7F	; 127
     9a2:	53 e4       	ldi	r21, 0x43	; 67
     9a4:	c8 d4       	rcall	.+2448   	; 0x1336 <__mulsf3>
     9a6:	6b 01       	movw	r12, r22
     9a8:	7c 01       	movw	r14, r24
     9aa:	e3 d3       	rcall	.+1990   	; 0x1172 <__fixunssfsi>
     9ac:	7f 93       	push	r23
     9ae:	6f 93       	push	r22
     9b0:	8c e0       	ldi	r24, 0x0C	; 12
     9b2:	93 e0       	ldi	r25, 0x03	; 3
     9b4:	9f 93       	push	r25
     9b6:	8f 93       	push	r24
     9b8:	80 d5       	rcall	.+2816   	; 0x14ba <printf>
     9ba:	c0 91 54 03 	lds	r28, 0x0354
     9be:	d0 91 55 03 	lds	r29, 0x0355
     9c2:	8d b7       	in	r24, 0x3d	; 61
     9c4:	9e b7       	in	r25, 0x3e	; 62
     9c6:	08 96       	adiw	r24, 0x08	; 8
     9c8:	0f b6       	in	r0, 0x3f	; 63
     9ca:	f8 94       	cli
     9cc:	9e bf       	out	0x3e, r25	; 62
     9ce:	0f be       	out	0x3f, r0	; 63
     9d0:	8d bf       	out	0x3d, r24	; 61
     9d2:	cf 3d       	cpi	r28, 0xDF	; 223
     9d4:	d1 05       	cpc	r29, r1
     9d6:	24 f4       	brge	.+8      	; 0x9e0 <PID+0xb0>
     9d8:	ce 31       	cpi	r28, 0x1E	; 30
     9da:	d1 05       	cpc	r29, r1
     9dc:	24 f0       	brlt	.+8      	; 0x9e6 <PID+0xb6>
     9de:	05 c0       	rjmp	.+10     	; 0x9ea <PID+0xba>
     9e0:	ce ed       	ldi	r28, 0xDE	; 222
     9e2:	d0 e0       	ldi	r29, 0x00	; 0
     9e4:	02 c0       	rjmp	.+4      	; 0x9ea <PID+0xba>
     9e6:	ce e1       	ldi	r28, 0x1E	; 30
     9e8:	d0 e0       	ldi	r29, 0x00	; 0
     9ea:	c7 01       	movw	r24, r14
     9ec:	b6 01       	movw	r22, r12
     9ee:	bc d3       	rcall	.+1912   	; 0x1168 <__fixsfsi>
     9f0:	c6 1b       	sub	r28, r22
     9f2:	d7 0b       	sbc	r29, r23
     9f4:	be 01       	movw	r22, r28
     9f6:	88 27       	eor	r24, r24
     9f8:	77 fd       	sbrc	r23, 7
     9fa:	80 95       	com	r24
     9fc:	98 2f       	mov	r25, r24
     9fe:	e7 d3       	rcall	.+1998   	; 0x11ce <__floatsisf>
     a00:	6b 01       	movw	r12, r22
     a02:	7c 01       	movw	r14, r24
     a04:	20 91 06 02 	lds	r18, 0x0206
     a08:	30 91 07 02 	lds	r19, 0x0207
     a0c:	40 91 08 02 	lds	r20, 0x0208
     a10:	50 91 09 02 	lds	r21, 0x0209
     a14:	90 d4       	rcall	.+2336   	; 0x1336 <__mulsf3>
     a16:	9b 01       	movw	r18, r22
     a18:	ac 01       	movw	r20, r24
     a1a:	60 91 50 03 	lds	r22, 0x0350
     a1e:	70 91 51 03 	lds	r23, 0x0351
     a22:	80 91 52 03 	lds	r24, 0x0352
     a26:	90 91 53 03 	lds	r25, 0x0353
     a2a:	ce d2       	rcall	.+1436   	; 0xfc8 <__addsf3>
     a2c:	60 93 50 03 	sts	0x0350, r22
     a30:	70 93 51 03 	sts	0x0351, r23
     a34:	80 93 52 03 	sts	0x0352, r24
     a38:	90 93 53 03 	sts	0x0353, r25
     a3c:	df 93       	push	r29
     a3e:	cf 93       	push	r28
     a40:	86 e1       	ldi	r24, 0x16	; 22
     a42:	93 e0       	ldi	r25, 0x03	; 3
     a44:	9f 93       	push	r25
     a46:	8f 93       	push	r24
     a48:	38 d5       	rcall	.+2672   	; 0x14ba <printf>
     a4a:	0f 90       	pop	r0
     a4c:	0f 90       	pop	r0
     a4e:	0f 90       	pop	r0
     a50:	0f 90       	pop	r0
     a52:	1c 16       	cp	r1, r28
     a54:	1d 06       	cpc	r1, r29
     a56:	44 f0       	brlt	.+16     	; 0xa68 <PID+0x138>
     a58:	10 92 50 03 	sts	0x0350, r1
     a5c:	10 92 51 03 	sts	0x0351, r1
     a60:	10 92 52 03 	sts	0x0352, r1
     a64:	10 92 53 03 	sts	0x0353, r1
     a68:	20 91 12 02 	lds	r18, 0x0212
     a6c:	30 91 13 02 	lds	r19, 0x0213
     a70:	40 91 14 02 	lds	r20, 0x0214
     a74:	50 91 15 02 	lds	r21, 0x0215
     a78:	c7 01       	movw	r24, r14
     a7a:	b6 01       	movw	r22, r12
     a7c:	5c d4       	rcall	.+2232   	; 0x1336 <__mulsf3>
     a7e:	6b 01       	movw	r12, r22
     a80:	7c 01       	movw	r14, r24
     a82:	20 91 50 03 	lds	r18, 0x0350
     a86:	30 91 51 03 	lds	r19, 0x0351
     a8a:	40 91 52 03 	lds	r20, 0x0352
     a8e:	50 91 53 03 	lds	r21, 0x0353
     a92:	60 91 0e 02 	lds	r22, 0x020E
     a96:	70 91 0f 02 	lds	r23, 0x020F
     a9a:	80 91 10 02 	lds	r24, 0x0210
     a9e:	90 91 11 02 	lds	r25, 0x0211
     aa2:	49 d4       	rcall	.+2194   	; 0x1336 <__mulsf3>
     aa4:	9b 01       	movw	r18, r22
     aa6:	ac 01       	movw	r20, r24
     aa8:	c7 01       	movw	r24, r14
     aaa:	b6 01       	movw	r22, r12
     aac:	8d d2       	rcall	.+1306   	; 0xfc8 <__addsf3>
     aae:	6b 01       	movw	r12, r22
     ab0:	7c 01       	movw	r14, r24
     ab2:	80 91 4e 03 	lds	r24, 0x034E
     ab6:	90 91 4f 03 	lds	r25, 0x034F
     aba:	be 01       	movw	r22, r28
     abc:	68 1b       	sub	r22, r24
     abe:	79 0b       	sbc	r23, r25
     ac0:	88 27       	eor	r24, r24
     ac2:	77 fd       	sbrc	r23, 7
     ac4:	80 95       	com	r24
     ac6:	98 2f       	mov	r25, r24
     ac8:	82 d3       	rcall	.+1796   	; 0x11ce <__floatsisf>
     aca:	20 91 06 02 	lds	r18, 0x0206
     ace:	30 91 07 02 	lds	r19, 0x0207
     ad2:	40 91 08 02 	lds	r20, 0x0208
     ad6:	50 91 09 02 	lds	r21, 0x0209
     ada:	de d2       	rcall	.+1468   	; 0x1098 <__divsf3>
     adc:	20 91 0a 02 	lds	r18, 0x020A
     ae0:	30 91 0b 02 	lds	r19, 0x020B
     ae4:	40 91 0c 02 	lds	r20, 0x020C
     ae8:	50 91 0d 02 	lds	r21, 0x020D
     aec:	24 d4       	rcall	.+2120   	; 0x1336 <__mulsf3>
     aee:	9b 01       	movw	r18, r22
     af0:	ac 01       	movw	r20, r24
     af2:	c7 01       	movw	r24, r14
     af4:	b6 01       	movw	r22, r12
     af6:	68 d2       	rcall	.+1232   	; 0xfc8 <__addsf3>
     af8:	37 d3       	rcall	.+1646   	; 0x1168 <__fixsfsi>
     afa:	f6 2e       	mov	r15, r22
     afc:	26 2f       	mov	r18, r22
     afe:	37 2f       	mov	r19, r23
     b00:	d0 93 4f 03 	sts	0x034F, r29
     b04:	c0 93 4e 03 	sts	0x034E, r28
     b08:	33 23       	and	r19, r19
     b0a:	2c f4       	brge	.+10     	; 0xb16 <PID+0x1e6>
     b0c:	87 e1       	ldi	r24, 0x17	; 23
     b0e:	3e de       	rcall	.-900    	; 0x78c <motor_set_direction>
     b10:	cf 2d       	mov	r28, r15
     b12:	c1 95       	neg	r28
     b14:	03 c0       	rjmp	.+6      	; 0xb1c <PID+0x1ec>
     b16:	8c e8       	ldi	r24, 0x8C	; 140
     b18:	39 de       	rcall	.-910    	; 0x78c <motor_set_direction>
     b1a:	cf 2d       	mov	r28, r15
     b1c:	1f 92       	push	r1
     b1e:	cf 93       	push	r28
     b20:	21 e2       	ldi	r18, 0x21	; 33
     b22:	33 e0       	ldi	r19, 0x03	; 3
     b24:	3f 93       	push	r19
     b26:	2f 93       	push	r18
     b28:	c8 d4       	rcall	.+2448   	; 0x14ba <printf>
     b2a:	8c 2f       	mov	r24, r28
     b2c:	58 de       	rcall	.-848    	; 0x7de <motor_set_speed_2>
     b2e:	0f 90       	pop	r0
     b30:	0f 90       	pop	r0
     b32:	0f 90       	pop	r0
     b34:	0f 90       	pop	r0
     b36:	10 92 58 03 	sts	0x0358, r1
     b3a:	e0 e7       	ldi	r30, 0x70	; 112
     b3c:	f0 e0       	ldi	r31, 0x00	; 0
     b3e:	80 81       	ld	r24, Z
     b40:	81 60       	ori	r24, 0x01	; 1
     b42:	80 83       	st	Z, r24
     b44:	df 91       	pop	r29
     b46:	cf 91       	pop	r28
     b48:	ff 90       	pop	r15
     b4a:	ef 90       	pop	r14
     b4c:	df 90       	pop	r13
     b4e:	cf 90       	pop	r12
     b50:	08 95       	ret

00000b52 <PID_update_pos_ref>:
     b52:	90 93 55 03 	sts	0x0355, r25
     b56:	80 93 54 03 	sts	0x0354, r24
     b5a:	08 95       	ret

00000b5c <Pong_joy>:
		default:
			break;
	}
}

void Pong_joy(void){
     b5c:	cf 93       	push	r28
     b5e:	df 93       	push	r29
     b60:	cd b7       	in	r28, 0x3d	; 61
     b62:	de b7       	in	r29, 0x3e	; 62
     b64:	66 97       	sbiw	r28, 0x16	; 22
     b66:	0f b6       	in	r0, 0x3f	; 63
     b68:	f8 94       	cli
     b6a:	de bf       	out	0x3e, r29	; 62
     b6c:	0f be       	out	0x3f, r0	; 63
     b6e:	cd bf       	out	0x3d, r28	; 61
	uint8_t game_over = 0;
	CAN_message instructions;
	CAN_message results;
	results.id = 2;
     b70:	82 e0       	ldi	r24, 0x02	; 2
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	9d 87       	std	Y+13, r25	; 0x0d
     b76:	8c 87       	std	Y+12, r24	; 0x0c
	results.length = 2;
     b78:	8e 87       	std	Y+14, r24	; 0x0e
	results.data[0] = 0;
     b7a:	1f 86       	std	Y+15, r1	; 0x0f
	results.data[1] = 0;
     b7c:	18 8a       	std	Y+16, r1	; 0x10
	
	IR_calibrate();
     b7e:	f1 dc       	rcall	.-1566   	; 0x562 <IR_calibrate>
	
	//Start flow of information
	CAN_message_send(&results);
     b80:	ce 01       	movw	r24, r28
     b82:	0c 96       	adiw	r24, 0x0c	; 12
     b84:	2a db       	rcall	.-2476   	; 0x1da <CAN_message_send>
	
	while(!game_over){
		results.data[1] = is_goal();
     b86:	34 dd       	rcall	.-1432   	; 0x5f0 <is_goal>
     b88:	88 8b       	std	Y+16, r24	; 0x10
		if(CAN_receive(&instructions)){
     b8a:	ce 01       	movw	r24, r28
     b8c:	01 96       	adiw	r24, 0x01	; 1
     b8e:	51 db       	rcall	.-2398   	; 0x232 <CAN_receive>
     b90:	88 23       	and	r24, r24
     b92:	89 f0       	breq	.+34     	; 0xbb6 <Pong_joy+0x5a>
			//CAN_print(&msg);
			motor_set_direction(instructions.data[0]);
     b94:	8c 81       	ldd	r24, Y+4	; 0x04
     b96:	fa dd       	rcall	.-1036   	; 0x78c <motor_set_direction>
			motor_set_speed(instructions.data[0]);
     b98:	8c 81       	ldd	r24, Y+4	; 0x04
     b9a:	0d de       	rcall	.-998    	; 0x7b6 <motor_set_speed>
			//set_servo(instructions.data[1]);
			set_servo(127);
     b9c:	8f e7       	ldi	r24, 0x7F	; 127
     b9e:	d8 d0       	rcall	.+432    	; 0xd50 <set_servo>
			solenoid_fire(instructions.data[2]);
     ba0:	8e 81       	ldd	r24, Y+6	; 0x06
     ba2:	23 d1       	rcall	.+582    	; 0xdea <solenoid_fire>
     ba4:	8f e3       	ldi	r24, 0x3F	; 63
     ba6:	9c e9       	ldi	r25, 0x9C	; 156
     ba8:	01 97       	sbiw	r24, 0x01	; 1
     baa:	f1 f7       	brne	.-4      	; 0xba8 <Pong_joy+0x4c>
     bac:	00 c0       	rjmp	.+0      	; 0xbae <Pong_joy+0x52>
     bae:	00 00       	nop
			_delay_ms(10);
			CAN_message_send(&results);
     bb0:	ce 01       	movw	r24, r28
     bb2:	0c 96       	adiw	r24, 0x0c	; 12
     bb4:	12 db       	rcall	.-2524   	; 0x1da <CAN_message_send>
		}
		game_over = is_game_over();
     bb6:	41 dd       	rcall	.-1406   	; 0x63a <is_game_over>
	IR_calibrate();
	
	//Start flow of information
	CAN_message_send(&results);
	
	while(!game_over){
     bb8:	88 23       	and	r24, r24
     bba:	29 f3       	breq	.-54     	; 0xb86 <Pong_joy+0x2a>
			_delay_ms(10);
			CAN_message_send(&results);
		}
		game_over = is_game_over();
	}
	results.data[0] = game_over;
     bbc:	8f 87       	std	Y+15, r24	; 0x0f
	CAN_message_send(&results);
     bbe:	ce 01       	movw	r24, r28
     bc0:	0c 96       	adiw	r24, 0x0c	; 12
     bc2:	0b db       	rcall	.-2538   	; 0x1da <CAN_message_send>
}
     bc4:	66 96       	adiw	r28, 0x16	; 22
     bc6:	0f b6       	in	r0, 0x3f	; 63
     bc8:	f8 94       	cli
     bca:	de bf       	out	0x3e, r29	; 62
     bcc:	0f be       	out	0x3f, r0	; 63
     bce:	cd bf       	out	0x3d, r28	; 61
     bd0:	df 91       	pop	r29
     bd2:	cf 91       	pop	r28
     bd4:	08 95       	ret

00000bd6 <Pong_slider>:



void Pong_slider(void){
     bd6:	cf 93       	push	r28
     bd8:	df 93       	push	r29
     bda:	cd b7       	in	r28, 0x3d	; 61
     bdc:	de b7       	in	r29, 0x3e	; 62
     bde:	66 97       	sbiw	r28, 0x16	; 22
     be0:	0f b6       	in	r0, 0x3f	; 63
     be2:	f8 94       	cli
     be4:	de bf       	out	0x3e, r29	; 62
     be6:	0f be       	out	0x3f, r0	; 63
     be8:	cd bf       	out	0x3d, r28	; 61
	int8_t game_over = 0;
	CAN_message instructions;
	CAN_message results;
	results.id = 2;
     bea:	82 e0       	ldi	r24, 0x02	; 2
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	9d 87       	std	Y+13, r25	; 0x0d
     bf0:	8c 87       	std	Y+12, r24	; 0x0c
	results.length = 2;
     bf2:	8e 87       	std	Y+14, r24	; 0x0e
	results.data[0] = 0;
     bf4:	1f 86       	std	Y+15, r1	; 0x0f
	results.data[1] = 0;
     bf6:	18 8a       	std	Y+16, r1	; 0x10
	
	motor_calibrate();
     bf8:	61 de       	rcall	.-830    	; 0x8bc <motor_calibrate>
	IR_calibrate();
     bfa:	b3 dc       	rcall	.-1690   	; 0x562 <IR_calibrate>
	
	//Start flow of information
	CAN_message_send(&results);
     bfc:	ce 01       	movw	r24, r28
     bfe:	0c 96       	adiw	r24, 0x0c	; 12
     c00:	ec da       	rcall	.-2600   	; 0x1da <CAN_message_send>
	
	while(!game_over){
		results.data[1] = is_goal();
     c02:	f6 dc       	rcall	.-1556   	; 0x5f0 <is_goal>
     c04:	88 8b       	std	Y+16, r24	; 0x10
		if(CAN_receive(&instructions)){
     c06:	ce 01       	movw	r24, r28
     c08:	01 96       	adiw	r24, 0x01	; 1
     c0a:	13 db       	rcall	.-2522   	; 0x232 <CAN_receive>
     c0c:	88 23       	and	r24, r24
     c0e:	89 f0       	breq	.+34     	; 0xc32 <Pong_slider+0x5c>
			PID_update_pos_ref(results.data[1]);
     c10:	88 89       	ldd	r24, Y+16	; 0x10
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	9e df       	rcall	.-196    	; 0xb52 <PID_update_pos_ref>
			PID();
     c16:	8c de       	rcall	.-744    	; 0x930 <PID>
			//set_servo(instructions.data[1]);
			set_servo(127);
     c18:	8f e7       	ldi	r24, 0x7F	; 127
     c1a:	9a d0       	rcall	.+308    	; 0xd50 <set_servo>
			solenoid_fire(instructions.data[2]);
     c1c:	8e 81       	ldd	r24, Y+6	; 0x06
     c1e:	e5 d0       	rcall	.+458    	; 0xdea <solenoid_fire>
     c20:	8f e3       	ldi	r24, 0x3F	; 63
     c22:	9c e9       	ldi	r25, 0x9C	; 156
     c24:	01 97       	sbiw	r24, 0x01	; 1
     c26:	f1 f7       	brne	.-4      	; 0xc24 <Pong_slider+0x4e>
     c28:	00 c0       	rjmp	.+0      	; 0xc2a <Pong_slider+0x54>
     c2a:	00 00       	nop
			_delay_ms(10);
			CAN_message_send(&results);
     c2c:	ce 01       	movw	r24, r28
     c2e:	0c 96       	adiw	r24, 0x0c	; 12
     c30:	d4 da       	rcall	.-2648   	; 0x1da <CAN_message_send>
		}
		game_over = is_game_over();
     c32:	03 dd       	rcall	.-1530   	; 0x63a <is_game_over>
	IR_calibrate();
	
	//Start flow of information
	CAN_message_send(&results);
	
	while(!game_over){
     c34:	88 23       	and	r24, r24
     c36:	29 f3       	breq	.-54     	; 0xc02 <Pong_slider+0x2c>
			_delay_ms(10);
			CAN_message_send(&results);
		}
		game_over = is_game_over();
	}
	results.data[0] = game_over;
     c38:	8f 87       	std	Y+15, r24	; 0x0f
	CAN_message_send(&results);
     c3a:	ce 01       	movw	r24, r28
     c3c:	0c 96       	adiw	r24, 0x0c	; 12
     c3e:	cd da       	rcall	.-2662   	; 0x1da <CAN_message_send>
}
     c40:	66 96       	adiw	r28, 0x16	; 22
     c42:	0f b6       	in	r0, 0x3f	; 63
     c44:	f8 94       	cli
     c46:	de bf       	out	0x3e, r29	; 62
     c48:	0f be       	out	0x3f, r0	; 63
     c4a:	cd bf       	out	0x3d, r28	; 61
     c4c:	df 91       	pop	r29
     c4e:	cf 91       	pop	r28
     c50:	08 95       	ret

00000c52 <PlayPong>:
}game_mode;



void PlayPong(uint8_t mode){
	switch(mode){
     c52:	88 23       	and	r24, r24
     c54:	19 f0       	breq	.+6      	; 0xc5c <PlayPong+0xa>
     c56:	81 30       	cpi	r24, 0x01	; 1
     c58:	19 f0       	breq	.+6      	; 0xc60 <PlayPong+0xe>
     c5a:	08 95       	ret
		case(JOY):
			Pong_joy();
     c5c:	7f cf       	rjmp	.-258    	; 0xb5c <Pong_joy>
			break;
     c5e:	08 95       	ret
		case(SLIDER):
			Pong_slider();
     c60:	ba cf       	rjmp	.-140    	; 0xbd6 <Pong_slider>
     c62:	08 95       	ret

00000c64 <PWM_set_period>:
     c64:	cf 92       	push	r12
     c66:	df 92       	push	r13
     c68:	ef 92       	push	r14
     c6a:	ff 92       	push	r15
     c6c:	6b 01       	movw	r12, r22
     c6e:	7c 01       	movw	r14, r24
     c70:	e1 e8       	ldi	r30, 0x81	; 129
     c72:	f0 e0       	ldi	r31, 0x00	; 0
     c74:	80 81       	ld	r24, Z
     c76:	84 60       	ori	r24, 0x04	; 4
     c78:	80 83       	st	Z, r24
     c7a:	80 81       	ld	r24, Z
     c7c:	8d 7f       	andi	r24, 0xFD	; 253
     c7e:	80 83       	st	Z, r24
     c80:	80 81       	ld	r24, Z
     c82:	8e 7f       	andi	r24, 0xFE	; 254
     c84:	80 83       	st	Z, r24
     c86:	60 91 59 03 	lds	r22, 0x0359
     c8a:	70 91 5a 03 	lds	r23, 0x035A
     c8e:	80 e0       	ldi	r24, 0x00	; 0
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	9b d2       	rcall	.+1334   	; 0x11ca <__floatunsisf>
     c94:	a7 01       	movw	r20, r14
     c96:	96 01       	movw	r18, r12
     c98:	4e d3       	rcall	.+1692   	; 0x1336 <__mulsf3>
     c9a:	6b d2       	rcall	.+1238   	; 0x1172 <__fixunssfsi>
     c9c:	70 93 87 00 	sts	0x0087, r23
     ca0:	60 93 86 00 	sts	0x0086, r22
     ca4:	ff 90       	pop	r15
     ca6:	ef 90       	pop	r14
     ca8:	df 90       	pop	r13
     caa:	cf 90       	pop	r12
     cac:	08 95       	ret

00000cae <PWM_init>:
     cae:	0f 93       	push	r16
     cb0:	1f 93       	push	r17
     cb2:	e1 e8       	ldi	r30, 0x81	; 129
     cb4:	f0 e0       	ldi	r31, 0x00	; 0
     cb6:	a0 81       	ld	r26, Z
     cb8:	a0 61       	ori	r26, 0x10	; 16
     cba:	a0 83       	st	Z, r26
     cbc:	a0 81       	ld	r26, Z
     cbe:	a8 60       	ori	r26, 0x08	; 8
     cc0:	a0 83       	st	Z, r26
     cc2:	e0 e8       	ldi	r30, 0x80	; 128
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	a0 81       	ld	r26, Z
     cc8:	a2 60       	ori	r26, 0x02	; 2
     cca:	a0 83       	st	Z, r26
     ccc:	a0 81       	ld	r26, Z
     cce:	ae 7f       	andi	r26, 0xFE	; 254
     cd0:	a0 83       	st	Z, r26
     cd2:	a0 81       	ld	r26, Z
     cd4:	a0 62       	ori	r26, 0x20	; 32
     cd6:	a0 83       	st	Z, r26
     cd8:	a0 81       	ld	r26, Z
     cda:	af 7e       	andi	r26, 0xEF	; 239
     cdc:	a0 83       	st	Z, r26
     cde:	03 2f       	mov	r16, r19
     ce0:	14 2f       	mov	r17, r20
     ce2:	25 2f       	mov	r18, r21
     ce4:	33 27       	eor	r19, r19
     ce6:	10 93 5a 03 	sts	0x035A, r17
     cea:	00 93 59 03 	sts	0x0359, r16
     cee:	ba df       	rcall	.-140    	; 0xc64 <PWM_set_period>
     cf0:	26 9a       	sbi	0x04, 6	; 4
     cf2:	1f 91       	pop	r17
     cf4:	0f 91       	pop	r16
     cf6:	08 95       	ret

00000cf8 <PWM_pulse_set>:
     cf8:	cf 92       	push	r12
     cfa:	df 92       	push	r13
     cfc:	ef 92       	push	r14
     cfe:	ff 92       	push	r15
     d00:	6b 01       	movw	r12, r22
     d02:	7c 01       	movw	r14, r24
     d04:	60 91 59 03 	lds	r22, 0x0359
     d08:	70 91 5a 03 	lds	r23, 0x035A
     d0c:	80 e0       	ldi	r24, 0x00	; 0
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	5c d2       	rcall	.+1208   	; 0x11ca <__floatunsisf>
     d12:	a7 01       	movw	r20, r14
     d14:	96 01       	movw	r18, r12
     d16:	0f d3       	rcall	.+1566   	; 0x1336 <__mulsf3>
     d18:	20 e0       	ldi	r18, 0x00	; 0
     d1a:	30 e0       	ldi	r19, 0x00	; 0
     d1c:	40 e0       	ldi	r20, 0x00	; 0
     d1e:	5f e3       	ldi	r21, 0x3F	; 63
     d20:	52 d1       	rcall	.+676    	; 0xfc6 <__subsf3>
     d22:	27 d2       	rcall	.+1102   	; 0x1172 <__fixunssfsi>
     d24:	70 93 8b 00 	sts	0x008B, r23
     d28:	60 93 8a 00 	sts	0x008A, r22
     d2c:	ff 90       	pop	r15
     d2e:	ef 90       	pop	r14
     d30:	df 90       	pop	r13
     d32:	cf 90       	pop	r12
     d34:	08 95       	ret

00000d36 <servo_init>:
     d36:	9b 01       	movw	r18, r22
     d38:	ac 01       	movw	r20, r24
     d3a:	6a e0       	ldi	r22, 0x0A	; 10
     d3c:	77 ed       	ldi	r23, 0xD7	; 215
     d3e:	83 ea       	ldi	r24, 0xA3	; 163
     d40:	9c e3       	ldi	r25, 0x3C	; 60
     d42:	b5 df       	rcall	.-150    	; 0xcae <PWM_init>
     d44:	66 ea       	ldi	r22, 0xA6	; 166
     d46:	7b e9       	ldi	r23, 0x9B	; 155
     d48:	84 ec       	ldi	r24, 0xC4	; 196
     d4a:	9a e3       	ldi	r25, 0x3A	; 58
     d4c:	d5 cf       	rjmp	.-86     	; 0xcf8 <PWM_pulse_set>
     d4e:	08 95       	ret

00000d50 <set_servo>:
     d50:	cf 92       	push	r12
     d52:	df 92       	push	r13
     d54:	ef 92       	push	r14
     d56:	ff 92       	push	r15
     d58:	28 2f       	mov	r18, r24
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	25 52       	subi	r18, 0x25	; 37
     d5e:	31 09       	sbc	r19, r1
     d60:	33 23       	and	r19, r19
     d62:	0c f0       	brlt	.+2      	; 0xd66 <set_servo+0x16>
     d64:	85 52       	subi	r24, 0x25	; 37
     d66:	68 2f       	mov	r22, r24
     d68:	70 e0       	ldi	r23, 0x00	; 0
     d6a:	80 e0       	ldi	r24, 0x00	; 0
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	2d d2       	rcall	.+1114   	; 0x11ca <__floatunsisf>
     d70:	2d ea       	ldi	r18, 0xAD	; 173
     d72:	34 eb       	ldi	r19, 0xB4	; 180
     d74:	4e e4       	ldi	r20, 0x4E	; 78
     d76:	58 e4       	ldi	r21, 0x48	; 72
     d78:	8f d1       	rcall	.+798    	; 0x1098 <__divsf3>
     d7a:	2a ef       	ldi	r18, 0xFA	; 250
     d7c:	3d ee       	ldi	r19, 0xED	; 237
     d7e:	4b e6       	ldi	r20, 0x6B	; 107
     d80:	5a e3       	ldi	r21, 0x3A	; 58
     d82:	22 d1       	rcall	.+580    	; 0xfc8 <__addsf3>
     d84:	6b 01       	movw	r12, r22
     d86:	7c 01       	movw	r14, r24
     d88:	2c e6       	ldi	r18, 0x6C	; 108
     d8a:	39 e0       	ldi	r19, 0x09	; 9
     d8c:	49 e7       	ldi	r20, 0x79	; 121
     d8e:	5a e3       	ldi	r21, 0x3A	; 58
     d90:	7f d1       	rcall	.+766    	; 0x1090 <__cmpsf2>
     d92:	88 23       	and	r24, r24
     d94:	54 f0       	brlt	.+20     	; 0xdaa <set_servo+0x5a>
     d96:	2b e4       	ldi	r18, 0x4B	; 75
     d98:	39 e5       	ldi	r19, 0x59	; 89
     d9a:	46 e0       	ldi	r20, 0x06	; 6
     d9c:	5b e3       	ldi	r21, 0x3B	; 59
     d9e:	c7 01       	movw	r24, r14
     da0:	b6 01       	movw	r22, r12
     da2:	c5 d2       	rcall	.+1418   	; 0x132e <__gesf2>
     da4:	18 16       	cp	r1, r24
     da6:	64 f0       	brlt	.+24     	; 0xdc0 <set_servo+0x70>
     da8:	15 c0       	rjmp	.+42     	; 0xdd4 <set_servo+0x84>
     daa:	0f 2e       	mov	r0, r31
     dac:	fc e6       	ldi	r31, 0x6C	; 108
     dae:	cf 2e       	mov	r12, r31
     db0:	f9 e0       	ldi	r31, 0x09	; 9
     db2:	df 2e       	mov	r13, r31
     db4:	f9 e7       	ldi	r31, 0x79	; 121
     db6:	ef 2e       	mov	r14, r31
     db8:	fa e3       	ldi	r31, 0x3A	; 58
     dba:	ff 2e       	mov	r15, r31
     dbc:	f0 2d       	mov	r31, r0
     dbe:	0a c0       	rjmp	.+20     	; 0xdd4 <set_servo+0x84>
     dc0:	0f 2e       	mov	r0, r31
     dc2:	fb e4       	ldi	r31, 0x4B	; 75
     dc4:	cf 2e       	mov	r12, r31
     dc6:	f9 e5       	ldi	r31, 0x59	; 89
     dc8:	df 2e       	mov	r13, r31
     dca:	f6 e0       	ldi	r31, 0x06	; 6
     dcc:	ef 2e       	mov	r14, r31
     dce:	fb e3       	ldi	r31, 0x3B	; 59
     dd0:	ff 2e       	mov	r15, r31
     dd2:	f0 2d       	mov	r31, r0
     dd4:	c7 01       	movw	r24, r14
     dd6:	b6 01       	movw	r22, r12
     dd8:	8f df       	rcall	.-226    	; 0xcf8 <PWM_pulse_set>
     dda:	ff 90       	pop	r15
     ddc:	ef 90       	pop	r14
     dde:	df 90       	pop	r13
     de0:	cf 90       	pop	r12
     de2:	08 95       	ret

00000de4 <solenoid_init>:
     de4:	24 9a       	sbi	0x04, 4	; 4
     de6:	2c 9a       	sbi	0x05, 4	; 5
     de8:	08 95       	ret

00000dea <solenoid_fire>:
     dea:	88 23       	and	r24, r24
     dec:	11 f0       	breq	.+4      	; 0xdf2 <solenoid_fire+0x8>
     dee:	2c 98       	cbi	0x05, 4	; 5
     df0:	08 95       	ret
     df2:	2c 9a       	sbi	0x05, 4	; 5
     df4:	08 95       	ret

00000df6 <SPI_MasterInit>:
     df6:	84 b1       	in	r24, 0x04	; 4
     df8:	87 68       	ori	r24, 0x87	; 135
     dfa:	84 b9       	out	0x04, r24	; 4
     dfc:	81 e1       	ldi	r24, 0x11	; 17
     dfe:	8c bd       	out	0x2c, r24	; 44
     e00:	8c b5       	in	r24, 0x2c	; 44
     e02:	80 64       	ori	r24, 0x40	; 64
     e04:	8c bd       	out	0x2c, r24	; 44
     e06:	08 95       	ret

00000e08 <SPI_Read>:
     e08:	8f ef       	ldi	r24, 0xFF	; 255
     e0a:	8e bd       	out	0x2e, r24	; 46
     e0c:	0d b4       	in	r0, 0x2d	; 45
     e0e:	07 fe       	sbrs	r0, 7
     e10:	fd cf       	rjmp	.-6      	; 0xe0c <SPI_Read+0x4>
     e12:	8e b5       	in	r24, 0x2e	; 46
     e14:	08 95       	ret

00000e16 <SPI_Send>:
     e16:	8e bd       	out	0x2e, r24	; 46
     e18:	0d b4       	in	r0, 0x2d	; 45
     e1a:	07 fe       	sbrs	r0, 7
     e1c:	fd cf       	rjmp	.-6      	; 0xe18 <SPI_Send+0x2>
     e1e:	08 95       	ret

00000e20 <TWI_Master_Initialise>:
     e20:	8c e0       	ldi	r24, 0x0C	; 12
     e22:	80 93 b8 00 	sts	0x00B8, r24
     e26:	8f ef       	ldi	r24, 0xFF	; 255
     e28:	80 93 bb 00 	sts	0x00BB, r24
     e2c:	84 e0       	ldi	r24, 0x04	; 4
     e2e:	80 93 bc 00 	sts	0x00BC, r24
     e32:	08 95       	ret

00000e34 <TWI_Start_Transceiver_With_Data>:
     e34:	ec eb       	ldi	r30, 0xBC	; 188
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	20 81       	ld	r18, Z
     e3a:	20 fd       	sbrc	r18, 0
     e3c:	fd cf       	rjmp	.-6      	; 0xe38 <TWI_Start_Transceiver_With_Data+0x4>
     e3e:	60 93 5d 03 	sts	0x035D, r22
     e42:	fc 01       	movw	r30, r24
     e44:	20 81       	ld	r18, Z
     e46:	20 93 5e 03 	sts	0x035E, r18
     e4a:	20 fd       	sbrc	r18, 0
     e4c:	0c c0       	rjmp	.+24     	; 0xe66 <TWI_Start_Transceiver_With_Data+0x32>
     e4e:	62 30       	cpi	r22, 0x02	; 2
     e50:	50 f0       	brcs	.+20     	; 0xe66 <TWI_Start_Transceiver_With_Data+0x32>
     e52:	dc 01       	movw	r26, r24
     e54:	11 96       	adiw	r26, 0x01	; 1
     e56:	ef e5       	ldi	r30, 0x5F	; 95
     e58:	f3 e0       	ldi	r31, 0x03	; 3
     e5a:	81 e0       	ldi	r24, 0x01	; 1
     e5c:	9d 91       	ld	r25, X+
     e5e:	91 93       	st	Z+, r25
     e60:	8f 5f       	subi	r24, 0xFF	; 255
     e62:	86 13       	cpse	r24, r22
     e64:	fb cf       	rjmp	.-10     	; 0xe5c <TWI_Start_Transceiver_With_Data+0x28>
     e66:	10 92 5c 03 	sts	0x035C, r1
     e6a:	88 ef       	ldi	r24, 0xF8	; 248
     e6c:	80 93 18 02 	sts	0x0218, r24
     e70:	85 ea       	ldi	r24, 0xA5	; 165
     e72:	80 93 bc 00 	sts	0x00BC, r24
     e76:	08 95       	ret

00000e78 <__vector_39>:
     e78:	1f 92       	push	r1
     e7a:	0f 92       	push	r0
     e7c:	0f b6       	in	r0, 0x3f	; 63
     e7e:	0f 92       	push	r0
     e80:	11 24       	eor	r1, r1
     e82:	0b b6       	in	r0, 0x3b	; 59
     e84:	0f 92       	push	r0
     e86:	2f 93       	push	r18
     e88:	3f 93       	push	r19
     e8a:	8f 93       	push	r24
     e8c:	9f 93       	push	r25
     e8e:	af 93       	push	r26
     e90:	bf 93       	push	r27
     e92:	ef 93       	push	r30
     e94:	ff 93       	push	r31
     e96:	80 91 b9 00 	lds	r24, 0x00B9
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	fc 01       	movw	r30, r24
     e9e:	38 97       	sbiw	r30, 0x08	; 8
     ea0:	e1 35       	cpi	r30, 0x51	; 81
     ea2:	f1 05       	cpc	r31, r1
     ea4:	08 f0       	brcs	.+2      	; 0xea8 <__vector_39+0x30>
     ea6:	55 c0       	rjmp	.+170    	; 0xf52 <__vector_39+0xda>
     ea8:	ee 58       	subi	r30, 0x8E	; 142
     eaa:	ff 4f       	sbci	r31, 0xFF	; 255
     eac:	a7 c2       	rjmp	.+1358   	; 0x13fc <__tablejump2__>
     eae:	10 92 5b 03 	sts	0x035B, r1
     eb2:	e0 91 5b 03 	lds	r30, 0x035B
     eb6:	80 91 5d 03 	lds	r24, 0x035D
     eba:	e8 17       	cp	r30, r24
     ebc:	70 f4       	brcc	.+28     	; 0xeda <__vector_39+0x62>
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	8e 0f       	add	r24, r30
     ec2:	80 93 5b 03 	sts	0x035B, r24
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	e2 5a       	subi	r30, 0xA2	; 162
     eca:	fc 4f       	sbci	r31, 0xFC	; 252
     ecc:	80 81       	ld	r24, Z
     ece:	80 93 bb 00 	sts	0x00BB, r24
     ed2:	85 e8       	ldi	r24, 0x85	; 133
     ed4:	80 93 bc 00 	sts	0x00BC, r24
     ed8:	43 c0       	rjmp	.+134    	; 0xf60 <__vector_39+0xe8>
     eda:	80 91 5c 03 	lds	r24, 0x035C
     ede:	81 60       	ori	r24, 0x01	; 1
     ee0:	80 93 5c 03 	sts	0x035C, r24
     ee4:	84 e9       	ldi	r24, 0x94	; 148
     ee6:	80 93 bc 00 	sts	0x00BC, r24
     eea:	3a c0       	rjmp	.+116    	; 0xf60 <__vector_39+0xe8>
     eec:	e0 91 5b 03 	lds	r30, 0x035B
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	8e 0f       	add	r24, r30
     ef4:	80 93 5b 03 	sts	0x035B, r24
     ef8:	80 91 bb 00 	lds	r24, 0x00BB
     efc:	f0 e0       	ldi	r31, 0x00	; 0
     efe:	e2 5a       	subi	r30, 0xA2	; 162
     f00:	fc 4f       	sbci	r31, 0xFC	; 252
     f02:	80 83       	st	Z, r24
     f04:	20 91 5b 03 	lds	r18, 0x035B
     f08:	30 e0       	ldi	r19, 0x00	; 0
     f0a:	80 91 5d 03 	lds	r24, 0x035D
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	01 97       	sbiw	r24, 0x01	; 1
     f12:	28 17       	cp	r18, r24
     f14:	39 07       	cpc	r19, r25
     f16:	24 f4       	brge	.+8      	; 0xf20 <__vector_39+0xa8>
     f18:	85 ec       	ldi	r24, 0xC5	; 197
     f1a:	80 93 bc 00 	sts	0x00BC, r24
     f1e:	20 c0       	rjmp	.+64     	; 0xf60 <__vector_39+0xe8>
     f20:	85 e8       	ldi	r24, 0x85	; 133
     f22:	80 93 bc 00 	sts	0x00BC, r24
     f26:	1c c0       	rjmp	.+56     	; 0xf60 <__vector_39+0xe8>
     f28:	80 91 bb 00 	lds	r24, 0x00BB
     f2c:	e0 91 5b 03 	lds	r30, 0x035B
     f30:	f0 e0       	ldi	r31, 0x00	; 0
     f32:	e2 5a       	subi	r30, 0xA2	; 162
     f34:	fc 4f       	sbci	r31, 0xFC	; 252
     f36:	80 83       	st	Z, r24
     f38:	80 91 5c 03 	lds	r24, 0x035C
     f3c:	81 60       	ori	r24, 0x01	; 1
     f3e:	80 93 5c 03 	sts	0x035C, r24
     f42:	84 e9       	ldi	r24, 0x94	; 148
     f44:	80 93 bc 00 	sts	0x00BC, r24
     f48:	0b c0       	rjmp	.+22     	; 0xf60 <__vector_39+0xe8>
     f4a:	85 ea       	ldi	r24, 0xA5	; 165
     f4c:	80 93 bc 00 	sts	0x00BC, r24
     f50:	07 c0       	rjmp	.+14     	; 0xf60 <__vector_39+0xe8>
     f52:	80 91 b9 00 	lds	r24, 0x00B9
     f56:	80 93 18 02 	sts	0x0218, r24
     f5a:	84 e0       	ldi	r24, 0x04	; 4
     f5c:	80 93 bc 00 	sts	0x00BC, r24
     f60:	ff 91       	pop	r31
     f62:	ef 91       	pop	r30
     f64:	bf 91       	pop	r27
     f66:	af 91       	pop	r26
     f68:	9f 91       	pop	r25
     f6a:	8f 91       	pop	r24
     f6c:	3f 91       	pop	r19
     f6e:	2f 91       	pop	r18
     f70:	0f 90       	pop	r0
     f72:	0b be       	out	0x3b, r0	; 59
     f74:	0f 90       	pop	r0
     f76:	0f be       	out	0x3f, r0	; 63
     f78:	0f 90       	pop	r0
     f7a:	1f 90       	pop	r1
     f7c:	18 95       	reti

00000f7e <USART_Transmit>:
     f7e:	e0 ec       	ldi	r30, 0xC0	; 192
     f80:	f0 e0       	ldi	r31, 0x00	; 0
     f82:	90 81       	ld	r25, Z
     f84:	95 ff       	sbrs	r25, 5
     f86:	fd cf       	rjmp	.-6      	; 0xf82 <USART_Transmit+0x4>
     f88:	80 93 c6 00 	sts	0x00C6, r24
     f8c:	80 e0       	ldi	r24, 0x00	; 0
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	08 95       	ret

00000f92 <USART_Receive>:
     f92:	e0 ec       	ldi	r30, 0xC0	; 192
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	80 81       	ld	r24, Z
     f98:	88 23       	and	r24, r24
     f9a:	ec f7       	brge	.-6      	; 0xf96 <USART_Receive+0x4>
     f9c:	80 91 c6 00 	lds	r24, 0x00C6
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	08 95       	ret

00000fa4 <USART_Init>:
     fa4:	10 92 c5 00 	sts	0x00C5, r1
     fa8:	87 e6       	ldi	r24, 0x67	; 103
     faa:	80 93 c4 00 	sts	0x00C4, r24
     fae:	88 e1       	ldi	r24, 0x18	; 24
     fb0:	80 93 c1 00 	sts	0x00C1, r24
     fb4:	8e e0       	ldi	r24, 0x0E	; 14
     fb6:	80 93 c2 00 	sts	0x00C2, r24
     fba:	69 ec       	ldi	r22, 0xC9	; 201
     fbc:	77 e0       	ldi	r23, 0x07	; 7
     fbe:	8f eb       	ldi	r24, 0xBF	; 191
     fc0:	97 e0       	ldi	r25, 0x07	; 7
     fc2:	31 c2       	rjmp	.+1122   	; 0x1426 <fdevopen>
     fc4:	08 95       	ret

00000fc6 <__subsf3>:
     fc6:	50 58       	subi	r21, 0x80	; 128

00000fc8 <__addsf3>:
     fc8:	bb 27       	eor	r27, r27
     fca:	aa 27       	eor	r26, r26
     fcc:	0e d0       	rcall	.+28     	; 0xfea <__addsf3x>
     fce:	75 c1       	rjmp	.+746    	; 0x12ba <__fp_round>
     fd0:	66 d1       	rcall	.+716    	; 0x129e <__fp_pscA>
     fd2:	30 f0       	brcs	.+12     	; 0xfe0 <__addsf3+0x18>
     fd4:	6b d1       	rcall	.+726    	; 0x12ac <__fp_pscB>
     fd6:	20 f0       	brcs	.+8      	; 0xfe0 <__addsf3+0x18>
     fd8:	31 f4       	brne	.+12     	; 0xfe6 <__addsf3+0x1e>
     fda:	9f 3f       	cpi	r25, 0xFF	; 255
     fdc:	11 f4       	brne	.+4      	; 0xfe2 <__addsf3+0x1a>
     fde:	1e f4       	brtc	.+6      	; 0xfe6 <__addsf3+0x1e>
     fe0:	5b c1       	rjmp	.+694    	; 0x1298 <__fp_nan>
     fe2:	0e f4       	brtc	.+2      	; 0xfe6 <__addsf3+0x1e>
     fe4:	e0 95       	com	r30
     fe6:	e7 fb       	bst	r30, 7
     fe8:	51 c1       	rjmp	.+674    	; 0x128c <__fp_inf>

00000fea <__addsf3x>:
     fea:	e9 2f       	mov	r30, r25
     fec:	77 d1       	rcall	.+750    	; 0x12dc <__fp_split3>
     fee:	80 f3       	brcs	.-32     	; 0xfd0 <__addsf3+0x8>
     ff0:	ba 17       	cp	r27, r26
     ff2:	62 07       	cpc	r22, r18
     ff4:	73 07       	cpc	r23, r19
     ff6:	84 07       	cpc	r24, r20
     ff8:	95 07       	cpc	r25, r21
     ffa:	18 f0       	brcs	.+6      	; 0x1002 <__addsf3x+0x18>
     ffc:	71 f4       	brne	.+28     	; 0x101a <__addsf3x+0x30>
     ffe:	9e f5       	brtc	.+102    	; 0x1066 <__addsf3x+0x7c>
    1000:	8f c1       	rjmp	.+798    	; 0x1320 <__fp_zero>
    1002:	0e f4       	brtc	.+2      	; 0x1006 <__addsf3x+0x1c>
    1004:	e0 95       	com	r30
    1006:	0b 2e       	mov	r0, r27
    1008:	ba 2f       	mov	r27, r26
    100a:	a0 2d       	mov	r26, r0
    100c:	0b 01       	movw	r0, r22
    100e:	b9 01       	movw	r22, r18
    1010:	90 01       	movw	r18, r0
    1012:	0c 01       	movw	r0, r24
    1014:	ca 01       	movw	r24, r20
    1016:	a0 01       	movw	r20, r0
    1018:	11 24       	eor	r1, r1
    101a:	ff 27       	eor	r31, r31
    101c:	59 1b       	sub	r21, r25
    101e:	99 f0       	breq	.+38     	; 0x1046 <__addsf3x+0x5c>
    1020:	59 3f       	cpi	r21, 0xF9	; 249
    1022:	50 f4       	brcc	.+20     	; 0x1038 <__addsf3x+0x4e>
    1024:	50 3e       	cpi	r21, 0xE0	; 224
    1026:	68 f1       	brcs	.+90     	; 0x1082 <__addsf3x+0x98>
    1028:	1a 16       	cp	r1, r26
    102a:	f0 40       	sbci	r31, 0x00	; 0
    102c:	a2 2f       	mov	r26, r18
    102e:	23 2f       	mov	r18, r19
    1030:	34 2f       	mov	r19, r20
    1032:	44 27       	eor	r20, r20
    1034:	58 5f       	subi	r21, 0xF8	; 248
    1036:	f3 cf       	rjmp	.-26     	; 0x101e <__addsf3x+0x34>
    1038:	46 95       	lsr	r20
    103a:	37 95       	ror	r19
    103c:	27 95       	ror	r18
    103e:	a7 95       	ror	r26
    1040:	f0 40       	sbci	r31, 0x00	; 0
    1042:	53 95       	inc	r21
    1044:	c9 f7       	brne	.-14     	; 0x1038 <__addsf3x+0x4e>
    1046:	7e f4       	brtc	.+30     	; 0x1066 <__addsf3x+0x7c>
    1048:	1f 16       	cp	r1, r31
    104a:	ba 0b       	sbc	r27, r26
    104c:	62 0b       	sbc	r22, r18
    104e:	73 0b       	sbc	r23, r19
    1050:	84 0b       	sbc	r24, r20
    1052:	ba f0       	brmi	.+46     	; 0x1082 <__addsf3x+0x98>
    1054:	91 50       	subi	r25, 0x01	; 1
    1056:	a1 f0       	breq	.+40     	; 0x1080 <__addsf3x+0x96>
    1058:	ff 0f       	add	r31, r31
    105a:	bb 1f       	adc	r27, r27
    105c:	66 1f       	adc	r22, r22
    105e:	77 1f       	adc	r23, r23
    1060:	88 1f       	adc	r24, r24
    1062:	c2 f7       	brpl	.-16     	; 0x1054 <__addsf3x+0x6a>
    1064:	0e c0       	rjmp	.+28     	; 0x1082 <__addsf3x+0x98>
    1066:	ba 0f       	add	r27, r26
    1068:	62 1f       	adc	r22, r18
    106a:	73 1f       	adc	r23, r19
    106c:	84 1f       	adc	r24, r20
    106e:	48 f4       	brcc	.+18     	; 0x1082 <__addsf3x+0x98>
    1070:	87 95       	ror	r24
    1072:	77 95       	ror	r23
    1074:	67 95       	ror	r22
    1076:	b7 95       	ror	r27
    1078:	f7 95       	ror	r31
    107a:	9e 3f       	cpi	r25, 0xFE	; 254
    107c:	08 f0       	brcs	.+2      	; 0x1080 <__addsf3x+0x96>
    107e:	b3 cf       	rjmp	.-154    	; 0xfe6 <__addsf3+0x1e>
    1080:	93 95       	inc	r25
    1082:	88 0f       	add	r24, r24
    1084:	08 f0       	brcs	.+2      	; 0x1088 <__addsf3x+0x9e>
    1086:	99 27       	eor	r25, r25
    1088:	ee 0f       	add	r30, r30
    108a:	97 95       	ror	r25
    108c:	87 95       	ror	r24
    108e:	08 95       	ret

00001090 <__cmpsf2>:
    1090:	d9 d0       	rcall	.+434    	; 0x1244 <__fp_cmp>
    1092:	08 f4       	brcc	.+2      	; 0x1096 <__cmpsf2+0x6>
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	08 95       	ret

00001098 <__divsf3>:
    1098:	0c d0       	rcall	.+24     	; 0x10b2 <__divsf3x>
    109a:	0f c1       	rjmp	.+542    	; 0x12ba <__fp_round>
    109c:	07 d1       	rcall	.+526    	; 0x12ac <__fp_pscB>
    109e:	40 f0       	brcs	.+16     	; 0x10b0 <__divsf3+0x18>
    10a0:	fe d0       	rcall	.+508    	; 0x129e <__fp_pscA>
    10a2:	30 f0       	brcs	.+12     	; 0x10b0 <__divsf3+0x18>
    10a4:	21 f4       	brne	.+8      	; 0x10ae <__divsf3+0x16>
    10a6:	5f 3f       	cpi	r21, 0xFF	; 255
    10a8:	19 f0       	breq	.+6      	; 0x10b0 <__divsf3+0x18>
    10aa:	f0 c0       	rjmp	.+480    	; 0x128c <__fp_inf>
    10ac:	51 11       	cpse	r21, r1
    10ae:	39 c1       	rjmp	.+626    	; 0x1322 <__fp_szero>
    10b0:	f3 c0       	rjmp	.+486    	; 0x1298 <__fp_nan>

000010b2 <__divsf3x>:
    10b2:	14 d1       	rcall	.+552    	; 0x12dc <__fp_split3>
    10b4:	98 f3       	brcs	.-26     	; 0x109c <__divsf3+0x4>

000010b6 <__divsf3_pse>:
    10b6:	99 23       	and	r25, r25
    10b8:	c9 f3       	breq	.-14     	; 0x10ac <__divsf3+0x14>
    10ba:	55 23       	and	r21, r21
    10bc:	b1 f3       	breq	.-20     	; 0x10aa <__divsf3+0x12>
    10be:	95 1b       	sub	r25, r21
    10c0:	55 0b       	sbc	r21, r21
    10c2:	bb 27       	eor	r27, r27
    10c4:	aa 27       	eor	r26, r26
    10c6:	62 17       	cp	r22, r18
    10c8:	73 07       	cpc	r23, r19
    10ca:	84 07       	cpc	r24, r20
    10cc:	38 f0       	brcs	.+14     	; 0x10dc <__divsf3_pse+0x26>
    10ce:	9f 5f       	subi	r25, 0xFF	; 255
    10d0:	5f 4f       	sbci	r21, 0xFF	; 255
    10d2:	22 0f       	add	r18, r18
    10d4:	33 1f       	adc	r19, r19
    10d6:	44 1f       	adc	r20, r20
    10d8:	aa 1f       	adc	r26, r26
    10da:	a9 f3       	breq	.-22     	; 0x10c6 <__divsf3_pse+0x10>
    10dc:	33 d0       	rcall	.+102    	; 0x1144 <__divsf3_pse+0x8e>
    10de:	0e 2e       	mov	r0, r30
    10e0:	3a f0       	brmi	.+14     	; 0x10f0 <__divsf3_pse+0x3a>
    10e2:	e0 e8       	ldi	r30, 0x80	; 128
    10e4:	30 d0       	rcall	.+96     	; 0x1146 <__divsf3_pse+0x90>
    10e6:	91 50       	subi	r25, 0x01	; 1
    10e8:	50 40       	sbci	r21, 0x00	; 0
    10ea:	e6 95       	lsr	r30
    10ec:	00 1c       	adc	r0, r0
    10ee:	ca f7       	brpl	.-14     	; 0x10e2 <__divsf3_pse+0x2c>
    10f0:	29 d0       	rcall	.+82     	; 0x1144 <__divsf3_pse+0x8e>
    10f2:	fe 2f       	mov	r31, r30
    10f4:	27 d0       	rcall	.+78     	; 0x1144 <__divsf3_pse+0x8e>
    10f6:	66 0f       	add	r22, r22
    10f8:	77 1f       	adc	r23, r23
    10fa:	88 1f       	adc	r24, r24
    10fc:	bb 1f       	adc	r27, r27
    10fe:	26 17       	cp	r18, r22
    1100:	37 07       	cpc	r19, r23
    1102:	48 07       	cpc	r20, r24
    1104:	ab 07       	cpc	r26, r27
    1106:	b0 e8       	ldi	r27, 0x80	; 128
    1108:	09 f0       	breq	.+2      	; 0x110c <__divsf3_pse+0x56>
    110a:	bb 0b       	sbc	r27, r27
    110c:	80 2d       	mov	r24, r0
    110e:	bf 01       	movw	r22, r30
    1110:	ff 27       	eor	r31, r31
    1112:	93 58       	subi	r25, 0x83	; 131
    1114:	5f 4f       	sbci	r21, 0xFF	; 255
    1116:	2a f0       	brmi	.+10     	; 0x1122 <__divsf3_pse+0x6c>
    1118:	9e 3f       	cpi	r25, 0xFE	; 254
    111a:	51 05       	cpc	r21, r1
    111c:	68 f0       	brcs	.+26     	; 0x1138 <__divsf3_pse+0x82>
    111e:	b6 c0       	rjmp	.+364    	; 0x128c <__fp_inf>
    1120:	00 c1       	rjmp	.+512    	; 0x1322 <__fp_szero>
    1122:	5f 3f       	cpi	r21, 0xFF	; 255
    1124:	ec f3       	brlt	.-6      	; 0x1120 <__divsf3_pse+0x6a>
    1126:	98 3e       	cpi	r25, 0xE8	; 232
    1128:	dc f3       	brlt	.-10     	; 0x1120 <__divsf3_pse+0x6a>
    112a:	86 95       	lsr	r24
    112c:	77 95       	ror	r23
    112e:	67 95       	ror	r22
    1130:	b7 95       	ror	r27
    1132:	f7 95       	ror	r31
    1134:	9f 5f       	subi	r25, 0xFF	; 255
    1136:	c9 f7       	brne	.-14     	; 0x112a <__divsf3_pse+0x74>
    1138:	88 0f       	add	r24, r24
    113a:	91 1d       	adc	r25, r1
    113c:	96 95       	lsr	r25
    113e:	87 95       	ror	r24
    1140:	97 f9       	bld	r25, 7
    1142:	08 95       	ret
    1144:	e1 e0       	ldi	r30, 0x01	; 1
    1146:	66 0f       	add	r22, r22
    1148:	77 1f       	adc	r23, r23
    114a:	88 1f       	adc	r24, r24
    114c:	bb 1f       	adc	r27, r27
    114e:	62 17       	cp	r22, r18
    1150:	73 07       	cpc	r23, r19
    1152:	84 07       	cpc	r24, r20
    1154:	ba 07       	cpc	r27, r26
    1156:	20 f0       	brcs	.+8      	; 0x1160 <__divsf3_pse+0xaa>
    1158:	62 1b       	sub	r22, r18
    115a:	73 0b       	sbc	r23, r19
    115c:	84 0b       	sbc	r24, r20
    115e:	ba 0b       	sbc	r27, r26
    1160:	ee 1f       	adc	r30, r30
    1162:	88 f7       	brcc	.-30     	; 0x1146 <__divsf3_pse+0x90>
    1164:	e0 95       	com	r30
    1166:	08 95       	ret

00001168 <__fixsfsi>:
    1168:	04 d0       	rcall	.+8      	; 0x1172 <__fixunssfsi>
    116a:	68 94       	set
    116c:	b1 11       	cpse	r27, r1
    116e:	d9 c0       	rjmp	.+434    	; 0x1322 <__fp_szero>
    1170:	08 95       	ret

00001172 <__fixunssfsi>:
    1172:	bc d0       	rcall	.+376    	; 0x12ec <__fp_splitA>
    1174:	88 f0       	brcs	.+34     	; 0x1198 <__fixunssfsi+0x26>
    1176:	9f 57       	subi	r25, 0x7F	; 127
    1178:	90 f0       	brcs	.+36     	; 0x119e <__fixunssfsi+0x2c>
    117a:	b9 2f       	mov	r27, r25
    117c:	99 27       	eor	r25, r25
    117e:	b7 51       	subi	r27, 0x17	; 23
    1180:	a0 f0       	brcs	.+40     	; 0x11aa <__fixunssfsi+0x38>
    1182:	d1 f0       	breq	.+52     	; 0x11b8 <__fixunssfsi+0x46>
    1184:	66 0f       	add	r22, r22
    1186:	77 1f       	adc	r23, r23
    1188:	88 1f       	adc	r24, r24
    118a:	99 1f       	adc	r25, r25
    118c:	1a f0       	brmi	.+6      	; 0x1194 <__fixunssfsi+0x22>
    118e:	ba 95       	dec	r27
    1190:	c9 f7       	brne	.-14     	; 0x1184 <__fixunssfsi+0x12>
    1192:	12 c0       	rjmp	.+36     	; 0x11b8 <__fixunssfsi+0x46>
    1194:	b1 30       	cpi	r27, 0x01	; 1
    1196:	81 f0       	breq	.+32     	; 0x11b8 <__fixunssfsi+0x46>
    1198:	c3 d0       	rcall	.+390    	; 0x1320 <__fp_zero>
    119a:	b1 e0       	ldi	r27, 0x01	; 1
    119c:	08 95       	ret
    119e:	c0 c0       	rjmp	.+384    	; 0x1320 <__fp_zero>
    11a0:	67 2f       	mov	r22, r23
    11a2:	78 2f       	mov	r23, r24
    11a4:	88 27       	eor	r24, r24
    11a6:	b8 5f       	subi	r27, 0xF8	; 248
    11a8:	39 f0       	breq	.+14     	; 0x11b8 <__fixunssfsi+0x46>
    11aa:	b9 3f       	cpi	r27, 0xF9	; 249
    11ac:	cc f3       	brlt	.-14     	; 0x11a0 <__fixunssfsi+0x2e>
    11ae:	86 95       	lsr	r24
    11b0:	77 95       	ror	r23
    11b2:	67 95       	ror	r22
    11b4:	b3 95       	inc	r27
    11b6:	d9 f7       	brne	.-10     	; 0x11ae <__fixunssfsi+0x3c>
    11b8:	3e f4       	brtc	.+14     	; 0x11c8 <__fixunssfsi+0x56>
    11ba:	90 95       	com	r25
    11bc:	80 95       	com	r24
    11be:	70 95       	com	r23
    11c0:	61 95       	neg	r22
    11c2:	7f 4f       	sbci	r23, 0xFF	; 255
    11c4:	8f 4f       	sbci	r24, 0xFF	; 255
    11c6:	9f 4f       	sbci	r25, 0xFF	; 255
    11c8:	08 95       	ret

000011ca <__floatunsisf>:
    11ca:	e8 94       	clt
    11cc:	09 c0       	rjmp	.+18     	; 0x11e0 <__floatsisf+0x12>

000011ce <__floatsisf>:
    11ce:	97 fb       	bst	r25, 7
    11d0:	3e f4       	brtc	.+14     	; 0x11e0 <__floatsisf+0x12>
    11d2:	90 95       	com	r25
    11d4:	80 95       	com	r24
    11d6:	70 95       	com	r23
    11d8:	61 95       	neg	r22
    11da:	7f 4f       	sbci	r23, 0xFF	; 255
    11dc:	8f 4f       	sbci	r24, 0xFF	; 255
    11de:	9f 4f       	sbci	r25, 0xFF	; 255
    11e0:	99 23       	and	r25, r25
    11e2:	a9 f0       	breq	.+42     	; 0x120e <__floatsisf+0x40>
    11e4:	f9 2f       	mov	r31, r25
    11e6:	96 e9       	ldi	r25, 0x96	; 150
    11e8:	bb 27       	eor	r27, r27
    11ea:	93 95       	inc	r25
    11ec:	f6 95       	lsr	r31
    11ee:	87 95       	ror	r24
    11f0:	77 95       	ror	r23
    11f2:	67 95       	ror	r22
    11f4:	b7 95       	ror	r27
    11f6:	f1 11       	cpse	r31, r1
    11f8:	f8 cf       	rjmp	.-16     	; 0x11ea <__floatsisf+0x1c>
    11fa:	fa f4       	brpl	.+62     	; 0x123a <__floatsisf+0x6c>
    11fc:	bb 0f       	add	r27, r27
    11fe:	11 f4       	brne	.+4      	; 0x1204 <__floatsisf+0x36>
    1200:	60 ff       	sbrs	r22, 0
    1202:	1b c0       	rjmp	.+54     	; 0x123a <__floatsisf+0x6c>
    1204:	6f 5f       	subi	r22, 0xFF	; 255
    1206:	7f 4f       	sbci	r23, 0xFF	; 255
    1208:	8f 4f       	sbci	r24, 0xFF	; 255
    120a:	9f 4f       	sbci	r25, 0xFF	; 255
    120c:	16 c0       	rjmp	.+44     	; 0x123a <__floatsisf+0x6c>
    120e:	88 23       	and	r24, r24
    1210:	11 f0       	breq	.+4      	; 0x1216 <__floatsisf+0x48>
    1212:	96 e9       	ldi	r25, 0x96	; 150
    1214:	11 c0       	rjmp	.+34     	; 0x1238 <__floatsisf+0x6a>
    1216:	77 23       	and	r23, r23
    1218:	21 f0       	breq	.+8      	; 0x1222 <__floatsisf+0x54>
    121a:	9e e8       	ldi	r25, 0x8E	; 142
    121c:	87 2f       	mov	r24, r23
    121e:	76 2f       	mov	r23, r22
    1220:	05 c0       	rjmp	.+10     	; 0x122c <__floatsisf+0x5e>
    1222:	66 23       	and	r22, r22
    1224:	71 f0       	breq	.+28     	; 0x1242 <__floatsisf+0x74>
    1226:	96 e8       	ldi	r25, 0x86	; 134
    1228:	86 2f       	mov	r24, r22
    122a:	70 e0       	ldi	r23, 0x00	; 0
    122c:	60 e0       	ldi	r22, 0x00	; 0
    122e:	2a f0       	brmi	.+10     	; 0x123a <__floatsisf+0x6c>
    1230:	9a 95       	dec	r25
    1232:	66 0f       	add	r22, r22
    1234:	77 1f       	adc	r23, r23
    1236:	88 1f       	adc	r24, r24
    1238:	da f7       	brpl	.-10     	; 0x1230 <__floatsisf+0x62>
    123a:	88 0f       	add	r24, r24
    123c:	96 95       	lsr	r25
    123e:	87 95       	ror	r24
    1240:	97 f9       	bld	r25, 7
    1242:	08 95       	ret

00001244 <__fp_cmp>:
    1244:	99 0f       	add	r25, r25
    1246:	00 08       	sbc	r0, r0
    1248:	55 0f       	add	r21, r21
    124a:	aa 0b       	sbc	r26, r26
    124c:	e0 e8       	ldi	r30, 0x80	; 128
    124e:	fe ef       	ldi	r31, 0xFE	; 254
    1250:	16 16       	cp	r1, r22
    1252:	17 06       	cpc	r1, r23
    1254:	e8 07       	cpc	r30, r24
    1256:	f9 07       	cpc	r31, r25
    1258:	c0 f0       	brcs	.+48     	; 0x128a <__fp_cmp+0x46>
    125a:	12 16       	cp	r1, r18
    125c:	13 06       	cpc	r1, r19
    125e:	e4 07       	cpc	r30, r20
    1260:	f5 07       	cpc	r31, r21
    1262:	98 f0       	brcs	.+38     	; 0x128a <__fp_cmp+0x46>
    1264:	62 1b       	sub	r22, r18
    1266:	73 0b       	sbc	r23, r19
    1268:	84 0b       	sbc	r24, r20
    126a:	95 0b       	sbc	r25, r21
    126c:	39 f4       	brne	.+14     	; 0x127c <__fp_cmp+0x38>
    126e:	0a 26       	eor	r0, r26
    1270:	61 f0       	breq	.+24     	; 0x128a <__fp_cmp+0x46>
    1272:	23 2b       	or	r18, r19
    1274:	24 2b       	or	r18, r20
    1276:	25 2b       	or	r18, r21
    1278:	21 f4       	brne	.+8      	; 0x1282 <__fp_cmp+0x3e>
    127a:	08 95       	ret
    127c:	0a 26       	eor	r0, r26
    127e:	09 f4       	brne	.+2      	; 0x1282 <__fp_cmp+0x3e>
    1280:	a1 40       	sbci	r26, 0x01	; 1
    1282:	a6 95       	lsr	r26
    1284:	8f ef       	ldi	r24, 0xFF	; 255
    1286:	81 1d       	adc	r24, r1
    1288:	81 1d       	adc	r24, r1
    128a:	08 95       	ret

0000128c <__fp_inf>:
    128c:	97 f9       	bld	r25, 7
    128e:	9f 67       	ori	r25, 0x7F	; 127
    1290:	80 e8       	ldi	r24, 0x80	; 128
    1292:	70 e0       	ldi	r23, 0x00	; 0
    1294:	60 e0       	ldi	r22, 0x00	; 0
    1296:	08 95       	ret

00001298 <__fp_nan>:
    1298:	9f ef       	ldi	r25, 0xFF	; 255
    129a:	80 ec       	ldi	r24, 0xC0	; 192
    129c:	08 95       	ret

0000129e <__fp_pscA>:
    129e:	00 24       	eor	r0, r0
    12a0:	0a 94       	dec	r0
    12a2:	16 16       	cp	r1, r22
    12a4:	17 06       	cpc	r1, r23
    12a6:	18 06       	cpc	r1, r24
    12a8:	09 06       	cpc	r0, r25
    12aa:	08 95       	ret

000012ac <__fp_pscB>:
    12ac:	00 24       	eor	r0, r0
    12ae:	0a 94       	dec	r0
    12b0:	12 16       	cp	r1, r18
    12b2:	13 06       	cpc	r1, r19
    12b4:	14 06       	cpc	r1, r20
    12b6:	05 06       	cpc	r0, r21
    12b8:	08 95       	ret

000012ba <__fp_round>:
    12ba:	09 2e       	mov	r0, r25
    12bc:	03 94       	inc	r0
    12be:	00 0c       	add	r0, r0
    12c0:	11 f4       	brne	.+4      	; 0x12c6 <__fp_round+0xc>
    12c2:	88 23       	and	r24, r24
    12c4:	52 f0       	brmi	.+20     	; 0x12da <__fp_round+0x20>
    12c6:	bb 0f       	add	r27, r27
    12c8:	40 f4       	brcc	.+16     	; 0x12da <__fp_round+0x20>
    12ca:	bf 2b       	or	r27, r31
    12cc:	11 f4       	brne	.+4      	; 0x12d2 <__fp_round+0x18>
    12ce:	60 ff       	sbrs	r22, 0
    12d0:	04 c0       	rjmp	.+8      	; 0x12da <__fp_round+0x20>
    12d2:	6f 5f       	subi	r22, 0xFF	; 255
    12d4:	7f 4f       	sbci	r23, 0xFF	; 255
    12d6:	8f 4f       	sbci	r24, 0xFF	; 255
    12d8:	9f 4f       	sbci	r25, 0xFF	; 255
    12da:	08 95       	ret

000012dc <__fp_split3>:
    12dc:	57 fd       	sbrc	r21, 7
    12de:	90 58       	subi	r25, 0x80	; 128
    12e0:	44 0f       	add	r20, r20
    12e2:	55 1f       	adc	r21, r21
    12e4:	59 f0       	breq	.+22     	; 0x12fc <__fp_splitA+0x10>
    12e6:	5f 3f       	cpi	r21, 0xFF	; 255
    12e8:	71 f0       	breq	.+28     	; 0x1306 <__fp_splitA+0x1a>
    12ea:	47 95       	ror	r20

000012ec <__fp_splitA>:
    12ec:	88 0f       	add	r24, r24
    12ee:	97 fb       	bst	r25, 7
    12f0:	99 1f       	adc	r25, r25
    12f2:	61 f0       	breq	.+24     	; 0x130c <__fp_splitA+0x20>
    12f4:	9f 3f       	cpi	r25, 0xFF	; 255
    12f6:	79 f0       	breq	.+30     	; 0x1316 <__fp_splitA+0x2a>
    12f8:	87 95       	ror	r24
    12fa:	08 95       	ret
    12fc:	12 16       	cp	r1, r18
    12fe:	13 06       	cpc	r1, r19
    1300:	14 06       	cpc	r1, r20
    1302:	55 1f       	adc	r21, r21
    1304:	f2 cf       	rjmp	.-28     	; 0x12ea <__fp_split3+0xe>
    1306:	46 95       	lsr	r20
    1308:	f1 df       	rcall	.-30     	; 0x12ec <__fp_splitA>
    130a:	08 c0       	rjmp	.+16     	; 0x131c <__fp_splitA+0x30>
    130c:	16 16       	cp	r1, r22
    130e:	17 06       	cpc	r1, r23
    1310:	18 06       	cpc	r1, r24
    1312:	99 1f       	adc	r25, r25
    1314:	f1 cf       	rjmp	.-30     	; 0x12f8 <__fp_splitA+0xc>
    1316:	86 95       	lsr	r24
    1318:	71 05       	cpc	r23, r1
    131a:	61 05       	cpc	r22, r1
    131c:	08 94       	sec
    131e:	08 95       	ret

00001320 <__fp_zero>:
    1320:	e8 94       	clt

00001322 <__fp_szero>:
    1322:	bb 27       	eor	r27, r27
    1324:	66 27       	eor	r22, r22
    1326:	77 27       	eor	r23, r23
    1328:	cb 01       	movw	r24, r22
    132a:	97 f9       	bld	r25, 7
    132c:	08 95       	ret

0000132e <__gesf2>:
    132e:	8a df       	rcall	.-236    	; 0x1244 <__fp_cmp>
    1330:	08 f4       	brcc	.+2      	; 0x1334 <__gesf2+0x6>
    1332:	8f ef       	ldi	r24, 0xFF	; 255
    1334:	08 95       	ret

00001336 <__mulsf3>:
    1336:	0b d0       	rcall	.+22     	; 0x134e <__mulsf3x>
    1338:	c0 cf       	rjmp	.-128    	; 0x12ba <__fp_round>
    133a:	b1 df       	rcall	.-158    	; 0x129e <__fp_pscA>
    133c:	28 f0       	brcs	.+10     	; 0x1348 <__mulsf3+0x12>
    133e:	b6 df       	rcall	.-148    	; 0x12ac <__fp_pscB>
    1340:	18 f0       	brcs	.+6      	; 0x1348 <__mulsf3+0x12>
    1342:	95 23       	and	r25, r21
    1344:	09 f0       	breq	.+2      	; 0x1348 <__mulsf3+0x12>
    1346:	a2 cf       	rjmp	.-188    	; 0x128c <__fp_inf>
    1348:	a7 cf       	rjmp	.-178    	; 0x1298 <__fp_nan>
    134a:	11 24       	eor	r1, r1
    134c:	ea cf       	rjmp	.-44     	; 0x1322 <__fp_szero>

0000134e <__mulsf3x>:
    134e:	c6 df       	rcall	.-116    	; 0x12dc <__fp_split3>
    1350:	a0 f3       	brcs	.-24     	; 0x133a <__mulsf3+0x4>

00001352 <__mulsf3_pse>:
    1352:	95 9f       	mul	r25, r21
    1354:	d1 f3       	breq	.-12     	; 0x134a <__mulsf3+0x14>
    1356:	95 0f       	add	r25, r21
    1358:	50 e0       	ldi	r21, 0x00	; 0
    135a:	55 1f       	adc	r21, r21
    135c:	62 9f       	mul	r22, r18
    135e:	f0 01       	movw	r30, r0
    1360:	72 9f       	mul	r23, r18
    1362:	bb 27       	eor	r27, r27
    1364:	f0 0d       	add	r31, r0
    1366:	b1 1d       	adc	r27, r1
    1368:	63 9f       	mul	r22, r19
    136a:	aa 27       	eor	r26, r26
    136c:	f0 0d       	add	r31, r0
    136e:	b1 1d       	adc	r27, r1
    1370:	aa 1f       	adc	r26, r26
    1372:	64 9f       	mul	r22, r20
    1374:	66 27       	eor	r22, r22
    1376:	b0 0d       	add	r27, r0
    1378:	a1 1d       	adc	r26, r1
    137a:	66 1f       	adc	r22, r22
    137c:	82 9f       	mul	r24, r18
    137e:	22 27       	eor	r18, r18
    1380:	b0 0d       	add	r27, r0
    1382:	a1 1d       	adc	r26, r1
    1384:	62 1f       	adc	r22, r18
    1386:	73 9f       	mul	r23, r19
    1388:	b0 0d       	add	r27, r0
    138a:	a1 1d       	adc	r26, r1
    138c:	62 1f       	adc	r22, r18
    138e:	83 9f       	mul	r24, r19
    1390:	a0 0d       	add	r26, r0
    1392:	61 1d       	adc	r22, r1
    1394:	22 1f       	adc	r18, r18
    1396:	74 9f       	mul	r23, r20
    1398:	33 27       	eor	r19, r19
    139a:	a0 0d       	add	r26, r0
    139c:	61 1d       	adc	r22, r1
    139e:	23 1f       	adc	r18, r19
    13a0:	84 9f       	mul	r24, r20
    13a2:	60 0d       	add	r22, r0
    13a4:	21 1d       	adc	r18, r1
    13a6:	82 2f       	mov	r24, r18
    13a8:	76 2f       	mov	r23, r22
    13aa:	6a 2f       	mov	r22, r26
    13ac:	11 24       	eor	r1, r1
    13ae:	9f 57       	subi	r25, 0x7F	; 127
    13b0:	50 40       	sbci	r21, 0x00	; 0
    13b2:	8a f0       	brmi	.+34     	; 0x13d6 <__mulsf3_pse+0x84>
    13b4:	e1 f0       	breq	.+56     	; 0x13ee <__mulsf3_pse+0x9c>
    13b6:	88 23       	and	r24, r24
    13b8:	4a f0       	brmi	.+18     	; 0x13cc <__mulsf3_pse+0x7a>
    13ba:	ee 0f       	add	r30, r30
    13bc:	ff 1f       	adc	r31, r31
    13be:	bb 1f       	adc	r27, r27
    13c0:	66 1f       	adc	r22, r22
    13c2:	77 1f       	adc	r23, r23
    13c4:	88 1f       	adc	r24, r24
    13c6:	91 50       	subi	r25, 0x01	; 1
    13c8:	50 40       	sbci	r21, 0x00	; 0
    13ca:	a9 f7       	brne	.-22     	; 0x13b6 <__mulsf3_pse+0x64>
    13cc:	9e 3f       	cpi	r25, 0xFE	; 254
    13ce:	51 05       	cpc	r21, r1
    13d0:	70 f0       	brcs	.+28     	; 0x13ee <__mulsf3_pse+0x9c>
    13d2:	5c cf       	rjmp	.-328    	; 0x128c <__fp_inf>
    13d4:	a6 cf       	rjmp	.-180    	; 0x1322 <__fp_szero>
    13d6:	5f 3f       	cpi	r21, 0xFF	; 255
    13d8:	ec f3       	brlt	.-6      	; 0x13d4 <__mulsf3_pse+0x82>
    13da:	98 3e       	cpi	r25, 0xE8	; 232
    13dc:	dc f3       	brlt	.-10     	; 0x13d4 <__mulsf3_pse+0x82>
    13de:	86 95       	lsr	r24
    13e0:	77 95       	ror	r23
    13e2:	67 95       	ror	r22
    13e4:	b7 95       	ror	r27
    13e6:	f7 95       	ror	r31
    13e8:	e7 95       	ror	r30
    13ea:	9f 5f       	subi	r25, 0xFF	; 255
    13ec:	c1 f7       	brne	.-16     	; 0x13de <__mulsf3_pse+0x8c>
    13ee:	fe 2b       	or	r31, r30
    13f0:	88 0f       	add	r24, r24
    13f2:	91 1d       	adc	r25, r1
    13f4:	96 95       	lsr	r25
    13f6:	87 95       	ror	r24
    13f8:	97 f9       	bld	r25, 7
    13fa:	08 95       	ret

000013fc <__tablejump2__>:
    13fc:	ee 0f       	add	r30, r30
    13fe:	ff 1f       	adc	r31, r31

00001400 <__tablejump__>:
    1400:	05 90       	lpm	r0, Z+
    1402:	f4 91       	lpm	r31, Z
    1404:	e0 2d       	mov	r30, r0
    1406:	19 94       	eijmp

00001408 <__umulhisi3>:
    1408:	a2 9f       	mul	r26, r18
    140a:	b0 01       	movw	r22, r0
    140c:	b3 9f       	mul	r27, r19
    140e:	c0 01       	movw	r24, r0
    1410:	a3 9f       	mul	r26, r19
    1412:	70 0d       	add	r23, r0
    1414:	81 1d       	adc	r24, r1
    1416:	11 24       	eor	r1, r1
    1418:	91 1d       	adc	r25, r1
    141a:	b2 9f       	mul	r27, r18
    141c:	70 0d       	add	r23, r0
    141e:	81 1d       	adc	r24, r1
    1420:	11 24       	eor	r1, r1
    1422:	91 1d       	adc	r25, r1
    1424:	08 95       	ret

00001426 <fdevopen>:
    1426:	0f 93       	push	r16
    1428:	1f 93       	push	r17
    142a:	cf 93       	push	r28
    142c:	df 93       	push	r29
    142e:	ec 01       	movw	r28, r24
    1430:	8b 01       	movw	r16, r22
    1432:	00 97       	sbiw	r24, 0x00	; 0
    1434:	31 f4       	brne	.+12     	; 0x1442 <fdevopen+0x1c>
    1436:	61 15       	cp	r22, r1
    1438:	71 05       	cpc	r23, r1
    143a:	19 f4       	brne	.+6      	; 0x1442 <fdevopen+0x1c>
    143c:	80 e0       	ldi	r24, 0x00	; 0
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	37 c0       	rjmp	.+110    	; 0x14b0 <fdevopen+0x8a>
    1442:	6e e0       	ldi	r22, 0x0E	; 14
    1444:	70 e0       	ldi	r23, 0x00	; 0
    1446:	81 e0       	ldi	r24, 0x01	; 1
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	68 d2       	rcall	.+1232   	; 0x191c <calloc>
    144c:	fc 01       	movw	r30, r24
    144e:	00 97       	sbiw	r24, 0x00	; 0
    1450:	a9 f3       	breq	.-22     	; 0x143c <fdevopen+0x16>
    1452:	80 e8       	ldi	r24, 0x80	; 128
    1454:	83 83       	std	Z+3, r24	; 0x03
    1456:	01 15       	cp	r16, r1
    1458:	11 05       	cpc	r17, r1
    145a:	71 f0       	breq	.+28     	; 0x1478 <fdevopen+0x52>
    145c:	13 87       	std	Z+11, r17	; 0x0b
    145e:	02 87       	std	Z+10, r16	; 0x0a
    1460:	81 e8       	ldi	r24, 0x81	; 129
    1462:	83 83       	std	Z+3, r24	; 0x03
    1464:	80 91 62 03 	lds	r24, 0x0362
    1468:	90 91 63 03 	lds	r25, 0x0363
    146c:	89 2b       	or	r24, r25
    146e:	21 f4       	brne	.+8      	; 0x1478 <fdevopen+0x52>
    1470:	f0 93 63 03 	sts	0x0363, r31
    1474:	e0 93 62 03 	sts	0x0362, r30
    1478:	20 97       	sbiw	r28, 0x00	; 0
    147a:	c9 f0       	breq	.+50     	; 0x14ae <fdevopen+0x88>
    147c:	d1 87       	std	Z+9, r29	; 0x09
    147e:	c0 87       	std	Z+8, r28	; 0x08
    1480:	83 81       	ldd	r24, Z+3	; 0x03
    1482:	82 60       	ori	r24, 0x02	; 2
    1484:	83 83       	std	Z+3, r24	; 0x03
    1486:	80 91 64 03 	lds	r24, 0x0364
    148a:	90 91 65 03 	lds	r25, 0x0365
    148e:	89 2b       	or	r24, r25
    1490:	71 f4       	brne	.+28     	; 0x14ae <fdevopen+0x88>
    1492:	f0 93 65 03 	sts	0x0365, r31
    1496:	e0 93 64 03 	sts	0x0364, r30
    149a:	80 91 66 03 	lds	r24, 0x0366
    149e:	90 91 67 03 	lds	r25, 0x0367
    14a2:	89 2b       	or	r24, r25
    14a4:	21 f4       	brne	.+8      	; 0x14ae <fdevopen+0x88>
    14a6:	f0 93 67 03 	sts	0x0367, r31
    14aa:	e0 93 66 03 	sts	0x0366, r30
    14ae:	cf 01       	movw	r24, r30
    14b0:	df 91       	pop	r29
    14b2:	cf 91       	pop	r28
    14b4:	1f 91       	pop	r17
    14b6:	0f 91       	pop	r16
    14b8:	08 95       	ret

000014ba <printf>:
    14ba:	cf 93       	push	r28
    14bc:	df 93       	push	r29
    14be:	cd b7       	in	r28, 0x3d	; 61
    14c0:	de b7       	in	r29, 0x3e	; 62
    14c2:	fe 01       	movw	r30, r28
    14c4:	36 96       	adiw	r30, 0x06	; 6
    14c6:	61 91       	ld	r22, Z+
    14c8:	71 91       	ld	r23, Z+
    14ca:	af 01       	movw	r20, r30
    14cc:	80 91 64 03 	lds	r24, 0x0364
    14d0:	90 91 65 03 	lds	r25, 0x0365
    14d4:	35 d0       	rcall	.+106    	; 0x1540 <vfprintf>
    14d6:	df 91       	pop	r29
    14d8:	cf 91       	pop	r28
    14da:	08 95       	ret

000014dc <putchar>:
    14dc:	60 91 64 03 	lds	r22, 0x0364
    14e0:	70 91 65 03 	lds	r23, 0x0365
    14e4:	79 c3       	rjmp	.+1778   	; 0x1bd8 <fputc>

000014e6 <puts>:
    14e6:	0f 93       	push	r16
    14e8:	1f 93       	push	r17
    14ea:	cf 93       	push	r28
    14ec:	df 93       	push	r29
    14ee:	e0 91 64 03 	lds	r30, 0x0364
    14f2:	f0 91 65 03 	lds	r31, 0x0365
    14f6:	23 81       	ldd	r18, Z+3	; 0x03
    14f8:	21 ff       	sbrs	r18, 1
    14fa:	1b c0       	rjmp	.+54     	; 0x1532 <puts+0x4c>
    14fc:	ec 01       	movw	r28, r24
    14fe:	00 e0       	ldi	r16, 0x00	; 0
    1500:	10 e0       	ldi	r17, 0x00	; 0
    1502:	89 91       	ld	r24, Y+
    1504:	60 91 64 03 	lds	r22, 0x0364
    1508:	70 91 65 03 	lds	r23, 0x0365
    150c:	db 01       	movw	r26, r22
    150e:	18 96       	adiw	r26, 0x08	; 8
    1510:	ed 91       	ld	r30, X+
    1512:	fc 91       	ld	r31, X
    1514:	19 97       	sbiw	r26, 0x09	; 9
    1516:	88 23       	and	r24, r24
    1518:	31 f0       	breq	.+12     	; 0x1526 <puts+0x40>
    151a:	19 95       	eicall
    151c:	89 2b       	or	r24, r25
    151e:	89 f3       	breq	.-30     	; 0x1502 <puts+0x1c>
    1520:	0f ef       	ldi	r16, 0xFF	; 255
    1522:	1f ef       	ldi	r17, 0xFF	; 255
    1524:	ee cf       	rjmp	.-36     	; 0x1502 <puts+0x1c>
    1526:	8a e0       	ldi	r24, 0x0A	; 10
    1528:	19 95       	eicall
    152a:	89 2b       	or	r24, r25
    152c:	11 f4       	brne	.+4      	; 0x1532 <puts+0x4c>
    152e:	c8 01       	movw	r24, r16
    1530:	02 c0       	rjmp	.+4      	; 0x1536 <puts+0x50>
    1532:	8f ef       	ldi	r24, 0xFF	; 255
    1534:	9f ef       	ldi	r25, 0xFF	; 255
    1536:	df 91       	pop	r29
    1538:	cf 91       	pop	r28
    153a:	1f 91       	pop	r17
    153c:	0f 91       	pop	r16
    153e:	08 95       	ret

00001540 <vfprintf>:
    1540:	2f 92       	push	r2
    1542:	3f 92       	push	r3
    1544:	4f 92       	push	r4
    1546:	5f 92       	push	r5
    1548:	6f 92       	push	r6
    154a:	7f 92       	push	r7
    154c:	8f 92       	push	r8
    154e:	9f 92       	push	r9
    1550:	af 92       	push	r10
    1552:	bf 92       	push	r11
    1554:	cf 92       	push	r12
    1556:	df 92       	push	r13
    1558:	ef 92       	push	r14
    155a:	ff 92       	push	r15
    155c:	0f 93       	push	r16
    155e:	1f 93       	push	r17
    1560:	cf 93       	push	r28
    1562:	df 93       	push	r29
    1564:	cd b7       	in	r28, 0x3d	; 61
    1566:	de b7       	in	r29, 0x3e	; 62
    1568:	2c 97       	sbiw	r28, 0x0c	; 12
    156a:	0f b6       	in	r0, 0x3f	; 63
    156c:	f8 94       	cli
    156e:	de bf       	out	0x3e, r29	; 62
    1570:	0f be       	out	0x3f, r0	; 63
    1572:	cd bf       	out	0x3d, r28	; 61
    1574:	7c 01       	movw	r14, r24
    1576:	6b 01       	movw	r12, r22
    1578:	8a 01       	movw	r16, r20
    157a:	fc 01       	movw	r30, r24
    157c:	17 82       	std	Z+7, r1	; 0x07
    157e:	16 82       	std	Z+6, r1	; 0x06
    1580:	83 81       	ldd	r24, Z+3	; 0x03
    1582:	81 ff       	sbrs	r24, 1
    1584:	b0 c1       	rjmp	.+864    	; 0x18e6 <vfprintf+0x3a6>
    1586:	ce 01       	movw	r24, r28
    1588:	01 96       	adiw	r24, 0x01	; 1
    158a:	4c 01       	movw	r8, r24
    158c:	f7 01       	movw	r30, r14
    158e:	93 81       	ldd	r25, Z+3	; 0x03
    1590:	f6 01       	movw	r30, r12
    1592:	93 fd       	sbrc	r25, 3
    1594:	85 91       	lpm	r24, Z+
    1596:	93 ff       	sbrs	r25, 3
    1598:	81 91       	ld	r24, Z+
    159a:	6f 01       	movw	r12, r30
    159c:	88 23       	and	r24, r24
    159e:	09 f4       	brne	.+2      	; 0x15a2 <vfprintf+0x62>
    15a0:	9e c1       	rjmp	.+828    	; 0x18de <vfprintf+0x39e>
    15a2:	85 32       	cpi	r24, 0x25	; 37
    15a4:	39 f4       	brne	.+14     	; 0x15b4 <vfprintf+0x74>
    15a6:	93 fd       	sbrc	r25, 3
    15a8:	85 91       	lpm	r24, Z+
    15aa:	93 ff       	sbrs	r25, 3
    15ac:	81 91       	ld	r24, Z+
    15ae:	6f 01       	movw	r12, r30
    15b0:	85 32       	cpi	r24, 0x25	; 37
    15b2:	21 f4       	brne	.+8      	; 0x15bc <vfprintf+0x7c>
    15b4:	b7 01       	movw	r22, r14
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	0f d3       	rcall	.+1566   	; 0x1bd8 <fputc>
    15ba:	e8 cf       	rjmp	.-48     	; 0x158c <vfprintf+0x4c>
    15bc:	51 2c       	mov	r5, r1
    15be:	31 2c       	mov	r3, r1
    15c0:	20 e0       	ldi	r18, 0x00	; 0
    15c2:	20 32       	cpi	r18, 0x20	; 32
    15c4:	a0 f4       	brcc	.+40     	; 0x15ee <vfprintf+0xae>
    15c6:	8b 32       	cpi	r24, 0x2B	; 43
    15c8:	69 f0       	breq	.+26     	; 0x15e4 <vfprintf+0xa4>
    15ca:	30 f4       	brcc	.+12     	; 0x15d8 <vfprintf+0x98>
    15cc:	80 32       	cpi	r24, 0x20	; 32
    15ce:	59 f0       	breq	.+22     	; 0x15e6 <vfprintf+0xa6>
    15d0:	83 32       	cpi	r24, 0x23	; 35
    15d2:	69 f4       	brne	.+26     	; 0x15ee <vfprintf+0xae>
    15d4:	20 61       	ori	r18, 0x10	; 16
    15d6:	2c c0       	rjmp	.+88     	; 0x1630 <vfprintf+0xf0>
    15d8:	8d 32       	cpi	r24, 0x2D	; 45
    15da:	39 f0       	breq	.+14     	; 0x15ea <vfprintf+0xaa>
    15dc:	80 33       	cpi	r24, 0x30	; 48
    15de:	39 f4       	brne	.+14     	; 0x15ee <vfprintf+0xae>
    15e0:	21 60       	ori	r18, 0x01	; 1
    15e2:	26 c0       	rjmp	.+76     	; 0x1630 <vfprintf+0xf0>
    15e4:	22 60       	ori	r18, 0x02	; 2
    15e6:	24 60       	ori	r18, 0x04	; 4
    15e8:	23 c0       	rjmp	.+70     	; 0x1630 <vfprintf+0xf0>
    15ea:	28 60       	ori	r18, 0x08	; 8
    15ec:	21 c0       	rjmp	.+66     	; 0x1630 <vfprintf+0xf0>
    15ee:	27 fd       	sbrc	r18, 7
    15f0:	27 c0       	rjmp	.+78     	; 0x1640 <vfprintf+0x100>
    15f2:	30 ed       	ldi	r19, 0xD0	; 208
    15f4:	38 0f       	add	r19, r24
    15f6:	3a 30       	cpi	r19, 0x0A	; 10
    15f8:	78 f4       	brcc	.+30     	; 0x1618 <vfprintf+0xd8>
    15fa:	26 ff       	sbrs	r18, 6
    15fc:	06 c0       	rjmp	.+12     	; 0x160a <vfprintf+0xca>
    15fe:	fa e0       	ldi	r31, 0x0A	; 10
    1600:	5f 9e       	mul	r5, r31
    1602:	30 0d       	add	r19, r0
    1604:	11 24       	eor	r1, r1
    1606:	53 2e       	mov	r5, r19
    1608:	13 c0       	rjmp	.+38     	; 0x1630 <vfprintf+0xf0>
    160a:	8a e0       	ldi	r24, 0x0A	; 10
    160c:	38 9e       	mul	r3, r24
    160e:	30 0d       	add	r19, r0
    1610:	11 24       	eor	r1, r1
    1612:	33 2e       	mov	r3, r19
    1614:	20 62       	ori	r18, 0x20	; 32
    1616:	0c c0       	rjmp	.+24     	; 0x1630 <vfprintf+0xf0>
    1618:	8e 32       	cpi	r24, 0x2E	; 46
    161a:	21 f4       	brne	.+8      	; 0x1624 <vfprintf+0xe4>
    161c:	26 fd       	sbrc	r18, 6
    161e:	5f c1       	rjmp	.+702    	; 0x18de <vfprintf+0x39e>
    1620:	20 64       	ori	r18, 0x40	; 64
    1622:	06 c0       	rjmp	.+12     	; 0x1630 <vfprintf+0xf0>
    1624:	8c 36       	cpi	r24, 0x6C	; 108
    1626:	11 f4       	brne	.+4      	; 0x162c <vfprintf+0xec>
    1628:	20 68       	ori	r18, 0x80	; 128
    162a:	02 c0       	rjmp	.+4      	; 0x1630 <vfprintf+0xf0>
    162c:	88 36       	cpi	r24, 0x68	; 104
    162e:	41 f4       	brne	.+16     	; 0x1640 <vfprintf+0x100>
    1630:	f6 01       	movw	r30, r12
    1632:	93 fd       	sbrc	r25, 3
    1634:	85 91       	lpm	r24, Z+
    1636:	93 ff       	sbrs	r25, 3
    1638:	81 91       	ld	r24, Z+
    163a:	6f 01       	movw	r12, r30
    163c:	81 11       	cpse	r24, r1
    163e:	c1 cf       	rjmp	.-126    	; 0x15c2 <vfprintf+0x82>
    1640:	98 2f       	mov	r25, r24
    1642:	9f 7d       	andi	r25, 0xDF	; 223
    1644:	95 54       	subi	r25, 0x45	; 69
    1646:	93 30       	cpi	r25, 0x03	; 3
    1648:	28 f4       	brcc	.+10     	; 0x1654 <vfprintf+0x114>
    164a:	0c 5f       	subi	r16, 0xFC	; 252
    164c:	1f 4f       	sbci	r17, 0xFF	; 255
    164e:	ff e3       	ldi	r31, 0x3F	; 63
    1650:	f9 83       	std	Y+1, r31	; 0x01
    1652:	0d c0       	rjmp	.+26     	; 0x166e <vfprintf+0x12e>
    1654:	83 36       	cpi	r24, 0x63	; 99
    1656:	31 f0       	breq	.+12     	; 0x1664 <vfprintf+0x124>
    1658:	83 37       	cpi	r24, 0x73	; 115
    165a:	71 f0       	breq	.+28     	; 0x1678 <vfprintf+0x138>
    165c:	83 35       	cpi	r24, 0x53	; 83
    165e:	09 f0       	breq	.+2      	; 0x1662 <vfprintf+0x122>
    1660:	57 c0       	rjmp	.+174    	; 0x1710 <vfprintf+0x1d0>
    1662:	21 c0       	rjmp	.+66     	; 0x16a6 <vfprintf+0x166>
    1664:	f8 01       	movw	r30, r16
    1666:	80 81       	ld	r24, Z
    1668:	89 83       	std	Y+1, r24	; 0x01
    166a:	0e 5f       	subi	r16, 0xFE	; 254
    166c:	1f 4f       	sbci	r17, 0xFF	; 255
    166e:	44 24       	eor	r4, r4
    1670:	43 94       	inc	r4
    1672:	51 2c       	mov	r5, r1
    1674:	54 01       	movw	r10, r8
    1676:	14 c0       	rjmp	.+40     	; 0x16a0 <vfprintf+0x160>
    1678:	38 01       	movw	r6, r16
    167a:	f2 e0       	ldi	r31, 0x02	; 2
    167c:	6f 0e       	add	r6, r31
    167e:	71 1c       	adc	r7, r1
    1680:	f8 01       	movw	r30, r16
    1682:	a0 80       	ld	r10, Z
    1684:	b1 80       	ldd	r11, Z+1	; 0x01
    1686:	26 ff       	sbrs	r18, 6
    1688:	03 c0       	rjmp	.+6      	; 0x1690 <vfprintf+0x150>
    168a:	65 2d       	mov	r22, r5
    168c:	70 e0       	ldi	r23, 0x00	; 0
    168e:	02 c0       	rjmp	.+4      	; 0x1694 <vfprintf+0x154>
    1690:	6f ef       	ldi	r22, 0xFF	; 255
    1692:	7f ef       	ldi	r23, 0xFF	; 255
    1694:	c5 01       	movw	r24, r10
    1696:	2c 87       	std	Y+12, r18	; 0x0c
    1698:	94 d2       	rcall	.+1320   	; 0x1bc2 <strnlen>
    169a:	2c 01       	movw	r4, r24
    169c:	83 01       	movw	r16, r6
    169e:	2c 85       	ldd	r18, Y+12	; 0x0c
    16a0:	2f 77       	andi	r18, 0x7F	; 127
    16a2:	22 2e       	mov	r2, r18
    16a4:	16 c0       	rjmp	.+44     	; 0x16d2 <vfprintf+0x192>
    16a6:	38 01       	movw	r6, r16
    16a8:	f2 e0       	ldi	r31, 0x02	; 2
    16aa:	6f 0e       	add	r6, r31
    16ac:	71 1c       	adc	r7, r1
    16ae:	f8 01       	movw	r30, r16
    16b0:	a0 80       	ld	r10, Z
    16b2:	b1 80       	ldd	r11, Z+1	; 0x01
    16b4:	26 ff       	sbrs	r18, 6
    16b6:	03 c0       	rjmp	.+6      	; 0x16be <vfprintf+0x17e>
    16b8:	65 2d       	mov	r22, r5
    16ba:	70 e0       	ldi	r23, 0x00	; 0
    16bc:	02 c0       	rjmp	.+4      	; 0x16c2 <vfprintf+0x182>
    16be:	6f ef       	ldi	r22, 0xFF	; 255
    16c0:	7f ef       	ldi	r23, 0xFF	; 255
    16c2:	c5 01       	movw	r24, r10
    16c4:	2c 87       	std	Y+12, r18	; 0x0c
    16c6:	6b d2       	rcall	.+1238   	; 0x1b9e <strnlen_P>
    16c8:	2c 01       	movw	r4, r24
    16ca:	2c 85       	ldd	r18, Y+12	; 0x0c
    16cc:	20 68       	ori	r18, 0x80	; 128
    16ce:	22 2e       	mov	r2, r18
    16d0:	83 01       	movw	r16, r6
    16d2:	23 fc       	sbrc	r2, 3
    16d4:	19 c0       	rjmp	.+50     	; 0x1708 <vfprintf+0x1c8>
    16d6:	83 2d       	mov	r24, r3
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	48 16       	cp	r4, r24
    16dc:	59 06       	cpc	r5, r25
    16de:	a0 f4       	brcc	.+40     	; 0x1708 <vfprintf+0x1c8>
    16e0:	b7 01       	movw	r22, r14
    16e2:	80 e2       	ldi	r24, 0x20	; 32
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	78 d2       	rcall	.+1264   	; 0x1bd8 <fputc>
    16e8:	3a 94       	dec	r3
    16ea:	f5 cf       	rjmp	.-22     	; 0x16d6 <vfprintf+0x196>
    16ec:	f5 01       	movw	r30, r10
    16ee:	27 fc       	sbrc	r2, 7
    16f0:	85 91       	lpm	r24, Z+
    16f2:	27 fe       	sbrs	r2, 7
    16f4:	81 91       	ld	r24, Z+
    16f6:	5f 01       	movw	r10, r30
    16f8:	b7 01       	movw	r22, r14
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	6d d2       	rcall	.+1242   	; 0x1bd8 <fputc>
    16fe:	31 10       	cpse	r3, r1
    1700:	3a 94       	dec	r3
    1702:	f1 e0       	ldi	r31, 0x01	; 1
    1704:	4f 1a       	sub	r4, r31
    1706:	51 08       	sbc	r5, r1
    1708:	41 14       	cp	r4, r1
    170a:	51 04       	cpc	r5, r1
    170c:	79 f7       	brne	.-34     	; 0x16ec <vfprintf+0x1ac>
    170e:	de c0       	rjmp	.+444    	; 0x18cc <vfprintf+0x38c>
    1710:	84 36       	cpi	r24, 0x64	; 100
    1712:	11 f0       	breq	.+4      	; 0x1718 <vfprintf+0x1d8>
    1714:	89 36       	cpi	r24, 0x69	; 105
    1716:	31 f5       	brne	.+76     	; 0x1764 <vfprintf+0x224>
    1718:	f8 01       	movw	r30, r16
    171a:	27 ff       	sbrs	r18, 7
    171c:	07 c0       	rjmp	.+14     	; 0x172c <vfprintf+0x1ec>
    171e:	60 81       	ld	r22, Z
    1720:	71 81       	ldd	r23, Z+1	; 0x01
    1722:	82 81       	ldd	r24, Z+2	; 0x02
    1724:	93 81       	ldd	r25, Z+3	; 0x03
    1726:	0c 5f       	subi	r16, 0xFC	; 252
    1728:	1f 4f       	sbci	r17, 0xFF	; 255
    172a:	08 c0       	rjmp	.+16     	; 0x173c <vfprintf+0x1fc>
    172c:	60 81       	ld	r22, Z
    172e:	71 81       	ldd	r23, Z+1	; 0x01
    1730:	88 27       	eor	r24, r24
    1732:	77 fd       	sbrc	r23, 7
    1734:	80 95       	com	r24
    1736:	98 2f       	mov	r25, r24
    1738:	0e 5f       	subi	r16, 0xFE	; 254
    173a:	1f 4f       	sbci	r17, 0xFF	; 255
    173c:	2f 76       	andi	r18, 0x6F	; 111
    173e:	b2 2e       	mov	r11, r18
    1740:	97 ff       	sbrs	r25, 7
    1742:	09 c0       	rjmp	.+18     	; 0x1756 <vfprintf+0x216>
    1744:	90 95       	com	r25
    1746:	80 95       	com	r24
    1748:	70 95       	com	r23
    174a:	61 95       	neg	r22
    174c:	7f 4f       	sbci	r23, 0xFF	; 255
    174e:	8f 4f       	sbci	r24, 0xFF	; 255
    1750:	9f 4f       	sbci	r25, 0xFF	; 255
    1752:	20 68       	ori	r18, 0x80	; 128
    1754:	b2 2e       	mov	r11, r18
    1756:	2a e0       	ldi	r18, 0x0A	; 10
    1758:	30 e0       	ldi	r19, 0x00	; 0
    175a:	a4 01       	movw	r20, r8
    175c:	6f d2       	rcall	.+1246   	; 0x1c3c <__ultoa_invert>
    175e:	a8 2e       	mov	r10, r24
    1760:	a8 18       	sub	r10, r8
    1762:	43 c0       	rjmp	.+134    	; 0x17ea <vfprintf+0x2aa>
    1764:	85 37       	cpi	r24, 0x75	; 117
    1766:	29 f4       	brne	.+10     	; 0x1772 <vfprintf+0x232>
    1768:	2f 7e       	andi	r18, 0xEF	; 239
    176a:	b2 2e       	mov	r11, r18
    176c:	2a e0       	ldi	r18, 0x0A	; 10
    176e:	30 e0       	ldi	r19, 0x00	; 0
    1770:	25 c0       	rjmp	.+74     	; 0x17bc <vfprintf+0x27c>
    1772:	f2 2f       	mov	r31, r18
    1774:	f9 7f       	andi	r31, 0xF9	; 249
    1776:	bf 2e       	mov	r11, r31
    1778:	8f 36       	cpi	r24, 0x6F	; 111
    177a:	c1 f0       	breq	.+48     	; 0x17ac <vfprintf+0x26c>
    177c:	18 f4       	brcc	.+6      	; 0x1784 <vfprintf+0x244>
    177e:	88 35       	cpi	r24, 0x58	; 88
    1780:	79 f0       	breq	.+30     	; 0x17a0 <vfprintf+0x260>
    1782:	ad c0       	rjmp	.+346    	; 0x18de <vfprintf+0x39e>
    1784:	80 37       	cpi	r24, 0x70	; 112
    1786:	19 f0       	breq	.+6      	; 0x178e <vfprintf+0x24e>
    1788:	88 37       	cpi	r24, 0x78	; 120
    178a:	21 f0       	breq	.+8      	; 0x1794 <vfprintf+0x254>
    178c:	a8 c0       	rjmp	.+336    	; 0x18de <vfprintf+0x39e>
    178e:	2f 2f       	mov	r18, r31
    1790:	20 61       	ori	r18, 0x10	; 16
    1792:	b2 2e       	mov	r11, r18
    1794:	b4 fe       	sbrs	r11, 4
    1796:	0d c0       	rjmp	.+26     	; 0x17b2 <vfprintf+0x272>
    1798:	8b 2d       	mov	r24, r11
    179a:	84 60       	ori	r24, 0x04	; 4
    179c:	b8 2e       	mov	r11, r24
    179e:	09 c0       	rjmp	.+18     	; 0x17b2 <vfprintf+0x272>
    17a0:	24 ff       	sbrs	r18, 4
    17a2:	0a c0       	rjmp	.+20     	; 0x17b8 <vfprintf+0x278>
    17a4:	9f 2f       	mov	r25, r31
    17a6:	96 60       	ori	r25, 0x06	; 6
    17a8:	b9 2e       	mov	r11, r25
    17aa:	06 c0       	rjmp	.+12     	; 0x17b8 <vfprintf+0x278>
    17ac:	28 e0       	ldi	r18, 0x08	; 8
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	05 c0       	rjmp	.+10     	; 0x17bc <vfprintf+0x27c>
    17b2:	20 e1       	ldi	r18, 0x10	; 16
    17b4:	30 e0       	ldi	r19, 0x00	; 0
    17b6:	02 c0       	rjmp	.+4      	; 0x17bc <vfprintf+0x27c>
    17b8:	20 e1       	ldi	r18, 0x10	; 16
    17ba:	32 e0       	ldi	r19, 0x02	; 2
    17bc:	f8 01       	movw	r30, r16
    17be:	b7 fe       	sbrs	r11, 7
    17c0:	07 c0       	rjmp	.+14     	; 0x17d0 <vfprintf+0x290>
    17c2:	60 81       	ld	r22, Z
    17c4:	71 81       	ldd	r23, Z+1	; 0x01
    17c6:	82 81       	ldd	r24, Z+2	; 0x02
    17c8:	93 81       	ldd	r25, Z+3	; 0x03
    17ca:	0c 5f       	subi	r16, 0xFC	; 252
    17cc:	1f 4f       	sbci	r17, 0xFF	; 255
    17ce:	06 c0       	rjmp	.+12     	; 0x17dc <vfprintf+0x29c>
    17d0:	60 81       	ld	r22, Z
    17d2:	71 81       	ldd	r23, Z+1	; 0x01
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	0e 5f       	subi	r16, 0xFE	; 254
    17da:	1f 4f       	sbci	r17, 0xFF	; 255
    17dc:	a4 01       	movw	r20, r8
    17de:	2e d2       	rcall	.+1116   	; 0x1c3c <__ultoa_invert>
    17e0:	a8 2e       	mov	r10, r24
    17e2:	a8 18       	sub	r10, r8
    17e4:	fb 2d       	mov	r31, r11
    17e6:	ff 77       	andi	r31, 0x7F	; 127
    17e8:	bf 2e       	mov	r11, r31
    17ea:	b6 fe       	sbrs	r11, 6
    17ec:	0b c0       	rjmp	.+22     	; 0x1804 <vfprintf+0x2c4>
    17ee:	2b 2d       	mov	r18, r11
    17f0:	2e 7f       	andi	r18, 0xFE	; 254
    17f2:	a5 14       	cp	r10, r5
    17f4:	50 f4       	brcc	.+20     	; 0x180a <vfprintf+0x2ca>
    17f6:	b4 fe       	sbrs	r11, 4
    17f8:	0a c0       	rjmp	.+20     	; 0x180e <vfprintf+0x2ce>
    17fa:	b2 fc       	sbrc	r11, 2
    17fc:	08 c0       	rjmp	.+16     	; 0x180e <vfprintf+0x2ce>
    17fe:	2b 2d       	mov	r18, r11
    1800:	2e 7e       	andi	r18, 0xEE	; 238
    1802:	05 c0       	rjmp	.+10     	; 0x180e <vfprintf+0x2ce>
    1804:	7a 2c       	mov	r7, r10
    1806:	2b 2d       	mov	r18, r11
    1808:	03 c0       	rjmp	.+6      	; 0x1810 <vfprintf+0x2d0>
    180a:	7a 2c       	mov	r7, r10
    180c:	01 c0       	rjmp	.+2      	; 0x1810 <vfprintf+0x2d0>
    180e:	75 2c       	mov	r7, r5
    1810:	24 ff       	sbrs	r18, 4
    1812:	0d c0       	rjmp	.+26     	; 0x182e <vfprintf+0x2ee>
    1814:	fe 01       	movw	r30, r28
    1816:	ea 0d       	add	r30, r10
    1818:	f1 1d       	adc	r31, r1
    181a:	80 81       	ld	r24, Z
    181c:	80 33       	cpi	r24, 0x30	; 48
    181e:	11 f4       	brne	.+4      	; 0x1824 <vfprintf+0x2e4>
    1820:	29 7e       	andi	r18, 0xE9	; 233
    1822:	09 c0       	rjmp	.+18     	; 0x1836 <vfprintf+0x2f6>
    1824:	22 ff       	sbrs	r18, 2
    1826:	06 c0       	rjmp	.+12     	; 0x1834 <vfprintf+0x2f4>
    1828:	73 94       	inc	r7
    182a:	73 94       	inc	r7
    182c:	04 c0       	rjmp	.+8      	; 0x1836 <vfprintf+0x2f6>
    182e:	82 2f       	mov	r24, r18
    1830:	86 78       	andi	r24, 0x86	; 134
    1832:	09 f0       	breq	.+2      	; 0x1836 <vfprintf+0x2f6>
    1834:	73 94       	inc	r7
    1836:	23 fd       	sbrc	r18, 3
    1838:	12 c0       	rjmp	.+36     	; 0x185e <vfprintf+0x31e>
    183a:	20 ff       	sbrs	r18, 0
    183c:	06 c0       	rjmp	.+12     	; 0x184a <vfprintf+0x30a>
    183e:	5a 2c       	mov	r5, r10
    1840:	73 14       	cp	r7, r3
    1842:	18 f4       	brcc	.+6      	; 0x184a <vfprintf+0x30a>
    1844:	53 0c       	add	r5, r3
    1846:	57 18       	sub	r5, r7
    1848:	73 2c       	mov	r7, r3
    184a:	73 14       	cp	r7, r3
    184c:	60 f4       	brcc	.+24     	; 0x1866 <vfprintf+0x326>
    184e:	b7 01       	movw	r22, r14
    1850:	80 e2       	ldi	r24, 0x20	; 32
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	2c 87       	std	Y+12, r18	; 0x0c
    1856:	c0 d1       	rcall	.+896    	; 0x1bd8 <fputc>
    1858:	73 94       	inc	r7
    185a:	2c 85       	ldd	r18, Y+12	; 0x0c
    185c:	f6 cf       	rjmp	.-20     	; 0x184a <vfprintf+0x30a>
    185e:	73 14       	cp	r7, r3
    1860:	10 f4       	brcc	.+4      	; 0x1866 <vfprintf+0x326>
    1862:	37 18       	sub	r3, r7
    1864:	01 c0       	rjmp	.+2      	; 0x1868 <vfprintf+0x328>
    1866:	31 2c       	mov	r3, r1
    1868:	24 ff       	sbrs	r18, 4
    186a:	11 c0       	rjmp	.+34     	; 0x188e <vfprintf+0x34e>
    186c:	b7 01       	movw	r22, r14
    186e:	80 e3       	ldi	r24, 0x30	; 48
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	2c 87       	std	Y+12, r18	; 0x0c
    1874:	b1 d1       	rcall	.+866    	; 0x1bd8 <fputc>
    1876:	2c 85       	ldd	r18, Y+12	; 0x0c
    1878:	22 ff       	sbrs	r18, 2
    187a:	16 c0       	rjmp	.+44     	; 0x18a8 <vfprintf+0x368>
    187c:	21 ff       	sbrs	r18, 1
    187e:	03 c0       	rjmp	.+6      	; 0x1886 <vfprintf+0x346>
    1880:	88 e5       	ldi	r24, 0x58	; 88
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	02 c0       	rjmp	.+4      	; 0x188a <vfprintf+0x34a>
    1886:	88 e7       	ldi	r24, 0x78	; 120
    1888:	90 e0       	ldi	r25, 0x00	; 0
    188a:	b7 01       	movw	r22, r14
    188c:	0c c0       	rjmp	.+24     	; 0x18a6 <vfprintf+0x366>
    188e:	82 2f       	mov	r24, r18
    1890:	86 78       	andi	r24, 0x86	; 134
    1892:	51 f0       	breq	.+20     	; 0x18a8 <vfprintf+0x368>
    1894:	21 fd       	sbrc	r18, 1
    1896:	02 c0       	rjmp	.+4      	; 0x189c <vfprintf+0x35c>
    1898:	80 e2       	ldi	r24, 0x20	; 32
    189a:	01 c0       	rjmp	.+2      	; 0x189e <vfprintf+0x35e>
    189c:	8b e2       	ldi	r24, 0x2B	; 43
    189e:	27 fd       	sbrc	r18, 7
    18a0:	8d e2       	ldi	r24, 0x2D	; 45
    18a2:	b7 01       	movw	r22, r14
    18a4:	90 e0       	ldi	r25, 0x00	; 0
    18a6:	98 d1       	rcall	.+816    	; 0x1bd8 <fputc>
    18a8:	a5 14       	cp	r10, r5
    18aa:	30 f4       	brcc	.+12     	; 0x18b8 <vfprintf+0x378>
    18ac:	b7 01       	movw	r22, r14
    18ae:	80 e3       	ldi	r24, 0x30	; 48
    18b0:	90 e0       	ldi	r25, 0x00	; 0
    18b2:	92 d1       	rcall	.+804    	; 0x1bd8 <fputc>
    18b4:	5a 94       	dec	r5
    18b6:	f8 cf       	rjmp	.-16     	; 0x18a8 <vfprintf+0x368>
    18b8:	aa 94       	dec	r10
    18ba:	f4 01       	movw	r30, r8
    18bc:	ea 0d       	add	r30, r10
    18be:	f1 1d       	adc	r31, r1
    18c0:	80 81       	ld	r24, Z
    18c2:	b7 01       	movw	r22, r14
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	88 d1       	rcall	.+784    	; 0x1bd8 <fputc>
    18c8:	a1 10       	cpse	r10, r1
    18ca:	f6 cf       	rjmp	.-20     	; 0x18b8 <vfprintf+0x378>
    18cc:	33 20       	and	r3, r3
    18ce:	09 f4       	brne	.+2      	; 0x18d2 <vfprintf+0x392>
    18d0:	5d ce       	rjmp	.-838    	; 0x158c <vfprintf+0x4c>
    18d2:	b7 01       	movw	r22, r14
    18d4:	80 e2       	ldi	r24, 0x20	; 32
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	7f d1       	rcall	.+766    	; 0x1bd8 <fputc>
    18da:	3a 94       	dec	r3
    18dc:	f7 cf       	rjmp	.-18     	; 0x18cc <vfprintf+0x38c>
    18de:	f7 01       	movw	r30, r14
    18e0:	86 81       	ldd	r24, Z+6	; 0x06
    18e2:	97 81       	ldd	r25, Z+7	; 0x07
    18e4:	02 c0       	rjmp	.+4      	; 0x18ea <vfprintf+0x3aa>
    18e6:	8f ef       	ldi	r24, 0xFF	; 255
    18e8:	9f ef       	ldi	r25, 0xFF	; 255
    18ea:	2c 96       	adiw	r28, 0x0c	; 12
    18ec:	0f b6       	in	r0, 0x3f	; 63
    18ee:	f8 94       	cli
    18f0:	de bf       	out	0x3e, r29	; 62
    18f2:	0f be       	out	0x3f, r0	; 63
    18f4:	cd bf       	out	0x3d, r28	; 61
    18f6:	df 91       	pop	r29
    18f8:	cf 91       	pop	r28
    18fa:	1f 91       	pop	r17
    18fc:	0f 91       	pop	r16
    18fe:	ff 90       	pop	r15
    1900:	ef 90       	pop	r14
    1902:	df 90       	pop	r13
    1904:	cf 90       	pop	r12
    1906:	bf 90       	pop	r11
    1908:	af 90       	pop	r10
    190a:	9f 90       	pop	r9
    190c:	8f 90       	pop	r8
    190e:	7f 90       	pop	r7
    1910:	6f 90       	pop	r6
    1912:	5f 90       	pop	r5
    1914:	4f 90       	pop	r4
    1916:	3f 90       	pop	r3
    1918:	2f 90       	pop	r2
    191a:	08 95       	ret

0000191c <calloc>:
    191c:	0f 93       	push	r16
    191e:	1f 93       	push	r17
    1920:	cf 93       	push	r28
    1922:	df 93       	push	r29
    1924:	86 9f       	mul	r24, r22
    1926:	80 01       	movw	r16, r0
    1928:	87 9f       	mul	r24, r23
    192a:	10 0d       	add	r17, r0
    192c:	96 9f       	mul	r25, r22
    192e:	10 0d       	add	r17, r0
    1930:	11 24       	eor	r1, r1
    1932:	c8 01       	movw	r24, r16
    1934:	0d d0       	rcall	.+26     	; 0x1950 <malloc>
    1936:	ec 01       	movw	r28, r24
    1938:	00 97       	sbiw	r24, 0x00	; 0
    193a:	21 f0       	breq	.+8      	; 0x1944 <calloc+0x28>
    193c:	a8 01       	movw	r20, r16
    193e:	60 e0       	ldi	r22, 0x00	; 0
    1940:	70 e0       	ldi	r23, 0x00	; 0
    1942:	38 d1       	rcall	.+624    	; 0x1bb4 <memset>
    1944:	ce 01       	movw	r24, r28
    1946:	df 91       	pop	r29
    1948:	cf 91       	pop	r28
    194a:	1f 91       	pop	r17
    194c:	0f 91       	pop	r16
    194e:	08 95       	ret

00001950 <malloc>:
    1950:	cf 93       	push	r28
    1952:	df 93       	push	r29
    1954:	82 30       	cpi	r24, 0x02	; 2
    1956:	91 05       	cpc	r25, r1
    1958:	10 f4       	brcc	.+4      	; 0x195e <malloc+0xe>
    195a:	82 e0       	ldi	r24, 0x02	; 2
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	e0 91 6a 03 	lds	r30, 0x036A
    1962:	f0 91 6b 03 	lds	r31, 0x036B
    1966:	20 e0       	ldi	r18, 0x00	; 0
    1968:	30 e0       	ldi	r19, 0x00	; 0
    196a:	a0 e0       	ldi	r26, 0x00	; 0
    196c:	b0 e0       	ldi	r27, 0x00	; 0
    196e:	30 97       	sbiw	r30, 0x00	; 0
    1970:	39 f1       	breq	.+78     	; 0x19c0 <malloc+0x70>
    1972:	40 81       	ld	r20, Z
    1974:	51 81       	ldd	r21, Z+1	; 0x01
    1976:	48 17       	cp	r20, r24
    1978:	59 07       	cpc	r21, r25
    197a:	b8 f0       	brcs	.+46     	; 0x19aa <malloc+0x5a>
    197c:	48 17       	cp	r20, r24
    197e:	59 07       	cpc	r21, r25
    1980:	71 f4       	brne	.+28     	; 0x199e <malloc+0x4e>
    1982:	82 81       	ldd	r24, Z+2	; 0x02
    1984:	93 81       	ldd	r25, Z+3	; 0x03
    1986:	10 97       	sbiw	r26, 0x00	; 0
    1988:	29 f0       	breq	.+10     	; 0x1994 <malloc+0x44>
    198a:	13 96       	adiw	r26, 0x03	; 3
    198c:	9c 93       	st	X, r25
    198e:	8e 93       	st	-X, r24
    1990:	12 97       	sbiw	r26, 0x02	; 2
    1992:	2c c0       	rjmp	.+88     	; 0x19ec <malloc+0x9c>
    1994:	90 93 6b 03 	sts	0x036B, r25
    1998:	80 93 6a 03 	sts	0x036A, r24
    199c:	27 c0       	rjmp	.+78     	; 0x19ec <malloc+0x9c>
    199e:	21 15       	cp	r18, r1
    19a0:	31 05       	cpc	r19, r1
    19a2:	31 f0       	breq	.+12     	; 0x19b0 <malloc+0x60>
    19a4:	42 17       	cp	r20, r18
    19a6:	53 07       	cpc	r21, r19
    19a8:	18 f0       	brcs	.+6      	; 0x19b0 <malloc+0x60>
    19aa:	a9 01       	movw	r20, r18
    19ac:	db 01       	movw	r26, r22
    19ae:	01 c0       	rjmp	.+2      	; 0x19b2 <malloc+0x62>
    19b0:	ef 01       	movw	r28, r30
    19b2:	9a 01       	movw	r18, r20
    19b4:	bd 01       	movw	r22, r26
    19b6:	df 01       	movw	r26, r30
    19b8:	02 80       	ldd	r0, Z+2	; 0x02
    19ba:	f3 81       	ldd	r31, Z+3	; 0x03
    19bc:	e0 2d       	mov	r30, r0
    19be:	d7 cf       	rjmp	.-82     	; 0x196e <malloc+0x1e>
    19c0:	21 15       	cp	r18, r1
    19c2:	31 05       	cpc	r19, r1
    19c4:	f9 f0       	breq	.+62     	; 0x1a04 <malloc+0xb4>
    19c6:	28 1b       	sub	r18, r24
    19c8:	39 0b       	sbc	r19, r25
    19ca:	24 30       	cpi	r18, 0x04	; 4
    19cc:	31 05       	cpc	r19, r1
    19ce:	80 f4       	brcc	.+32     	; 0x19f0 <malloc+0xa0>
    19d0:	8a 81       	ldd	r24, Y+2	; 0x02
    19d2:	9b 81       	ldd	r25, Y+3	; 0x03
    19d4:	61 15       	cp	r22, r1
    19d6:	71 05       	cpc	r23, r1
    19d8:	21 f0       	breq	.+8      	; 0x19e2 <malloc+0x92>
    19da:	fb 01       	movw	r30, r22
    19dc:	93 83       	std	Z+3, r25	; 0x03
    19de:	82 83       	std	Z+2, r24	; 0x02
    19e0:	04 c0       	rjmp	.+8      	; 0x19ea <malloc+0x9a>
    19e2:	90 93 6b 03 	sts	0x036B, r25
    19e6:	80 93 6a 03 	sts	0x036A, r24
    19ea:	fe 01       	movw	r30, r28
    19ec:	32 96       	adiw	r30, 0x02	; 2
    19ee:	44 c0       	rjmp	.+136    	; 0x1a78 <malloc+0x128>
    19f0:	fe 01       	movw	r30, r28
    19f2:	e2 0f       	add	r30, r18
    19f4:	f3 1f       	adc	r31, r19
    19f6:	81 93       	st	Z+, r24
    19f8:	91 93       	st	Z+, r25
    19fa:	22 50       	subi	r18, 0x02	; 2
    19fc:	31 09       	sbc	r19, r1
    19fe:	39 83       	std	Y+1, r19	; 0x01
    1a00:	28 83       	st	Y, r18
    1a02:	3a c0       	rjmp	.+116    	; 0x1a78 <malloc+0x128>
    1a04:	20 91 68 03 	lds	r18, 0x0368
    1a08:	30 91 69 03 	lds	r19, 0x0369
    1a0c:	23 2b       	or	r18, r19
    1a0e:	41 f4       	brne	.+16     	; 0x1a20 <malloc+0xd0>
    1a10:	20 91 02 02 	lds	r18, 0x0202
    1a14:	30 91 03 02 	lds	r19, 0x0203
    1a18:	30 93 69 03 	sts	0x0369, r19
    1a1c:	20 93 68 03 	sts	0x0368, r18
    1a20:	20 91 00 02 	lds	r18, 0x0200
    1a24:	30 91 01 02 	lds	r19, 0x0201
    1a28:	21 15       	cp	r18, r1
    1a2a:	31 05       	cpc	r19, r1
    1a2c:	41 f4       	brne	.+16     	; 0x1a3e <malloc+0xee>
    1a2e:	2d b7       	in	r18, 0x3d	; 61
    1a30:	3e b7       	in	r19, 0x3e	; 62
    1a32:	40 91 04 02 	lds	r20, 0x0204
    1a36:	50 91 05 02 	lds	r21, 0x0205
    1a3a:	24 1b       	sub	r18, r20
    1a3c:	35 0b       	sbc	r19, r21
    1a3e:	e0 91 68 03 	lds	r30, 0x0368
    1a42:	f0 91 69 03 	lds	r31, 0x0369
    1a46:	e2 17       	cp	r30, r18
    1a48:	f3 07       	cpc	r31, r19
    1a4a:	a0 f4       	brcc	.+40     	; 0x1a74 <malloc+0x124>
    1a4c:	2e 1b       	sub	r18, r30
    1a4e:	3f 0b       	sbc	r19, r31
    1a50:	28 17       	cp	r18, r24
    1a52:	39 07       	cpc	r19, r25
    1a54:	78 f0       	brcs	.+30     	; 0x1a74 <malloc+0x124>
    1a56:	ac 01       	movw	r20, r24
    1a58:	4e 5f       	subi	r20, 0xFE	; 254
    1a5a:	5f 4f       	sbci	r21, 0xFF	; 255
    1a5c:	24 17       	cp	r18, r20
    1a5e:	35 07       	cpc	r19, r21
    1a60:	48 f0       	brcs	.+18     	; 0x1a74 <malloc+0x124>
    1a62:	4e 0f       	add	r20, r30
    1a64:	5f 1f       	adc	r21, r31
    1a66:	50 93 69 03 	sts	0x0369, r21
    1a6a:	40 93 68 03 	sts	0x0368, r20
    1a6e:	81 93       	st	Z+, r24
    1a70:	91 93       	st	Z+, r25
    1a72:	02 c0       	rjmp	.+4      	; 0x1a78 <malloc+0x128>
    1a74:	e0 e0       	ldi	r30, 0x00	; 0
    1a76:	f0 e0       	ldi	r31, 0x00	; 0
    1a78:	cf 01       	movw	r24, r30
    1a7a:	df 91       	pop	r29
    1a7c:	cf 91       	pop	r28
    1a7e:	08 95       	ret

00001a80 <free>:
    1a80:	cf 93       	push	r28
    1a82:	df 93       	push	r29
    1a84:	00 97       	sbiw	r24, 0x00	; 0
    1a86:	09 f4       	brne	.+2      	; 0x1a8a <free+0xa>
    1a88:	87 c0       	rjmp	.+270    	; 0x1b98 <free+0x118>
    1a8a:	fc 01       	movw	r30, r24
    1a8c:	32 97       	sbiw	r30, 0x02	; 2
    1a8e:	13 82       	std	Z+3, r1	; 0x03
    1a90:	12 82       	std	Z+2, r1	; 0x02
    1a92:	c0 91 6a 03 	lds	r28, 0x036A
    1a96:	d0 91 6b 03 	lds	r29, 0x036B
    1a9a:	20 97       	sbiw	r28, 0x00	; 0
    1a9c:	81 f4       	brne	.+32     	; 0x1abe <free+0x3e>
    1a9e:	20 81       	ld	r18, Z
    1aa0:	31 81       	ldd	r19, Z+1	; 0x01
    1aa2:	28 0f       	add	r18, r24
    1aa4:	39 1f       	adc	r19, r25
    1aa6:	80 91 68 03 	lds	r24, 0x0368
    1aaa:	90 91 69 03 	lds	r25, 0x0369
    1aae:	82 17       	cp	r24, r18
    1ab0:	93 07       	cpc	r25, r19
    1ab2:	79 f5       	brne	.+94     	; 0x1b12 <free+0x92>
    1ab4:	f0 93 69 03 	sts	0x0369, r31
    1ab8:	e0 93 68 03 	sts	0x0368, r30
    1abc:	6d c0       	rjmp	.+218    	; 0x1b98 <free+0x118>
    1abe:	de 01       	movw	r26, r28
    1ac0:	20 e0       	ldi	r18, 0x00	; 0
    1ac2:	30 e0       	ldi	r19, 0x00	; 0
    1ac4:	ae 17       	cp	r26, r30
    1ac6:	bf 07       	cpc	r27, r31
    1ac8:	50 f4       	brcc	.+20     	; 0x1ade <free+0x5e>
    1aca:	12 96       	adiw	r26, 0x02	; 2
    1acc:	4d 91       	ld	r20, X+
    1ace:	5c 91       	ld	r21, X
    1ad0:	13 97       	sbiw	r26, 0x03	; 3
    1ad2:	9d 01       	movw	r18, r26
    1ad4:	41 15       	cp	r20, r1
    1ad6:	51 05       	cpc	r21, r1
    1ad8:	09 f1       	breq	.+66     	; 0x1b1c <free+0x9c>
    1ada:	da 01       	movw	r26, r20
    1adc:	f3 cf       	rjmp	.-26     	; 0x1ac4 <free+0x44>
    1ade:	b3 83       	std	Z+3, r27	; 0x03
    1ae0:	a2 83       	std	Z+2, r26	; 0x02
    1ae2:	40 81       	ld	r20, Z
    1ae4:	51 81       	ldd	r21, Z+1	; 0x01
    1ae6:	84 0f       	add	r24, r20
    1ae8:	95 1f       	adc	r25, r21
    1aea:	8a 17       	cp	r24, r26
    1aec:	9b 07       	cpc	r25, r27
    1aee:	71 f4       	brne	.+28     	; 0x1b0c <free+0x8c>
    1af0:	8d 91       	ld	r24, X+
    1af2:	9c 91       	ld	r25, X
    1af4:	11 97       	sbiw	r26, 0x01	; 1
    1af6:	84 0f       	add	r24, r20
    1af8:	95 1f       	adc	r25, r21
    1afa:	02 96       	adiw	r24, 0x02	; 2
    1afc:	91 83       	std	Z+1, r25	; 0x01
    1afe:	80 83       	st	Z, r24
    1b00:	12 96       	adiw	r26, 0x02	; 2
    1b02:	8d 91       	ld	r24, X+
    1b04:	9c 91       	ld	r25, X
    1b06:	13 97       	sbiw	r26, 0x03	; 3
    1b08:	93 83       	std	Z+3, r25	; 0x03
    1b0a:	82 83       	std	Z+2, r24	; 0x02
    1b0c:	21 15       	cp	r18, r1
    1b0e:	31 05       	cpc	r19, r1
    1b10:	29 f4       	brne	.+10     	; 0x1b1c <free+0x9c>
    1b12:	f0 93 6b 03 	sts	0x036B, r31
    1b16:	e0 93 6a 03 	sts	0x036A, r30
    1b1a:	3e c0       	rjmp	.+124    	; 0x1b98 <free+0x118>
    1b1c:	d9 01       	movw	r26, r18
    1b1e:	13 96       	adiw	r26, 0x03	; 3
    1b20:	fc 93       	st	X, r31
    1b22:	ee 93       	st	-X, r30
    1b24:	12 97       	sbiw	r26, 0x02	; 2
    1b26:	4d 91       	ld	r20, X+
    1b28:	5d 91       	ld	r21, X+
    1b2a:	a4 0f       	add	r26, r20
    1b2c:	b5 1f       	adc	r27, r21
    1b2e:	ea 17       	cp	r30, r26
    1b30:	fb 07       	cpc	r31, r27
    1b32:	79 f4       	brne	.+30     	; 0x1b52 <free+0xd2>
    1b34:	80 81       	ld	r24, Z
    1b36:	91 81       	ldd	r25, Z+1	; 0x01
    1b38:	84 0f       	add	r24, r20
    1b3a:	95 1f       	adc	r25, r21
    1b3c:	02 96       	adiw	r24, 0x02	; 2
    1b3e:	d9 01       	movw	r26, r18
    1b40:	11 96       	adiw	r26, 0x01	; 1
    1b42:	9c 93       	st	X, r25
    1b44:	8e 93       	st	-X, r24
    1b46:	82 81       	ldd	r24, Z+2	; 0x02
    1b48:	93 81       	ldd	r25, Z+3	; 0x03
    1b4a:	13 96       	adiw	r26, 0x03	; 3
    1b4c:	9c 93       	st	X, r25
    1b4e:	8e 93       	st	-X, r24
    1b50:	12 97       	sbiw	r26, 0x02	; 2
    1b52:	e0 e0       	ldi	r30, 0x00	; 0
    1b54:	f0 e0       	ldi	r31, 0x00	; 0
    1b56:	8a 81       	ldd	r24, Y+2	; 0x02
    1b58:	9b 81       	ldd	r25, Y+3	; 0x03
    1b5a:	00 97       	sbiw	r24, 0x00	; 0
    1b5c:	19 f0       	breq	.+6      	; 0x1b64 <free+0xe4>
    1b5e:	fe 01       	movw	r30, r28
    1b60:	ec 01       	movw	r28, r24
    1b62:	f9 cf       	rjmp	.-14     	; 0x1b56 <free+0xd6>
    1b64:	ce 01       	movw	r24, r28
    1b66:	02 96       	adiw	r24, 0x02	; 2
    1b68:	28 81       	ld	r18, Y
    1b6a:	39 81       	ldd	r19, Y+1	; 0x01
    1b6c:	82 0f       	add	r24, r18
    1b6e:	93 1f       	adc	r25, r19
    1b70:	20 91 68 03 	lds	r18, 0x0368
    1b74:	30 91 69 03 	lds	r19, 0x0369
    1b78:	28 17       	cp	r18, r24
    1b7a:	39 07       	cpc	r19, r25
    1b7c:	69 f4       	brne	.+26     	; 0x1b98 <free+0x118>
    1b7e:	30 97       	sbiw	r30, 0x00	; 0
    1b80:	29 f4       	brne	.+10     	; 0x1b8c <free+0x10c>
    1b82:	10 92 6b 03 	sts	0x036B, r1
    1b86:	10 92 6a 03 	sts	0x036A, r1
    1b8a:	02 c0       	rjmp	.+4      	; 0x1b90 <free+0x110>
    1b8c:	13 82       	std	Z+3, r1	; 0x03
    1b8e:	12 82       	std	Z+2, r1	; 0x02
    1b90:	d0 93 69 03 	sts	0x0369, r29
    1b94:	c0 93 68 03 	sts	0x0368, r28
    1b98:	df 91       	pop	r29
    1b9a:	cf 91       	pop	r28
    1b9c:	08 95       	ret

00001b9e <strnlen_P>:
    1b9e:	fc 01       	movw	r30, r24
    1ba0:	05 90       	lpm	r0, Z+
    1ba2:	61 50       	subi	r22, 0x01	; 1
    1ba4:	70 40       	sbci	r23, 0x00	; 0
    1ba6:	01 10       	cpse	r0, r1
    1ba8:	d8 f7       	brcc	.-10     	; 0x1ba0 <strnlen_P+0x2>
    1baa:	80 95       	com	r24
    1bac:	90 95       	com	r25
    1bae:	8e 0f       	add	r24, r30
    1bb0:	9f 1f       	adc	r25, r31
    1bb2:	08 95       	ret

00001bb4 <memset>:
    1bb4:	dc 01       	movw	r26, r24
    1bb6:	01 c0       	rjmp	.+2      	; 0x1bba <memset+0x6>
    1bb8:	6d 93       	st	X+, r22
    1bba:	41 50       	subi	r20, 0x01	; 1
    1bbc:	50 40       	sbci	r21, 0x00	; 0
    1bbe:	e0 f7       	brcc	.-8      	; 0x1bb8 <memset+0x4>
    1bc0:	08 95       	ret

00001bc2 <strnlen>:
    1bc2:	fc 01       	movw	r30, r24
    1bc4:	61 50       	subi	r22, 0x01	; 1
    1bc6:	70 40       	sbci	r23, 0x00	; 0
    1bc8:	01 90       	ld	r0, Z+
    1bca:	01 10       	cpse	r0, r1
    1bcc:	d8 f7       	brcc	.-10     	; 0x1bc4 <strnlen+0x2>
    1bce:	80 95       	com	r24
    1bd0:	90 95       	com	r25
    1bd2:	8e 0f       	add	r24, r30
    1bd4:	9f 1f       	adc	r25, r31
    1bd6:	08 95       	ret

00001bd8 <fputc>:
    1bd8:	0f 93       	push	r16
    1bda:	1f 93       	push	r17
    1bdc:	cf 93       	push	r28
    1bde:	df 93       	push	r29
    1be0:	18 2f       	mov	r17, r24
    1be2:	09 2f       	mov	r16, r25
    1be4:	eb 01       	movw	r28, r22
    1be6:	8b 81       	ldd	r24, Y+3	; 0x03
    1be8:	81 fd       	sbrc	r24, 1
    1bea:	03 c0       	rjmp	.+6      	; 0x1bf2 <fputc+0x1a>
    1bec:	8f ef       	ldi	r24, 0xFF	; 255
    1bee:	9f ef       	ldi	r25, 0xFF	; 255
    1bf0:	20 c0       	rjmp	.+64     	; 0x1c32 <fputc+0x5a>
    1bf2:	82 ff       	sbrs	r24, 2
    1bf4:	10 c0       	rjmp	.+32     	; 0x1c16 <fputc+0x3e>
    1bf6:	4e 81       	ldd	r20, Y+6	; 0x06
    1bf8:	5f 81       	ldd	r21, Y+7	; 0x07
    1bfa:	2c 81       	ldd	r18, Y+4	; 0x04
    1bfc:	3d 81       	ldd	r19, Y+5	; 0x05
    1bfe:	42 17       	cp	r20, r18
    1c00:	53 07       	cpc	r21, r19
    1c02:	7c f4       	brge	.+30     	; 0x1c22 <fputc+0x4a>
    1c04:	e8 81       	ld	r30, Y
    1c06:	f9 81       	ldd	r31, Y+1	; 0x01
    1c08:	9f 01       	movw	r18, r30
    1c0a:	2f 5f       	subi	r18, 0xFF	; 255
    1c0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c0e:	39 83       	std	Y+1, r19	; 0x01
    1c10:	28 83       	st	Y, r18
    1c12:	10 83       	st	Z, r17
    1c14:	06 c0       	rjmp	.+12     	; 0x1c22 <fputc+0x4a>
    1c16:	e8 85       	ldd	r30, Y+8	; 0x08
    1c18:	f9 85       	ldd	r31, Y+9	; 0x09
    1c1a:	81 2f       	mov	r24, r17
    1c1c:	19 95       	eicall
    1c1e:	89 2b       	or	r24, r25
    1c20:	29 f7       	brne	.-54     	; 0x1bec <fputc+0x14>
    1c22:	2e 81       	ldd	r18, Y+6	; 0x06
    1c24:	3f 81       	ldd	r19, Y+7	; 0x07
    1c26:	2f 5f       	subi	r18, 0xFF	; 255
    1c28:	3f 4f       	sbci	r19, 0xFF	; 255
    1c2a:	3f 83       	std	Y+7, r19	; 0x07
    1c2c:	2e 83       	std	Y+6, r18	; 0x06
    1c2e:	81 2f       	mov	r24, r17
    1c30:	90 2f       	mov	r25, r16
    1c32:	df 91       	pop	r29
    1c34:	cf 91       	pop	r28
    1c36:	1f 91       	pop	r17
    1c38:	0f 91       	pop	r16
    1c3a:	08 95       	ret

00001c3c <__ultoa_invert>:
    1c3c:	fa 01       	movw	r30, r20
    1c3e:	aa 27       	eor	r26, r26
    1c40:	28 30       	cpi	r18, 0x08	; 8
    1c42:	51 f1       	breq	.+84     	; 0x1c98 <__ultoa_invert+0x5c>
    1c44:	20 31       	cpi	r18, 0x10	; 16
    1c46:	81 f1       	breq	.+96     	; 0x1ca8 <__ultoa_invert+0x6c>
    1c48:	e8 94       	clt
    1c4a:	6f 93       	push	r22
    1c4c:	6e 7f       	andi	r22, 0xFE	; 254
    1c4e:	6e 5f       	subi	r22, 0xFE	; 254
    1c50:	7f 4f       	sbci	r23, 0xFF	; 255
    1c52:	8f 4f       	sbci	r24, 0xFF	; 255
    1c54:	9f 4f       	sbci	r25, 0xFF	; 255
    1c56:	af 4f       	sbci	r26, 0xFF	; 255
    1c58:	b1 e0       	ldi	r27, 0x01	; 1
    1c5a:	3e d0       	rcall	.+124    	; 0x1cd8 <__ultoa_invert+0x9c>
    1c5c:	b4 e0       	ldi	r27, 0x04	; 4
    1c5e:	3c d0       	rcall	.+120    	; 0x1cd8 <__ultoa_invert+0x9c>
    1c60:	67 0f       	add	r22, r23
    1c62:	78 1f       	adc	r23, r24
    1c64:	89 1f       	adc	r24, r25
    1c66:	9a 1f       	adc	r25, r26
    1c68:	a1 1d       	adc	r26, r1
    1c6a:	68 0f       	add	r22, r24
    1c6c:	79 1f       	adc	r23, r25
    1c6e:	8a 1f       	adc	r24, r26
    1c70:	91 1d       	adc	r25, r1
    1c72:	a1 1d       	adc	r26, r1
    1c74:	6a 0f       	add	r22, r26
    1c76:	71 1d       	adc	r23, r1
    1c78:	81 1d       	adc	r24, r1
    1c7a:	91 1d       	adc	r25, r1
    1c7c:	a1 1d       	adc	r26, r1
    1c7e:	20 d0       	rcall	.+64     	; 0x1cc0 <__ultoa_invert+0x84>
    1c80:	09 f4       	brne	.+2      	; 0x1c84 <__ultoa_invert+0x48>
    1c82:	68 94       	set
    1c84:	3f 91       	pop	r19
    1c86:	2a e0       	ldi	r18, 0x0A	; 10
    1c88:	26 9f       	mul	r18, r22
    1c8a:	11 24       	eor	r1, r1
    1c8c:	30 19       	sub	r19, r0
    1c8e:	30 5d       	subi	r19, 0xD0	; 208
    1c90:	31 93       	st	Z+, r19
    1c92:	de f6       	brtc	.-74     	; 0x1c4a <__ultoa_invert+0xe>
    1c94:	cf 01       	movw	r24, r30
    1c96:	08 95       	ret
    1c98:	46 2f       	mov	r20, r22
    1c9a:	47 70       	andi	r20, 0x07	; 7
    1c9c:	40 5d       	subi	r20, 0xD0	; 208
    1c9e:	41 93       	st	Z+, r20
    1ca0:	b3 e0       	ldi	r27, 0x03	; 3
    1ca2:	0f d0       	rcall	.+30     	; 0x1cc2 <__ultoa_invert+0x86>
    1ca4:	c9 f7       	brne	.-14     	; 0x1c98 <__ultoa_invert+0x5c>
    1ca6:	f6 cf       	rjmp	.-20     	; 0x1c94 <__ultoa_invert+0x58>
    1ca8:	46 2f       	mov	r20, r22
    1caa:	4f 70       	andi	r20, 0x0F	; 15
    1cac:	40 5d       	subi	r20, 0xD0	; 208
    1cae:	4a 33       	cpi	r20, 0x3A	; 58
    1cb0:	18 f0       	brcs	.+6      	; 0x1cb8 <__ultoa_invert+0x7c>
    1cb2:	49 5d       	subi	r20, 0xD9	; 217
    1cb4:	31 fd       	sbrc	r19, 1
    1cb6:	40 52       	subi	r20, 0x20	; 32
    1cb8:	41 93       	st	Z+, r20
    1cba:	02 d0       	rcall	.+4      	; 0x1cc0 <__ultoa_invert+0x84>
    1cbc:	a9 f7       	brne	.-22     	; 0x1ca8 <__ultoa_invert+0x6c>
    1cbe:	ea cf       	rjmp	.-44     	; 0x1c94 <__ultoa_invert+0x58>
    1cc0:	b4 e0       	ldi	r27, 0x04	; 4
    1cc2:	a6 95       	lsr	r26
    1cc4:	97 95       	ror	r25
    1cc6:	87 95       	ror	r24
    1cc8:	77 95       	ror	r23
    1cca:	67 95       	ror	r22
    1ccc:	ba 95       	dec	r27
    1cce:	c9 f7       	brne	.-14     	; 0x1cc2 <__ultoa_invert+0x86>
    1cd0:	00 97       	sbiw	r24, 0x00	; 0
    1cd2:	61 05       	cpc	r22, r1
    1cd4:	71 05       	cpc	r23, r1
    1cd6:	08 95       	ret
    1cd8:	9b 01       	movw	r18, r22
    1cda:	ac 01       	movw	r20, r24
    1cdc:	0a 2e       	mov	r0, r26
    1cde:	06 94       	lsr	r0
    1ce0:	57 95       	ror	r21
    1ce2:	47 95       	ror	r20
    1ce4:	37 95       	ror	r19
    1ce6:	27 95       	ror	r18
    1ce8:	ba 95       	dec	r27
    1cea:	c9 f7       	brne	.-14     	; 0x1cde <__ultoa_invert+0xa2>
    1cec:	62 0f       	add	r22, r18
    1cee:	73 1f       	adc	r23, r19
    1cf0:	84 1f       	adc	r24, r20
    1cf2:	95 1f       	adc	r25, r21
    1cf4:	a0 1d       	adc	r26, r0
    1cf6:	08 95       	ret

00001cf8 <_exit>:
    1cf8:	f8 94       	cli

00001cfa <__stop_program>:
    1cfa:	ff cf       	rjmp	.-2      	; 0x1cfa <__stop_program>
